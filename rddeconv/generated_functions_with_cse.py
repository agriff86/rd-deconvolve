
"""
Functions generated using Sage

Total count functions (tf_*) assume an inlet radon concentration of 1 Bq/m3
i.e. the result should be multiplied by the inlet radon concentration in
Bq/m3, converted from ambient temperature and pressure to the temperature
and pressure inside the radon detector.
"""

from numpy import exp
from numpy import sqrt
from numpy import abs

lambda_r = 2.100140526711101e-6
lambda_a = 0.003787689511256532
lambda_b = 0.0004310616794527023
lambda_c = 0.0005805252768508755
def calc_na_nb_factors(Q,lamp,V_tank, **kwargs):
    N_af = lambda_r*(exp(V_tank*lambda_a/Q + V_tank*lamp/Q)/lambda_r - 1/lambda_r)*exp(-V_tank*lamp/Q)/(lambda_a*exp(V_tank*lambda_a/Q) + lamp*exp(V_tank*lambda_a/Q))
    N_bf = -lambda_r*(lambda_a**2*exp(V_tank*lambda_a/Q)/lambda_r - lambda_a*lambda_b*exp(V_tank*lambda_b/Q)/lambda_r + lamp*(lambda_a*exp(V_tank*lambda_a/Q)/lambda_r - lambda_a*exp(V_tank*lambda_b/Q)/lambda_r) - (lambda_a**2*exp(V_tank*lambda_a/Q)/lambda_r - lambda_a*lambda_b*exp(V_tank*lambda_a/Q)/lambda_r)*exp(V_tank*lambda_b/Q + V_tank*lamp/Q))*exp(-V_tank*lamp/Q)/(lamp**2*(lambda_a*exp(V_tank*lambda_a/Q) - lambda_b*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q) + lamp*(lambda_a**2*exp(V_tank*lambda_a/Q) - lambda_b**2*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q) + (lambda_a**2*lambda_b*exp(V_tank*lambda_a/Q) - lambda_a*lambda_b**2*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q))

    return N_af,N_bf


def num_filter_atoms_steady_state(rs,recoil_prob,V_tank,Q,lamp, **kwargs):
    Na = Q*rs*(exp(V_tank*lambda_a/Q + V_tank*lamp/Q) - 1)*exp(-V_tank*lamp/Q)/(lambda_a*(lambda_a*exp(V_tank*lambda_a/Q) + lamp*exp(V_tank*lambda_a/Q)))
    Nb = -Q*recoil_prob*rs*(exp(V_tank*lambda_a/Q + V_tank*lamp/Q) - 1)*exp(-V_tank*lamp/Q)/(lambda_b*(lambda_a*exp(V_tank*lambda_a/Q) + lamp*exp(V_tank*lambda_a/Q))) - Q*rs*(lambda_a**2*exp(V_tank*lambda_a/Q) - lambda_a*lambda_b*exp(V_tank*lambda_b/Q) + lamp*(lambda_a*exp(V_tank*lambda_a/Q) - lambda_a*exp(V_tank*lambda_b/Q)) - (lambda_a**2*exp(V_tank*lambda_a/Q) - lambda_a*lambda_b*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q + V_tank*lamp/Q))*exp(-V_tank*lamp/Q)/(lambda_b*(lamp**2*(lambda_a*exp(V_tank*lambda_a/Q) - lambda_b*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q) + lamp*(lambda_a**2*exp(V_tank*lambda_a/Q) - lambda_b**2*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q) + (lambda_a**2*lambda_b*exp(V_tank*lambda_a/Q) - lambda_a*lambda_b**2*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q))) + Q*rs*(exp(V_tank*lambda_a/Q + V_tank*lamp/Q) - 1)*exp(-V_tank*lamp/Q)/(lambda_b*(lambda_a*exp(V_tank*lambda_a/Q) + lamp*exp(V_tank*lambda_a/Q)))
    Nc = -Q*recoil_prob*rs*(exp(V_tank*lambda_a/Q + V_tank*lamp/Q) - 1)*exp(-V_tank*lamp/Q)/(lambda_c*(lambda_a*exp(V_tank*lambda_a/Q) + lamp*exp(V_tank*lambda_a/Q))) - Q*rs*(lambda_a**2*exp(V_tank*lambda_a/Q) - lambda_a*lambda_b*exp(V_tank*lambda_b/Q) + lamp*(lambda_a*exp(V_tank*lambda_a/Q) - lambda_a*exp(V_tank*lambda_b/Q)) - (lambda_a**2*exp(V_tank*lambda_a/Q) - lambda_a*lambda_b*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q + V_tank*lamp/Q))*exp(-V_tank*lamp/Q)/(lambda_c*(lamp**2*(lambda_a*exp(V_tank*lambda_a/Q) - lambda_b*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q) + lamp*(lambda_a**2*exp(V_tank*lambda_a/Q) - lambda_b**2*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q) + (lambda_a**2*lambda_b*exp(V_tank*lambda_a/Q) - lambda_a*lambda_b**2*exp(V_tank*lambda_a/Q))*exp(V_tank*lambda_b/Q))) + Q*rs*(exp(V_tank*lambda_a/Q + V_tank*lamp/Q) - 1)*exp(-V_tank*lamp/Q)/(lambda_c*(lambda_a*exp(V_tank*lambda_a/Q) + lamp*exp(V_tank*lambda_a/Q)))

    return Na,Nb,Nc


def tc_integral_filter_activity(N_d0,V_tank,Q,a0,b0,N_bf,N_af,c0,V_delay,rs,recoil_prob,N_r0,Q_external,eff,t, **kwargs):
    X = -eff*((-(((rs*(lambda_b**4*(lambda_a**3*(N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 + Q*Q_external**3*V_delay**2*V_tank**3*(N_af*N_d0 - N_af*N_r0))) - lambda_b**3*(lambda_a**4*(N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) + lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3 + Q*Q_external**3*V_delay**3*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_af*N_r0*Q*Q_external**4*V_tank**4 + Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0))) + lambda_b**2*(lambda_a**4*(N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 + Q*Q_external**3*V_delay**3*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a**3*(N_af*N_r0*Q*Q_external**4*V_tank**4 + Q*Q_external**4*V_delay*V_tank**3*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_r0*Q*Q_external**5*V_tank**3 + Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - N_af*N_r0))) - lambda_b*(lambda_a**4*(N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 + Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a**3*(N_af*N_r0*Q*Q_external**5*V_tank**3 + Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - N_af*N_r0))) - lambda_c**4*(lambda_a**3*(N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 + Q*Q_external**3*V_delay**2*V_tank**3*(N_af*N_d0 - N_af*N_r0)) - lambda_b**3*(N_bf*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**2*(N_r0*Q*V_delay**3*V_tank**5*(2*N_af + N_bf) + Q*V_delay**4*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(2*N_af + N_bf))) - lambda_a*(N_r0*Q*Q_external*V_delay**2*V_tank**5*(2*N_af + N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + Q*Q_external*V_delay**3*V_tank**4*(-2*N_af*N_r0 + N_d0*(2*N_af + N_bf)))) + lambda_b**2*(N_bf*N_r0*Q*Q_external**3*V_delay*V_tank**4 + Q*Q_external**3*V_delay**2*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**3*(N_r0*Q*V_delay**3*V_tank**5*(2*N_af + N_bf) + Q*V_delay**4*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(2*N_af + N_bf))) + lambda_a**2*(N_r0*Q*Q_external*V_delay**3*V_tank**4*(N_af - N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_d0*(N_af - N_bf) - N_r0*(N_af - N_bf))) - lambda_a*(N_r0*Q*Q_external**2*V_delay*V_tank**5*(2*N_af + N_bf) + Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**2*V_delay**2*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf)))) - lambda_b*(lambda_a**3*(N_r0*Q*Q_external*V_delay**2*V_tank**5*(2*N_af + N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_af*N_d0 - N_af*N_r0) + Q*Q_external*V_delay**3*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**2*(N_r0*Q*Q_external**2*V_delay*V_tank**5*(2*N_af + N_bf) + Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + Q*Q_external**2*V_delay**2*V_tank**4*(-2*N_af*N_r0 + N_d0*(2*N_af + N_bf))) - lambda_a*(N_r0*Q*Q_external**3*V_delay*V_tank**4*(N_af - N_bf) + Q*Q_external**3*V_delay**2*V_tank**3*(N_d0*(N_af - N_bf) - N_r0*(N_af - N_bf))))) + lambda_c**3*(lambda_a**4*(N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) + lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3 + Q*Q_external**3*V_delay**3*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_af*N_r0*Q*Q_external**4*V_tank**4 + Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_b**4*(N_bf*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**2*(N_r0*Q*V_delay**3*V_tank**5*(2*N_af + N_bf) + Q*V_delay**4*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(2*N_af + N_bf))) - lambda_a*(N_r0*Q*Q_external*V_delay**2*V_tank**5*(2*N_af + N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + Q*Q_external*V_delay**3*V_tank**4*(-2*N_af*N_r0 + N_d0*(2*N_af + N_bf)))) + lambda_b**2*(N_bf*N_r0*Q*Q_external**4*V_tank**4 + Q*Q_external**4*V_delay*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**4*(N_r0*Q*V_delay**3*V_tank**5*(2*N_af + N_bf) + Q*V_delay**4*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(2*N_af + N_bf))) + lambda_a**3*(N_r0*Q*Q_external*V_delay**3*V_tank**4*(N_af - N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_d0*(N_af - N_bf) - N_r0*(N_af - N_bf))) + lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay**3*V_tank**3 + Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_r0*Q*Q_external**3*V_tank**5*(2*N_af + N_bf) + Q*Q_external**3*V_delay**3*V_tank**2*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**3*V_delay*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf)))) - lambda_b*(lambda_a**4*(N_r0*Q*Q_external*V_delay**2*V_tank**5*(2*N_af + N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_af*N_d0 - N_af*N_r0) + Q*Q_external*V_delay**3*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf))) + lambda_a**3*(N_r0*Q*Q_external**2*V_delay**2*V_tank**4*(N_af - N_bf) + Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_r0 + N_d0*(N_af - N_bf))) - lambda_a**2*(N_r0*Q*Q_external**3*V_tank**5*(2*N_af + N_bf) + Q*Q_external**3*V_delay**2*V_tank**3*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**3*V_delay*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a*(N_r0*Q*Q_external**4*V_tank**4*(N_af - N_bf) + Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**4*V_delay*V_tank**3*(N_bf*N_r0 + N_d0*(N_af - N_bf))))) - lambda_c**2*(lambda_a**4*(N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 + Q*Q_external**3*V_delay**3*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a**3*(N_af*N_r0*Q*Q_external**4*V_tank**4 + Q*Q_external**4*V_delay*V_tank**3*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_r0*Q*Q_external**5*V_tank**3 + Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_b**4*(N_bf*N_r0*Q*Q_external**3*V_delay*V_tank**4 + Q*Q_external**3*V_delay**2*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**3*(N_r0*Q*V_delay**3*V_tank**5*(2*N_af + N_bf) + Q*V_delay**4*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(2*N_af + N_bf))) + lambda_a**2*(N_r0*Q*Q_external*V_delay**3*V_tank**4*(N_af - N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_d0*(N_af - N_bf) - N_r0*(N_af - N_bf))) - lambda_a*(N_r0*Q*Q_external**2*V_delay*V_tank**5*(2*N_af + N_bf) + Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**2*V_delay**2*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf)))) + lambda_b**3*(N_bf*N_r0*Q*Q_external**4*V_tank**4 + Q*Q_external**4*V_delay*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**4*(N_r0*Q*V_delay**3*V_tank**5*(2*N_af + N_bf) + Q*V_delay**4*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(2*N_af + N_bf))) + lambda_a**3*(N_r0*Q*Q_external*V_delay**3*V_tank**4*(N_af - N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_d0*(N_af - N_bf) - N_r0*(N_af - N_bf))) + lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay**3*V_tank**3 + Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_r0*Q*Q_external**3*V_tank**5*(2*N_af + N_bf) + Q*Q_external**3*V_delay**3*V_tank**2*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**3*V_delay*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf)))) - lambda_b*(lambda_a**4*(N_af*N_d0*Q*Q_external**2*V_delay**3*V_tank**3 + N_r0*Q*Q_external**2*V_delay*V_tank**5*(2*N_af + N_bf) + Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**2*V_delay**2*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**3*(N_r0*Q*Q_external**3*V_tank**5*(2*N_af + N_bf) + Q*Q_external**3*V_delay**2*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + Q*Q_external**3*V_delay*V_tank**4*(-2*N_af*N_r0 + N_d0*(2*N_af + N_bf))) - lambda_a**2*(N_r0*Q*Q_external**4*V_tank**4*(N_af - N_bf) + Q*Q_external**4*V_delay*V_tank**3*(N_d0*(N_af - N_bf) - N_r0*(N_af - N_bf))) - lambda_a*(N_af*N_r0*Q*Q_external**5*V_tank**3 + Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - N_af*N_r0)))) + lambda_c*(lambda_a**4*(N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 + Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a**3*(N_af*N_r0*Q*Q_external**5*V_tank**3 + Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_b**4*(lambda_a**3*(N_r0*Q*Q_external*V_delay**2*V_tank**5*(2*N_af + N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_af*N_d0 - N_af*N_r0) + Q*Q_external*V_delay**3*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**2*(N_r0*Q*Q_external**2*V_delay*V_tank**5*(2*N_af + N_bf) + Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + Q*Q_external**2*V_delay**2*V_tank**4*(-2*N_af*N_r0 + N_d0*(2*N_af + N_bf))) - lambda_a*(N_r0*Q*Q_external**3*V_delay*V_tank**4*(N_af - N_bf) + Q*Q_external**3*V_delay**2*V_tank**3*(N_d0*(N_af - N_bf) - N_r0*(N_af - N_bf)))) + lambda_b**3*(lambda_a**4*(N_r0*Q*Q_external*V_delay**2*V_tank**5*(2*N_af + N_bf) + Q*Q_external*V_delay**4*V_tank**3*(N_af*N_d0 - N_af*N_r0) + Q*Q_external*V_delay**3*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf))) + lambda_a**3*(N_r0*Q*Q_external**2*V_delay**2*V_tank**4*(N_af - N_bf) + Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_r0 + N_d0*(N_af - N_bf))) - lambda_a**2*(N_r0*Q*Q_external**3*V_tank**5*(2*N_af + N_bf) + Q*Q_external**3*V_delay**2*V_tank**3*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**3*V_delay*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a*(N_r0*Q*Q_external**4*V_tank**4*(N_af - N_bf) + Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**4*V_delay*V_tank**3*(N_bf*N_r0 + N_d0*(N_af - N_bf)))) - lambda_b**2*(lambda_a**4*(N_af*N_d0*Q*Q_external**2*V_delay**3*V_tank**3 + N_r0*Q*Q_external**2*V_delay*V_tank**5*(2*N_af + N_bf) + Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - N_af*N_r0) + Q*Q_external**2*V_delay**2*V_tank**4*(N_d0*(2*N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**3*(N_r0*Q*Q_external**3*V_tank**5*(2*N_af + N_bf) + Q*Q_external**3*V_delay**2*V_tank**3*(N_bf*N_d0 - N_bf*N_r0) + Q*Q_external**3*V_delay*V_tank**4*(-2*N_af*N_r0 + N_d0*(2*N_af + N_bf))) - lambda_a**2*(N_r0*Q*Q_external**4*V_tank**4*(N_af - N_bf) + Q*Q_external**4*V_delay*V_tank**3*(N_d0*(N_af - N_bf) - N_r0*(N_af - N_bf))) - lambda_a*(N_af*N_r0*Q*Q_external**5*V_tank**3 + Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - N_af*N_r0)))) - recoil_prob*(lambda_c**4*(lambda_b**3*(lambda_a**2*(N_af*N_r0*Q*V_delay**3*V_tank**5 + Q*V_delay**4*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_r0*Q*Q_external*V_delay**2*V_tank**5 + Q*Q_external*V_delay**3*V_tank**4*(N_af*N_d0 - N_af*N_r0))) - lambda_b**2*(lambda_a**3*(N_af*N_r0*Q*V_delay**3*V_tank**5 + Q*V_delay**4*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_r0*Q*Q_external**2*V_delay*V_tank**5 + Q*Q_external**2*V_delay**2*V_tank**4*(N_af*N_d0 - N_af*N_r0))) + lambda_b*(lambda_a**3*(N_af*N_r0*Q*Q_external*V_delay**2*V_tank**5 + Q*Q_external*V_delay**3*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay*V_tank**5 + Q*Q_external**2*V_delay**2*V_tank**4*(N_af*N_d0 - N_af*N_r0)))) - lambda_c**3*(lambda_b**4*(lambda_a**2*(N_af*N_r0*Q*V_delay**3*V_tank**5 + Q*V_delay**4*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_r0*Q*Q_external*V_delay**2*V_tank**5 + Q*Q_external*V_delay**3*V_tank**4*(N_af*N_d0 - N_af*N_r0))) - lambda_b**2*(lambda_a**4*(N_af*N_r0*Q*V_delay**3*V_tank**5 + Q*V_delay**4*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_r0*Q*Q_external**3*V_tank**5 + Q*Q_external**3*V_delay*V_tank**4*(N_af*N_d0 - N_af*N_r0))) + lambda_b*(lambda_a**4*(N_af*N_r0*Q*Q_external*V_delay**2*V_tank**5 + Q*Q_external*V_delay**3*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_r0*Q*Q_external**3*V_tank**5 + Q*Q_external**3*V_delay*V_tank**4*(N_af*N_d0 - N_af*N_r0)))) + lambda_c**2*(lambda_b**4*(lambda_a**3*(N_af*N_r0*Q*V_delay**3*V_tank**5 + Q*V_delay**4*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_r0*Q*Q_external**2*V_delay*V_tank**5 + Q*Q_external**2*V_delay**2*V_tank**4*(N_af*N_d0 - N_af*N_r0))) - lambda_b**3*(lambda_a**4*(N_af*N_r0*Q*V_delay**3*V_tank**5 + Q*V_delay**4*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_r0*Q*Q_external**3*V_tank**5 + Q*Q_external**3*V_delay*V_tank**4*(N_af*N_d0 - N_af*N_r0))) + lambda_b*(lambda_a**4*(N_af*N_r0*Q*Q_external**2*V_delay*V_tank**5 + Q*Q_external**2*V_delay**2*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_tank**5 + Q*Q_external**3*V_delay*V_tank**4*(N_af*N_d0 - N_af*N_r0)))) - lambda_c*(lambda_b**4*(lambda_a**3*(N_af*N_r0*Q*Q_external*V_delay**2*V_tank**5 + Q*Q_external*V_delay**3*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay*V_tank**5 + Q*Q_external**2*V_delay**2*V_tank**4*(N_af*N_d0 - N_af*N_r0))) - lambda_b**3*(lambda_a**4*(N_af*N_r0*Q*Q_external*V_delay**2*V_tank**5 + Q*Q_external*V_delay**3*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_r0*Q*Q_external**3*V_tank**5 + Q*Q_external**3*V_delay*V_tank**4*(N_af*N_d0 - N_af*N_r0))) + lambda_b**2*(lambda_a**4*(N_af*N_r0*Q*Q_external**2*V_delay*V_tank**5 + Q*Q_external**2*V_delay**2*V_tank**4*(N_af*N_d0 - N_af*N_r0)) - lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_tank**5 + Q*Q_external**3*V_delay*V_tank**4*(N_af*N_d0 - N_af*N_r0))))))*exp(Q_external*t/V_delay) - rs*(lambda_b**4*(-N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank*lambda_a**2 + N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2*lambda_a**3) - lambda_b**3*(N_af*N_d0*Q*Q_external**3*V_delay**3*V_tank**2*lambda_a**3 + N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2*lambda_a**4 - lambda_a**2*(N_af*N_d0*Q*Q_external**4*V_delay**4 + N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank)) - lambda_b**2*(N_af*N_d0*Q*Q_external**5*V_delay**3*lambda_a**2 + N_af*N_d0*Q*Q_external**4*V_delay**4*lambda_a**3 - lambda_a**4*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_af*N_d0*Q*Q_external**3*V_delay**3*V_tank**2)) - lambda_b*(-N_af*N_d0*Q*Q_external**5*V_delay**3*lambda_a**3 + N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank*lambda_a**4) - lambda_c**4*(-N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank*lambda_a**2 + N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2*lambda_a**3 - lambda_b**3*(N_bf*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 + N_d0*Q*V_delay**5*V_tank**3*lambda_a**2*(2*N_af + N_bf) - lambda_a*(N_bf*N_d0*Q*Q_external*V_delay**4*V_tank**3 + N_d0*Q*Q_external*V_delay**5*V_tank**2*(2*N_af + N_bf))) + lambda_b**2*(N_bf*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_d0*Q*Q_external*V_delay**4*V_tank**3*lambda_a**2*(N_af - N_bf) + N_d0*Q*V_delay**5*V_tank**3*lambda_a**3*(2*N_af + N_bf) - lambda_a*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 + N_d0*Q*Q_external**2*V_delay**5*V_tank*(2*N_af + N_bf))) + lambda_b*(N_d0*Q*Q_external**3*V_delay**4*V_tank*lambda_a*(N_af - N_bf) - lambda_a**3*(N_af*N_d0*Q*Q_external*V_delay**4*V_tank**3 + N_d0*Q*Q_external*V_delay**5*V_tank**2*(2*N_af + N_bf)) + lambda_a**2*(N_bf*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 + N_d0*Q*Q_external**2*V_delay**5*V_tank*(2*N_af + N_bf)))) + lambda_c**3*(N_af*N_d0*Q*Q_external**3*V_delay**3*V_tank**2*lambda_a**3 + N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2*lambda_a**4 - lambda_a**2*(N_af*N_d0*Q*Q_external**4*V_delay**4 + N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank) - lambda_b**4*(N_bf*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 + N_d0*Q*V_delay**5*V_tank**3*lambda_a**2*(2*N_af + N_bf) - lambda_a*(N_bf*N_d0*Q*Q_external*V_delay**4*V_tank**3 + N_d0*Q*Q_external*V_delay**5*V_tank**2*(2*N_af + N_bf))) + lambda_b**2*(N_af*N_d0*Q*Q_external**2*V_delay**3*V_tank**3*lambda_a**2 + N_bf*N_d0*Q*Q_external**4*V_delay**4 + N_d0*Q*Q_external*V_delay**4*V_tank**3*lambda_a**3*(N_af - N_bf) + N_d0*Q*V_delay**5*V_tank**3*lambda_a**4*(2*N_af + N_bf) - lambda_a*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_af*N_d0*Q*Q_external**3*V_delay**3*V_tank**2 + N_d0*Q*Q_external**3*V_delay**5*(2*N_af + N_bf))) - lambda_b*(lambda_a**4*(N_af*N_d0*Q*Q_external*V_delay**4*V_tank**3 + N_d0*Q*Q_external*V_delay**5*V_tank**2*(2*N_af + N_bf)) + lambda_a**3*(N_af*N_d0*Q*Q_external**2*V_delay**3*V_tank**3 + N_d0*Q*Q_external**2*V_delay**4*V_tank**2*(N_af - N_bf)) - lambda_a**2*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_d0*Q*Q_external**3*V_delay**5*(2*N_af + N_bf)) - lambda_a*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank + N_d0*Q*Q_external**4*V_delay**4*(N_af - N_bf)))) + lambda_c**2*(N_af*N_d0*Q*Q_external**5*V_delay**3*lambda_a**2 + N_af*N_d0*Q*Q_external**4*V_delay**4*lambda_a**3 - lambda_a**4*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_af*N_d0*Q*Q_external**3*V_delay**3*V_tank**2) + lambda_b**4*(N_bf*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_d0*Q*Q_external*V_delay**4*V_tank**3*lambda_a**2*(N_af - N_bf) + N_d0*Q*V_delay**5*V_tank**3*lambda_a**3*(2*N_af + N_bf) - lambda_a*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 + N_d0*Q*Q_external**2*V_delay**5*V_tank*(2*N_af + N_bf))) - lambda_b**3*(N_af*N_d0*Q*Q_external**2*V_delay**3*V_tank**3*lambda_a**2 + N_bf*N_d0*Q*Q_external**4*V_delay**4 + N_d0*Q*Q_external*V_delay**4*V_tank**3*lambda_a**3*(N_af - N_bf) + N_d0*Q*V_delay**5*V_tank**3*lambda_a**4*(2*N_af + N_bf) - lambda_a*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_af*N_d0*Q*Q_external**3*V_delay**3*V_tank**2 + N_d0*Q*Q_external**3*V_delay**5*(2*N_af + N_bf))) - lambda_b*(N_af*N_d0*Q*Q_external**5*V_delay**3*lambda_a + N_d0*Q*Q_external**4*V_delay**4*lambda_a**2*(N_af - N_bf) - lambda_a**4*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 + N_af*N_d0*Q*Q_external**2*V_delay**3*V_tank**3 + N_d0*Q*Q_external**2*V_delay**5*V_tank*(2*N_af + N_bf)) + lambda_a**3*(N_bf*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_d0*Q*Q_external**3*V_delay**5*(2*N_af + N_bf)))) + lambda_c*(-N_af*N_d0*Q*Q_external**5*V_delay**3*lambda_a**3 + N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank*lambda_a**4 + lambda_b**4*(N_d0*Q*Q_external**3*V_delay**4*V_tank*lambda_a*(N_af - N_bf) - lambda_a**3*(N_af*N_d0*Q*Q_external*V_delay**4*V_tank**3 + N_d0*Q*Q_external*V_delay**5*V_tank**2*(2*N_af + N_bf)) + lambda_a**2*(N_bf*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 + N_d0*Q*Q_external**2*V_delay**5*V_tank*(2*N_af + N_bf))) + lambda_b**3*(lambda_a**4*(N_af*N_d0*Q*Q_external*V_delay**4*V_tank**3 + N_d0*Q*Q_external*V_delay**5*V_tank**2*(2*N_af + N_bf)) + lambda_a**3*(N_af*N_d0*Q*Q_external**2*V_delay**3*V_tank**3 + N_d0*Q*Q_external**2*V_delay**4*V_tank**2*(N_af - N_bf)) - lambda_a**2*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_d0*Q*Q_external**3*V_delay**5*(2*N_af + N_bf)) - lambda_a*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank + N_d0*Q*Q_external**4*V_delay**4*(N_af - N_bf))) + lambda_b**2*(N_af*N_d0*Q*Q_external**5*V_delay**3*lambda_a + N_d0*Q*Q_external**4*V_delay**4*lambda_a**2*(N_af - N_bf) - lambda_a**4*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 + N_af*N_d0*Q*Q_external**2*V_delay**3*V_tank**3 + N_d0*Q*Q_external**2*V_delay**5*V_tank*(2*N_af + N_bf)) + lambda_a**3*(N_bf*N_d0*Q*Q_external**3*V_delay**4*V_tank + N_d0*Q*Q_external**3*V_delay**5*(2*N_af + N_bf)))) - recoil_prob*(lambda_c**4*(lambda_b**3*(-N_af*N_d0*Q*Q_external*V_delay**5*V_tank**2*lambda_a + N_af*N_d0*Q*V_delay**5*V_tank**3*lambda_a**2) - lambda_b**2*(-N_af*N_d0*Q*Q_external**2*V_delay**5*V_tank*lambda_a + N_af*N_d0*Q*V_delay**5*V_tank**3*lambda_a**3) + lambda_b*(-N_af*N_d0*Q*Q_external**2*V_delay**5*V_tank*lambda_a**2 + N_af*N_d0*Q*Q_external*V_delay**5*V_tank**2*lambda_a**3)) - lambda_c**3*(lambda_b**4*(-N_af*N_d0*Q*Q_external*V_delay**5*V_tank**2*lambda_a + N_af*N_d0*Q*V_delay**5*V_tank**3*lambda_a**2) - lambda_b**2*(-N_af*N_d0*Q*Q_external**3*V_delay**5*lambda_a + N_af*N_d0*Q*V_delay**5*V_tank**3*lambda_a**4) + lambda_b*(-N_af*N_d0*Q*Q_external**3*V_delay**5*lambda_a**2 + N_af*N_d0*Q*Q_external*V_delay**5*V_tank**2*lambda_a**4)) + lambda_c**2*(lambda_b**4*(-N_af*N_d0*Q*Q_external**2*V_delay**5*V_tank*lambda_a + N_af*N_d0*Q*V_delay**5*V_tank**3*lambda_a**3) - lambda_b**3*(-N_af*N_d0*Q*Q_external**3*V_delay**5*lambda_a + N_af*N_d0*Q*V_delay**5*V_tank**3*lambda_a**4) + lambda_b*(-N_af*N_d0*Q*Q_external**3*V_delay**5*lambda_a**3 + N_af*N_d0*Q*Q_external**2*V_delay**5*V_tank*lambda_a**4)) - lambda_c*(lambda_b**4*(-N_af*N_d0*Q*Q_external**2*V_delay**5*V_tank*lambda_a**2 + N_af*N_d0*Q*Q_external*V_delay**5*V_tank**2*lambda_a**3) - lambda_b**3*(-N_af*N_d0*Q*Q_external**3*V_delay**5*lambda_a**2 + N_af*N_d0*Q*Q_external*V_delay**5*V_tank**2*lambda_a**4) + lambda_b**2*(-N_af*N_d0*Q*Q_external**3*V_delay**5*lambda_a**3 + N_af*N_d0*Q*Q_external**2*V_delay**5*V_tank*lambda_a**4))))*exp(Q_external*t/V_tank))*exp(lambda_a*t) - (lambda_b**4*(a0*lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + a0*lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_b**3*(a0*lambda_a**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)) + lambda_b**2*(a0*lambda_a**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - a0*lambda_a**3*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + a0*lambda_a*(Q_external**7*V_delay - Q_external**7*V_tank)) - lambda_b*(a0*lambda_a**4*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - a0*lambda_a**3*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + a0*lambda_a**2*(Q_external**7*V_delay - Q_external**7*V_tank)) - lambda_c**4*(a0*lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + a0*lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - 2*lambda_b**3*(a0*lambda_a**2*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - a0*lambda_a*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) + lambda_b**2*(a0*lambda_a**3*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + a0*lambda_a**2*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a*(2*Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - 2*Q_external**3*V_delay*V_tank**4) + 2*a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) - lambda_b*(a0*lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay**3*V_tank**2 + Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) - a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + 2*a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2))) + lambda_c**3*(a0*lambda_a**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) - 2*lambda_b**4*(a0*lambda_a**2*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - a0*lambda_a*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) + lambda_b**2*(a0*lambda_a**4*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - a0*lambda_a*(2*Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - 2*Q_external**4*V_tank**4) + 2*a0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)) - lambda_b*(a0*lambda_a**4*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**2*(Q_external**4*V_delay**4 - Q_external**4*V_delay**3*V_tank + Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) - a0*lambda_a*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + 2*a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2))) - lambda_c**2*(a0*lambda_a**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - a0*lambda_a**3*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + a0*lambda_a*(Q_external**7*V_delay - Q_external**7*V_tank) - lambda_b**4*(a0*lambda_a**3*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + a0*lambda_a**2*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a*(2*Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - 2*Q_external**3*V_delay*V_tank**4) + 2*a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) + lambda_b**3*(a0*lambda_a**4*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - a0*lambda_a*(2*Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - 2*Q_external**4*V_tank**4) + 2*a0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)) - lambda_b*(a0*lambda_a**4*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - a0*lambda_a**3*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4) + a0*lambda_a**2*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + 2*a0*(Q_external**7*V_delay - Q_external**7*V_tank))) + lambda_c*(a0*lambda_a**4*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - a0*lambda_a**3*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + a0*lambda_a**2*(Q_external**7*V_delay - Q_external**7*V_tank) - lambda_b**4*(a0*lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay**3*V_tank**2 + Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) - a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + 2*a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) + lambda_b**3*(a0*lambda_a**4*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**2*(Q_external**4*V_delay**4 - Q_external**4*V_delay**3*V_tank + Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) - a0*lambda_a*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + 2*a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)) - lambda_b**2*(a0*lambda_a**4*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - a0*lambda_a**3*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4) + a0*lambda_a**2*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + 2*a0*(Q_external**7*V_delay - Q_external**7*V_tank))) - recoil_prob*(lambda_c**4*(lambda_b**3*(a0*lambda_a**2*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - a0*lambda_a*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_b**2*(a0*lambda_a**2*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) + a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) + lambda_b*(a0*lambda_a**2*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2))) - lambda_c**3*(lambda_b**4*(a0*lambda_a**2*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - a0*lambda_a*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_b**2*(a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - a0*lambda_a*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + a0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)) + lambda_b*(a0*lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - a0*lambda_a*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2))) + lambda_c**2*(lambda_b**4*(a0*lambda_a**2*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) + a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) - lambda_b**3*(a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - a0*lambda_a*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + a0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)) + lambda_b*(a0*lambda_a**2*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + a0*(Q_external**7*V_delay - Q_external**7*V_tank))) - lambda_c*(lambda_b**4*(a0*lambda_a**2*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_b**3*(a0*lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - a0*lambda_a*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)) + lambda_b**2*(a0*lambda_a**2*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + a0*(Q_external**7*V_delay - Q_external**7*V_tank)))) - rs*(lambda_b**4*(lambda_a**2*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3) - lambda_a*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0))) - lambda_b**3*(lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3) - lambda_a**2*(Q*Q_external**4*V_delay**3*V_tank*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3)) + lambda_b**2*(lambda_a**3*(N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3) - lambda_a**2*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_r0*Q*Q_external**5*V_tank**3 - Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0))) - lambda_b*(lambda_a**3*(N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_delay*V_tank**2) - lambda_a**2*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0))) - lambda_c**4*(lambda_a**2*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3) - lambda_a*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0)) + 2*lambda_b**3*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0) - lambda_a*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4)) - lambda_b**2*(2*N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - 2*N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + 2*N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - 2*N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 - lambda_a**2*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4) + lambda_a*(N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - 2*N_af*N_r0) - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0))) + lambda_b*(2*N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - 2*N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - 2*Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0) - lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) + lambda_a*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 - Q*Q_external**3*V_delay**2*V_tank**3*(N_af*N_d0 - 2*N_af*N_r0)))) + lambda_c**3*(lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3) - lambda_a**2*(Q*Q_external**4*V_delay**3*V_tank*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3) + 2*lambda_b**4*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0) - lambda_a*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4)) - lambda_b**2*(2*N_af*N_d0*Q*Q_external**4*V_delay**4 - 2*N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + 2*N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - 2*N_af*N_r0*Q*Q_external**4*V_tank**4 - lambda_a**3*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4) + lambda_a**2*(Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) + lambda_a*(-N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 + N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 + Q*Q_external**3*V_delay**4*V_tank*(N_af*N_d0 - 2*N_af*N_r0))) + lambda_b*(2*N_af*N_d0*Q*Q_external**5*V_delay**3 - 2*N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + 2*N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - 2*N_af*N_r0*Q*Q_external**5*V_tank**3 - lambda_a**3*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) + lambda_a**2*(Q*Q_external**3*V_delay**4*V_tank*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**3*V_delay**2*V_tank**3*(N_af*N_d0 - N_af*N_r0)) + lambda_a*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_r0*Q*Q_external**4*V_tank**4 + Q*Q_external**4*V_delay**3*V_tank*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**4*V_delay*V_tank**3*(N_af*N_d0 - N_af*N_r0)))) - lambda_c**2*(lambda_a**3*(N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3) - lambda_a**2*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_r0*Q*Q_external**5*V_tank**3 - Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0)) + lambda_b**4*(2*N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - 2*N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + 2*N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - 2*N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 - lambda_a**2*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4) + lambda_a*(N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - 2*N_af*N_r0) - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0))) - lambda_b**3*(2*N_af*N_d0*Q*Q_external**4*V_delay**4 - 2*N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + 2*N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - 2*N_af*N_r0*Q*Q_external**4*V_tank**4 - lambda_a**3*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4) + lambda_a**2*(Q*Q_external**2*V_delay**4*V_tank**2*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) + lambda_a*(-N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 + N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 + Q*Q_external**3*V_delay**4*V_tank*(N_af*N_d0 - 2*N_af*N_r0))) + lambda_b*(2*N_af*N_d0*Q*Q_external**6*V_delay**2 - 2*N_af*N_r0*Q*Q_external**6*V_tank**2 - 2*Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0) - lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) + lambda_a**2*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_r0*Q*Q_external**4*V_tank**4 - Q*Q_external**4*V_delay*V_tank**3*(N_af*N_d0 - N_af*N_r0)) + lambda_a*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3 - Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - 2*N_af*N_r0)))) + lambda_c*(lambda_a**3*(N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_delay*V_tank**2) - lambda_a**2*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0)) + lambda_b**4*(2*N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - 2*N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - 2*Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0) - lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) + lambda_a*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 - Q*Q_external**3*V_delay**2*V_tank**3*(N_af*N_d0 - 2*N_af*N_r0))) - lambda_b**3*(2*N_af*N_d0*Q*Q_external**5*V_delay**3 - 2*N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + 2*N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - 2*N_af*N_r0*Q*Q_external**5*V_tank**3 - lambda_a**3*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) + lambda_a**2*(Q*Q_external**3*V_delay**4*V_tank*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**3*V_delay**2*V_tank**3*(N_af*N_d0 - N_af*N_r0)) + lambda_a*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_r0*Q*Q_external**4*V_tank**4 + Q*Q_external**4*V_delay**3*V_tank*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0) - Q*Q_external**4*V_delay*V_tank**3*(N_af*N_d0 - N_af*N_r0))) + lambda_b**2*(2*N_af*N_d0*Q*Q_external**6*V_delay**2 - 2*N_af*N_r0*Q*Q_external**6*V_tank**2 - 2*Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0) - lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) + lambda_a**2*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_r0*Q*Q_external**4*V_tank**4 - Q*Q_external**4*V_delay*V_tank**3*(N_af*N_d0 - N_af*N_r0)) + lambda_a*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3 - Q*Q_external**5*V_delay*V_tank**2*(N_af*N_d0 - 2*N_af*N_r0)))) + recoil_prob*(lambda_c**4*(lambda_b**3*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0) - lambda_a*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4)) - lambda_b**2*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 - lambda_a*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4)) + lambda_b*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0) - lambda_a*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3))) - lambda_c**3*(lambda_b**4*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0) - lambda_a*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4)) - lambda_b**2*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_tank**4 - lambda_a*(N_af*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4)) + lambda_b*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3 - lambda_a*(N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3))) + lambda_c**2*(lambda_b**4*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 - lambda_a*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4)) - lambda_b**3*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_tank**4 - lambda_a*(N_af*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4)) + lambda_b*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0) - lambda_a*(N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_delay*V_tank**2))) - lambda_c*(lambda_b**4*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0) - lambda_a*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3)) - lambda_b**3*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3 - lambda_a*(N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3)) + lambda_b**2*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0) - lambda_a*(N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_delay*V_tank**2))))))*exp(Q_external*t/V_tank + Q_external*t/V_delay))*exp(lambda_b*t) + (lambda_c**4*(lambda_a**3*(a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_a**2*(a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) + lambda_a*(a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_b**3*(b0*lambda_a**2*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - b0*lambda_a*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_b**2*(a0*lambda_a**2*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - lambda_a**3*(a0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + b0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4)) - lambda_a*(a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - b0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4))) - lambda_b*(a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + lambda_a**3*(a0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4)) - lambda_a**2*(a0*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) + b0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4)))) - lambda_c**3*(lambda_a**4*(a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_a**2*(a0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + b0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)) + lambda_a*(a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)) - lambda_b**3*(b0*lambda_a**3*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - b0*lambda_a*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) + lambda_b**2*(b0*lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + lambda_a**4*(a0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + b0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4)) - lambda_a**2*(a0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + b0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4)) + lambda_a*(a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - b0*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4))) - lambda_b*(b0*lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + lambda_a**4*(a0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4)) - lambda_a**2*(a0*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + b0*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4)) + lambda_a*(a0*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)))) + lambda_c**2*(lambda_a**4*(a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) - lambda_a**3*(a0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + b0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)) + lambda_a*(a0*(Q_external**7*V_delay - Q_external**7*V_tank) + b0*(Q_external**7*V_delay - Q_external**7*V_tank)) - lambda_b**3*(b0*lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - b0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) + lambda_b**2*(-b0*lambda_a**2*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + lambda_a**4*(a0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4)) - lambda_a**3*(a0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) + lambda_a*(a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2))) - lambda_b*(-b0*lambda_a**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + b0*(Q_external**7*V_delay - Q_external**7*V_tank) + lambda_a**4*(a0*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) + b0*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4)) - lambda_a**3*(a0*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + b0*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4)) + lambda_a*(a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)))) - lambda_c*(lambda_a**4*(a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_a**3*(a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)) + lambda_a**2*(a0*(Q_external**7*V_delay - Q_external**7*V_tank) + b0*(Q_external**7*V_delay - Q_external**7*V_tank)) - lambda_b**3*(b0*lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - b0*lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + b0*lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_b**2*(a0*lambda_a**3*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - b0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) - lambda_a**4*(a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_a**2*(a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - b0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3))) - lambda_b*(a0*lambda_a**2*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + b0*lambda_a*(Q_external**7*V_delay - Q_external**7*V_tank) + lambda_a**4*(a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) - lambda_a**3*(a0*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + b0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)))) - recoil_prob*(lambda_c**4*(a0*lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + a0*lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + lambda_b**2*(a0*lambda_a**3*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - a0*lambda_a**2*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + a0*lambda_a*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_b*(a0*lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) + a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3))) - lambda_c**3*(a0*lambda_a**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + lambda_b**2*(a0*lambda_a**4*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) - lambda_b*(a0*lambda_a**4*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**2*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + a0*lambda_a*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3))) + lambda_c**2*(a0*lambda_a**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - a0*lambda_a**3*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + a0*lambda_a*(Q_external**7*V_delay - Q_external**7*V_tank) + lambda_b**2*(a0*lambda_a**4*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**3*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + a0*lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_b*(a0*lambda_a**4*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) - a0*lambda_a**3*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2))) - lambda_c*(a0*lambda_a**4*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - a0*lambda_a**3*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + a0*lambda_a**2*(Q_external**7*V_delay - Q_external**7*V_tank) + lambda_b**2*(a0*lambda_a**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**3*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + a0*lambda_a**2*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_b*(a0*lambda_a**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - a0*lambda_a**3*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + a0*lambda_a**2*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)))) + rs*(lambda_c**4*(lambda_a**3*(N_d0*Q*Q_external**2*V_delay**4*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**2*V_delay**2*V_tank**4*(N_af + N_bf) - Q*Q_external**2*V_delay**3*V_tank**3*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**2*(N_d0*Q*Q_external**3*V_delay**4*V_tank*(N_af + N_bf) - N_d0*Q*Q_external**3*V_delay**2*V_tank**3*(N_af + N_bf) + N_r0*Q*Q_external**3*V_delay**3*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**3*V_delay*V_tank**4*(N_af + N_bf)) + lambda_a*(N_d0*Q*Q_external**4*V_delay**3*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**4*V_delay*V_tank**3*(N_af + N_bf) - Q*Q_external**4*V_delay**2*V_tank**2*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf))) + lambda_b**2*(N_bf*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_bf*N_r0*Q*Q_external**3*V_delay**2*V_tank**3 + lambda_a**2*(N_bf*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_bf*N_r0*Q*Q_external*V_delay**3*V_tank**4) - lambda_a*(N_bf*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_bf*N_r0*Q*Q_external**2*V_delay**2*V_tank**4)) - lambda_b*(N_bf*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_bf*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**3*(N_r0*Q*Q_external*V_delay**4*V_tank**3*(N_af + N_bf) - N_r0*Q*Q_external*V_delay**3*V_tank**4*(N_af + N_bf)) + lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**4*V_tank**2*(N_bf*N_d0 - N_r0*(N_af + N_bf)) - Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_d0 - N_bf*N_r0)) - lambda_a*(-N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 + N_bf*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_bf*N_r0*Q*Q_external**3*V_delay*V_tank**4 - Q*Q_external**3*V_delay**2*V_tank**3*(N_bf*N_d0 - N_r0*(N_af + N_bf))))) - lambda_c**3*(lambda_a**4*(N_d0*Q*Q_external**2*V_delay**4*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**2*V_delay**2*V_tank**4*(N_af + N_bf) - Q*Q_external**2*V_delay**3*V_tank**3*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**2*(N_d0*Q*Q_external**4*V_delay**4*(N_af + N_bf) - N_d0*Q*Q_external**4*V_delay*V_tank**3*(N_af + N_bf) + N_r0*Q*Q_external**4*V_delay**3*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**4*V_tank**4*(N_af + N_bf)) + lambda_a*(N_d0*Q*Q_external**5*V_delay**3*(N_af + N_bf) - N_d0*Q*Q_external**5*V_delay*V_tank**2*(N_af + N_bf) + N_r0*Q*Q_external**5*V_delay**2*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**5*V_tank**3*(N_af + N_bf)) + lambda_b**2*(N_bf*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_bf*N_r0*Q*Q_external**4*V_delay*V_tank**3 + lambda_a**3*(N_bf*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_bf*N_r0*Q*Q_external*V_delay**3*V_tank**4) - lambda_a*(N_bf*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_bf*N_r0*Q*Q_external**3*V_delay*V_tank**4)) - lambda_b*(N_bf*N_d0*Q*Q_external**5*V_delay**3 - N_bf*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_bf*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_bf*N_r0*Q*Q_external**5*V_tank**3 + lambda_a**4*(N_r0*Q*Q_external*V_delay**4*V_tank**3*(N_af + N_bf) - N_r0*Q*Q_external*V_delay**3*V_tank**4*(N_af + N_bf)) + lambda_a**3*(N_bf*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_bf*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_d0 - N_bf*N_r0)) - lambda_a**2*(N_r0*Q*Q_external**3*V_delay**4*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**3*V_delay*V_tank**4*(N_af + N_bf)) - lambda_a*(-N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank + N_bf*N_d0*Q*Q_external**4*V_delay**4 - N_bf*N_r0*Q*Q_external**4*V_tank**4 - Q*Q_external**4*V_delay*V_tank**3*(N_bf*N_d0 - N_r0*(N_af + N_bf))))) + lambda_c**2*(lambda_a**4*(N_d0*Q*Q_external**3*V_delay**4*V_tank*(N_af + N_bf) - N_d0*Q*Q_external**3*V_delay**2*V_tank**3*(N_af + N_bf) + N_r0*Q*Q_external**3*V_delay**3*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**3*V_delay*V_tank**4*(N_af + N_bf)) - lambda_a**3*(N_d0*Q*Q_external**4*V_delay**4*(N_af + N_bf) - N_d0*Q*Q_external**4*V_delay*V_tank**3*(N_af + N_bf) + N_r0*Q*Q_external**4*V_delay**3*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**4*V_tank**4*(N_af + N_bf)) + lambda_a*(N_d0*Q*Q_external**6*V_delay**2*(N_af + N_bf) - N_r0*Q*Q_external**6*V_tank**2*(N_af + N_bf) - Q*Q_external**6*V_delay*V_tank*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf))) + lambda_b**2*(N_bf*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_bf*N_r0*Q*Q_external**5*V_delay*V_tank**2 + lambda_a**3*(N_bf*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_bf*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) - lambda_a**2*(N_bf*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_bf*N_r0*Q*Q_external**3*V_delay*V_tank**4)) - lambda_b*(N_bf*N_d0*Q*Q_external**6*V_delay**2 - N_bf*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**4*(N_r0*Q*Q_external**2*V_delay**4*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**2*V_delay**2*V_tank**4*(N_af + N_bf)) + lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 - N_bf*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_bf*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 + Q*Q_external**3*V_delay**4*V_tank*(N_bf*N_d0 - N_r0*(N_af + N_bf))) - lambda_a**2*(N_bf*N_d0*Q*Q_external**4*V_delay**4 - N_bf*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_bf*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_bf*N_r0*Q*Q_external**4*V_tank**4) + lambda_a*(N_r0*Q*Q_external**5*V_delay**2*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**5*V_delay*V_tank**2*(N_af + N_bf)))) - lambda_c*(lambda_a**4*(N_d0*Q*Q_external**4*V_delay**3*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**4*V_delay*V_tank**3*(N_af + N_bf) - Q*Q_external**4*V_delay**2*V_tank**2*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**3*(N_d0*Q*Q_external**5*V_delay**3*(N_af + N_bf) - N_d0*Q*Q_external**5*V_delay*V_tank**2*(N_af + N_bf) + N_r0*Q*Q_external**5*V_delay**2*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**5*V_tank**3*(N_af + N_bf)) + lambda_a**2*(N_d0*Q*Q_external**6*V_delay**2*(N_af + N_bf) - N_r0*Q*Q_external**6*V_tank**2*(N_af + N_bf) - Q*Q_external**6*V_delay*V_tank*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf))) + lambda_b**2*(lambda_a**3*(N_bf*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_bf*N_r0*Q*Q_external**3*V_delay**2*V_tank**3) - lambda_a**2*(N_bf*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_bf*N_r0*Q*Q_external**4*V_delay*V_tank**3) + lambda_a*(N_bf*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_bf*N_r0*Q*Q_external**5*V_delay*V_tank**2)) - lambda_b*(lambda_a**4*(N_r0*Q*Q_external**3*V_delay**3*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**3*V_delay**2*V_tank**3*(N_af + N_bf)) + lambda_a**3*(N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 + Q*Q_external**4*V_delay**3*V_tank*(N_bf*N_d0 - N_r0*(N_af + N_bf)) - Q*Q_external**4*V_delay**2*V_tank**2*(N_bf*N_d0 - N_bf*N_r0)) - lambda_a**2*(-N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank + N_bf*N_d0*Q*Q_external**5*V_delay**3 - N_bf*N_r0*Q*Q_external**5*V_tank**3 - Q*Q_external**5*V_delay*V_tank**2*(N_bf*N_d0 - N_r0*(N_af + N_bf))) + lambda_a*(N_bf*N_d0*Q*Q_external**6*V_delay**2 - N_bf*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_bf*N_d0 - N_bf*N_r0)))) - recoil_prob*(lambda_c**4*(lambda_a**3*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) + lambda_a*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_b*(lambda_a**3*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4) - lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) + lambda_a*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3))) - lambda_c**3*(lambda_a**4*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_tank**4) + lambda_a*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3) - lambda_b*(lambda_a**4*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4) - lambda_a**2*(N_af*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) + lambda_a*(N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3))) + lambda_c**2*(lambda_a**4*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) - lambda_a**3*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_tank**4) + lambda_a*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0)) - lambda_b*(lambda_a**4*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) - lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) + lambda_a*(N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_delay*V_tank**2))) - lambda_c*(lambda_a**4*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a**3*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3) + lambda_a**2*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0)) - lambda_b*(lambda_a**4*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3) - lambda_a**3*(N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3) + lambda_a**2*(N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_delay*V_tank**2))))))*exp(Q_external*t/V_tank + Q_external*t/V_delay + lambda_a*t))*exp(lambda_c*t) + (lambda_b**4*(lambda_a**3*(a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + c0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_a**2*(a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + c0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) + lambda_a*(a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + c0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2))) - lambda_b**3*(lambda_a**4*(a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + c0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_a**2*(a0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + b0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + c0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)) + lambda_a*(a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + c0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2))) + lambda_b**2*(lambda_a**4*(a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + c0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) - lambda_a**3*(a0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + b0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + c0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)) + lambda_a*(a0*(Q_external**7*V_delay - Q_external**7*V_tank) + b0*(Q_external**7*V_delay - Q_external**7*V_tank) + c0*(Q_external**7*V_delay - Q_external**7*V_tank))) - lambda_b*(lambda_a**4*(a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + c0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_a**3*(a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + c0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)) + lambda_a**2*(a0*(Q_external**7*V_delay - Q_external**7*V_tank) + b0*(Q_external**7*V_delay - Q_external**7*V_tank) + c0*(Q_external**7*V_delay - Q_external**7*V_tank))) - lambda_c**4*(c0*lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - c0*lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + c0*lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - lambda_b**3*(c0*lambda_a**2*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - c0*lambda_a*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + c0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) + lambda_b**2*(c0*lambda_a**3*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - c0*lambda_a*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + c0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) - lambda_b*(c0*lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - c0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + c0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2))) + lambda_c**3*(c0*lambda_a**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - c0*lambda_a**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + c0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) - lambda_b**4*(b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + c0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + lambda_a**2*(b0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + c0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4)) - lambda_a*(b0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + c0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4))) + lambda_b**3*(b0*lambda_a**3*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - b0*lambda_a*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) + lambda_b**2*(-b0*lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + c0*lambda_a**4*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - c0*lambda_a*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4) + c0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)) - lambda_b*(-b0*lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - b0*lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + c0*lambda_a**4*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + c0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + lambda_a**2*(b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - c0*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4)))) - lambda_c**2*(c0*lambda_a**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - c0*lambda_a**3*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + c0*lambda_a*(Q_external**7*V_delay - Q_external**7*V_tank) + lambda_b**4*(a0*lambda_a**2*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - c0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - lambda_a**3*(a0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + b0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + c0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4)) - lambda_a*(a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - b0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - c0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4))) + lambda_b**3*(b0*lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + c0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + lambda_a**4*(a0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + b0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) + c0*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4)) - lambda_a**2*(a0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + b0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4)) + lambda_a*(a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - b0*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4) - c0*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4))) - lambda_b**2*(-b0*lambda_a**2*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + lambda_a**4*(a0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4)) - lambda_a**3*(a0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) + lambda_a*(a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2))) + lambda_b*(b0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) - c0*(Q_external**7*V_delay - Q_external**7*V_tank) + lambda_a**4*(a0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + b0*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - c0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4)) - lambda_a**3*(a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - c0*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4)) + lambda_a**2*(a0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - b0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)))) + lambda_c*(c0*lambda_a**4*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - c0*lambda_a**3*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + c0*lambda_a**2*(Q_external**7*V_delay - Q_external**7*V_tank) - lambda_b**4*(a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + c0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) + lambda_a**3*(a0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + c0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4)) - lambda_a**2*(a0*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) + b0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + c0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4))) + lambda_b**3*(b0*lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + c0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + lambda_a**4*(a0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + b0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + c0*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4)) - lambda_a**2*(a0*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + b0*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + c0*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4)) + lambda_a*(a0*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + b0*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2))) - lambda_b**2*(-b0*lambda_a**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + b0*(Q_external**7*V_delay - Q_external**7*V_tank) + c0*(Q_external**7*V_delay - Q_external**7*V_tank) + lambda_a**4*(a0*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) + b0*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) + c0*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4)) - lambda_a**3*(a0*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + b0*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4) + c0*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4)) + lambda_a*(a0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + b0*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2))) + lambda_b*(a0*lambda_a**2*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + b0*lambda_a*(Q_external**7*V_delay - Q_external**7*V_tank) + lambda_a**4*(a0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + b0*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) - lambda_a**3*(a0*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + b0*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3)))) - recoil_prob*(lambda_b**4*(a0*lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + a0*lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_b**3*(a0*lambda_a**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)) + lambda_b**2*(a0*lambda_a**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - a0*lambda_a**3*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + a0*lambda_a*(Q_external**7*V_delay - Q_external**7*V_tank)) - lambda_b*(a0*lambda_a**4*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - a0*lambda_a**3*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + a0*lambda_a**2*(Q_external**7*V_delay - Q_external**7*V_tank)) + lambda_c**2*(lambda_b**4*(a0*lambda_a**3*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - a0*lambda_a**2*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) + a0*lambda_a*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3)) - lambda_b**3*(a0*lambda_a**4*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) + lambda_b**2*(a0*lambda_a**4*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**3*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) + a0*lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_b*(a0*lambda_a**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - a0*lambda_a**3*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + a0*lambda_a**2*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2))) - lambda_c*(lambda_b**4*(a0*lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**2*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) + a0*lambda_a*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3)) - lambda_b**3*(a0*lambda_a**4*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - a0*lambda_a**2*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + a0*lambda_a*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3)) + lambda_b**2*(a0*lambda_a**4*(Q_external**3*V_delay**4*V_tank + Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 - Q_external**3*V_delay*V_tank**4) - a0*lambda_a**3*(Q_external**4*V_delay**4 + Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 - Q_external**4*V_tank**4) + a0*lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)) - lambda_b*(a0*lambda_a**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - a0*lambda_a**3*(Q_external**5*V_delay**3 + Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 - Q_external**5*V_tank**3) + a0*lambda_a**2*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)))) + rs*(lambda_b**4*(lambda_a**3*(N_d0*Q*Q_external**2*V_delay**4*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**2*V_delay**2*V_tank**4*(N_af + N_bf) - Q*Q_external**2*V_delay**3*V_tank**3*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**2*(N_d0*Q*Q_external**3*V_delay**4*V_tank*(N_af + N_bf) - N_d0*Q*Q_external**3*V_delay**2*V_tank**3*(N_af + N_bf) + N_r0*Q*Q_external**3*V_delay**3*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**3*V_delay*V_tank**4*(N_af + N_bf)) + lambda_a*(N_d0*Q*Q_external**4*V_delay**3*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**4*V_delay*V_tank**3*(N_af + N_bf) - Q*Q_external**4*V_delay**2*V_tank**2*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf)))) - lambda_b**3*(lambda_a**4*(N_d0*Q*Q_external**2*V_delay**4*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**2*V_delay**2*V_tank**4*(N_af + N_bf) - Q*Q_external**2*V_delay**3*V_tank**3*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**2*(N_d0*Q*Q_external**4*V_delay**4*(N_af + N_bf) - N_d0*Q*Q_external**4*V_delay*V_tank**3*(N_af + N_bf) + N_r0*Q*Q_external**4*V_delay**3*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**4*V_tank**4*(N_af + N_bf)) + lambda_a*(N_d0*Q*Q_external**5*V_delay**3*(N_af + N_bf) - N_d0*Q*Q_external**5*V_delay*V_tank**2*(N_af + N_bf) + N_r0*Q*Q_external**5*V_delay**2*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**5*V_tank**3*(N_af + N_bf))) + lambda_b**2*(lambda_a**4*(N_d0*Q*Q_external**3*V_delay**4*V_tank*(N_af + N_bf) - N_d0*Q*Q_external**3*V_delay**2*V_tank**3*(N_af + N_bf) + N_r0*Q*Q_external**3*V_delay**3*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**3*V_delay*V_tank**4*(N_af + N_bf)) - lambda_a**3*(N_d0*Q*Q_external**4*V_delay**4*(N_af + N_bf) - N_d0*Q*Q_external**4*V_delay*V_tank**3*(N_af + N_bf) + N_r0*Q*Q_external**4*V_delay**3*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**4*V_tank**4*(N_af + N_bf)) + lambda_a*(N_d0*Q*Q_external**6*V_delay**2*(N_af + N_bf) - N_r0*Q*Q_external**6*V_tank**2*(N_af + N_bf) - Q*Q_external**6*V_delay*V_tank*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf)))) - lambda_b*(lambda_a**4*(N_d0*Q*Q_external**4*V_delay**3*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**4*V_delay*V_tank**3*(N_af + N_bf) - Q*Q_external**4*V_delay**2*V_tank**2*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf))) - lambda_a**3*(N_d0*Q*Q_external**5*V_delay**3*(N_af + N_bf) - N_d0*Q*Q_external**5*V_delay*V_tank**2*(N_af + N_bf) + N_r0*Q*Q_external**5*V_delay**2*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**5*V_tank**3*(N_af + N_bf)) + lambda_a**2*(N_d0*Q*Q_external**6*V_delay**2*(N_af + N_bf) - N_r0*Q*Q_external**6*V_tank**2*(N_af + N_bf) - Q*Q_external**6*V_delay*V_tank*(N_d0*(N_af + N_bf) - N_r0*(N_af + N_bf)))) + lambda_c**2*(lambda_b**4*(N_bf*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_bf*N_r0*Q*Q_external**3*V_delay**2*V_tank**3 + lambda_a**2*(N_bf*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_bf*N_r0*Q*Q_external*V_delay**3*V_tank**4) - lambda_a*(N_bf*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_bf*N_r0*Q*Q_external**2*V_delay**2*V_tank**4)) - lambda_b**3*(N_bf*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_bf*N_r0*Q*Q_external**4*V_delay*V_tank**3 + lambda_a**3*(N_bf*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_bf*N_r0*Q*Q_external*V_delay**3*V_tank**4) - lambda_a*(N_bf*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_bf*N_r0*Q*Q_external**3*V_delay*V_tank**4)) + lambda_b**2*(N_bf*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_bf*N_r0*Q*Q_external**5*V_delay*V_tank**2 + lambda_a**3*(N_bf*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_bf*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) - lambda_a**2*(N_bf*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_bf*N_r0*Q*Q_external**3*V_delay*V_tank**4)) - lambda_b*(lambda_a**3*(N_bf*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_bf*N_r0*Q*Q_external**3*V_delay**2*V_tank**3) - lambda_a**2*(N_bf*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_bf*N_r0*Q*Q_external**4*V_delay*V_tank**3) + lambda_a*(N_bf*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_bf*N_r0*Q*Q_external**5*V_delay*V_tank**2))) - lambda_c*(lambda_b**4*(N_bf*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_bf*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**3*(N_r0*Q*Q_external*V_delay**4*V_tank**3*(N_af + N_bf) - N_r0*Q*Q_external*V_delay**3*V_tank**4*(N_af + N_bf)) + lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 + Q*Q_external**2*V_delay**4*V_tank**2*(N_bf*N_d0 - N_r0*(N_af + N_bf)) - Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_d0 - N_bf*N_r0)) - lambda_a*(-N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 + N_bf*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_bf*N_r0*Q*Q_external**3*V_delay*V_tank**4 - Q*Q_external**3*V_delay**2*V_tank**3*(N_bf*N_d0 - N_r0*(N_af + N_bf)))) - lambda_b**3*(N_bf*N_d0*Q*Q_external**5*V_delay**3 - N_bf*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_bf*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_bf*N_r0*Q*Q_external**5*V_tank**3 + lambda_a**4*(N_r0*Q*Q_external*V_delay**4*V_tank**3*(N_af + N_bf) - N_r0*Q*Q_external*V_delay**3*V_tank**4*(N_af + N_bf)) + lambda_a**3*(N_bf*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_bf*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_bf*N_d0 - N_bf*N_r0)) - lambda_a**2*(N_r0*Q*Q_external**3*V_delay**4*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**3*V_delay*V_tank**4*(N_af + N_bf)) - lambda_a*(-N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank + N_bf*N_d0*Q*Q_external**4*V_delay**4 - N_bf*N_r0*Q*Q_external**4*V_tank**4 - Q*Q_external**4*V_delay*V_tank**3*(N_bf*N_d0 - N_r0*(N_af + N_bf)))) + lambda_b**2*(N_bf*N_d0*Q*Q_external**6*V_delay**2 - N_bf*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_bf*N_d0 - N_bf*N_r0) + lambda_a**4*(N_r0*Q*Q_external**2*V_delay**4*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**2*V_delay**2*V_tank**4*(N_af + N_bf)) + lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4 - N_bf*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_bf*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 + Q*Q_external**3*V_delay**4*V_tank*(N_bf*N_d0 - N_r0*(N_af + N_bf))) - lambda_a**2*(N_bf*N_d0*Q*Q_external**4*V_delay**4 - N_bf*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_bf*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_bf*N_r0*Q*Q_external**4*V_tank**4) + lambda_a*(N_r0*Q*Q_external**5*V_delay**2*V_tank*(N_af + N_bf) - N_r0*Q*Q_external**5*V_delay*V_tank**2*(N_af + N_bf))) - lambda_b*(lambda_a**4*(N_r0*Q*Q_external**3*V_delay**3*V_tank**2*(N_af + N_bf) - N_r0*Q*Q_external**3*V_delay**2*V_tank**3*(N_af + N_bf)) + lambda_a**3*(N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 + Q*Q_external**4*V_delay**3*V_tank*(N_bf*N_d0 - N_r0*(N_af + N_bf)) - Q*Q_external**4*V_delay**2*V_tank**2*(N_bf*N_d0 - N_bf*N_r0)) - lambda_a**2*(-N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank + N_bf*N_d0*Q*Q_external**5*V_delay**3 - N_bf*N_r0*Q*Q_external**5*V_tank**3 - Q*Q_external**5*V_delay*V_tank**2*(N_bf*N_d0 - N_r0*(N_af + N_bf))) + lambda_a*(N_bf*N_d0*Q*Q_external**6*V_delay**2 - N_bf*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_bf*N_d0 - N_bf*N_r0)))) - recoil_prob*(lambda_b**4*(lambda_a**3*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) + lambda_a*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0))) - lambda_b**3*(lambda_a**4*(N_af*N_d0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4 - Q*Q_external**2*V_delay**3*V_tank**3*(N_af*N_d0 - N_af*N_r0)) - lambda_a**2*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_tank**4) + lambda_a*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3)) + lambda_b**2*(lambda_a**4*(N_af*N_d0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_d0*Q*Q_external**3*V_delay**2*V_tank**3 + N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) - lambda_a**3*(N_af*N_d0*Q*Q_external**4*V_delay**4 - N_af*N_d0*Q*Q_external**4*V_delay*V_tank**3 + N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_tank**4) + lambda_a*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0))) - lambda_b*(lambda_a**4*(N_af*N_d0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3 - Q*Q_external**4*V_delay**2*V_tank**2*(N_af*N_d0 - N_af*N_r0)) - lambda_a**3*(N_af*N_d0*Q*Q_external**5*V_delay**3 - N_af*N_d0*Q*Q_external**5*V_delay*V_tank**2 + N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_tank**3) + lambda_a**2*(N_af*N_d0*Q*Q_external**6*V_delay**2 - N_af*N_r0*Q*Q_external**6*V_tank**2 - Q*Q_external**6*V_delay*V_tank*(N_af*N_d0 - N_af*N_r0))) - lambda_c*(lambda_b**4*(lambda_a**3*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4) - lambda_a**2*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) + lambda_a*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3)) - lambda_b**3*(lambda_a**4*(N_af*N_r0*Q*Q_external*V_delay**4*V_tank**3 - N_af*N_r0*Q*Q_external*V_delay**3*V_tank**4) - lambda_a**2*(N_af*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) + lambda_a*(N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3)) + lambda_b**2*(lambda_a**4*(N_af*N_r0*Q*Q_external**2*V_delay**4*V_tank**2 - N_af*N_r0*Q*Q_external**2*V_delay**2*V_tank**4) - lambda_a**3*(N_af*N_r0*Q*Q_external**3*V_delay**4*V_tank - N_af*N_r0*Q*Q_external**3*V_delay*V_tank**4) + lambda_a*(N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_delay*V_tank**2)) - lambda_b*(lambda_a**4*(N_af*N_r0*Q*Q_external**3*V_delay**3*V_tank**2 - N_af*N_r0*Q*Q_external**3*V_delay**2*V_tank**3) - lambda_a**3*(N_af*N_r0*Q*Q_external**4*V_delay**3*V_tank - N_af*N_r0*Q*Q_external**4*V_delay*V_tank**3) + lambda_a**2*(N_af*N_r0*Q*Q_external**5*V_delay**2*V_tank - N_af*N_r0*Q*Q_external**5*V_delay*V_tank**2))))))*exp(Q_external*t/V_tank + Q_external*t/V_delay + lambda_a*t + lambda_b*t))*exp(-Q_external*t/V_tank - Q_external*t/V_delay - lambda_a*t - lambda_b*t - lambda_c*t)/(lambda_b**4*(lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2)) - lambda_b**3*(lambda_a**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - lambda_a**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2)) + lambda_b**2*(lambda_a**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - lambda_a**3*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + lambda_a*(Q_external**7*V_delay - Q_external**7*V_tank)) - lambda_b*(lambda_a**4*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - lambda_a**3*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + lambda_a**2*(Q_external**7*V_delay - Q_external**7*V_tank)) - lambda_c**4*(lambda_a**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - lambda_a**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) + lambda_a*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - lambda_b**3*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 + lambda_a**2*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - lambda_a*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4)) + lambda_b**2*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 + lambda_a**3*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - lambda_a*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4)) - lambda_b*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 + lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4))) + lambda_c**3*(lambda_a**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3) - lambda_a**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + lambda_a*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) - lambda_b**4*(Q_external**3*V_delay**3*V_tank**2 - Q_external**3*V_delay**2*V_tank**3 + lambda_a**2*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - lambda_a*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4)) + lambda_b**2*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3 + lambda_a**4*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - lambda_a*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4)) - lambda_b*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2 + lambda_a**4*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - lambda_a**2*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4))) - lambda_c**2*(lambda_a**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3) - lambda_a**3*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3) + lambda_a*(Q_external**7*V_delay - Q_external**7*V_tank) - lambda_b**4*(Q_external**4*V_delay**3*V_tank - Q_external**4*V_delay*V_tank**3 + lambda_a**3*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - lambda_a*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4)) + lambda_b**3*(Q_external**5*V_delay**3 - Q_external**5*V_tank**3 + lambda_a**4*(Q_external*V_delay**4*V_tank**3 - Q_external*V_delay**3*V_tank**4) - lambda_a*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4)) - lambda_b*(Q_external**7*V_delay - Q_external**7*V_tank + lambda_a**4*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - lambda_a**3*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4))) + lambda_c*(lambda_a**4*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2) - lambda_a**3*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2) + lambda_a**2*(Q_external**7*V_delay - Q_external**7*V_tank) - lambda_b**4*(Q_external**5*V_delay**2*V_tank - Q_external**5*V_delay*V_tank**2 + lambda_a**3*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - lambda_a**2*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4)) + lambda_b**3*(Q_external**6*V_delay**2 - Q_external**6*V_tank**2 + lambda_a**4*(Q_external**2*V_delay**4*V_tank**2 - Q_external**2*V_delay**2*V_tank**4) - lambda_a**2*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4)) - lambda_b**2*(Q_external**7*V_delay - Q_external**7*V_tank + lambda_a**4*(Q_external**3*V_delay**4*V_tank - Q_external**3*V_delay*V_tank**4) - lambda_a**3*(Q_external**4*V_delay**4 - Q_external**4*V_tank**4)))) + (Q_external*a0*recoil_prob - 2*Q_external*a0 - Q_external*b0 - Q_external*c0 - rs*(N_d0*Q*V_delay*(2*N_af + N_bf) + N_r0*Q*V_tank*(2*N_af + N_bf) - recoil_prob*(N_af*N_d0*Q*V_delay + N_af*N_r0*Q*V_tank)))/Q_external)

    return X


def tc_integral_filter_activity_nodelay(V_tank,Q,a0,b0,N_bf,N_af,c0,rs,recoil_prob,N_r0,t,Q_external,eff, **kwargs):
    X = -eff*((-(-(rs*(N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a**3*lambda_b + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**2*lambda_b**3 - lambda_b**2*(N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a**2 + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**3) - lambda_c**3*(N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**2 + lambda_b**2*(-N_bf*N_r0*Q*Q_external*V_tank**3 + N_r0*Q*V_tank**4*lambda_a*(2*N_af + N_bf)) - lambda_b*(N_r0*Q*Q_external*V_tank**3*lambda_a*(N_af - N_bf) + N_r0*Q*V_tank**4*lambda_a**2*(2*N_af + N_bf))) + lambda_c**2*(N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a**2 + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**3 + lambda_b**3*(-N_bf*N_r0*Q*Q_external*V_tank**3 + N_r0*Q*V_tank**4*lambda_a*(2*N_af + N_bf)) - lambda_b*(N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a + N_r0*Q*Q_external*V_tank**3*lambda_a**2*(N_af - N_bf) + N_r0*Q*V_tank**4*lambda_a**3*(2*N_af + N_bf))) - lambda_c*(N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a**3 + lambda_b**3*(N_r0*Q*Q_external*V_tank**3*lambda_a*(N_af - N_bf) + N_r0*Q*V_tank**4*lambda_a**2*(2*N_af + N_bf)) - lambda_b**2*(N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a + N_r0*Q*Q_external*V_tank**3*lambda_a**2*(N_af - N_bf) + N_r0*Q*V_tank**4*lambda_a**3*(2*N_af + N_bf))) - recoil_prob*(lambda_c**3*(N_af*N_r0*Q*V_tank**4*lambda_a**2*lambda_b - N_af*N_r0*Q*V_tank**4*lambda_a*lambda_b**2) - lambda_c**2*(N_af*N_r0*Q*V_tank**4*lambda_a**3*lambda_b - N_af*N_r0*Q*V_tank**4*lambda_a*lambda_b**3) + lambda_c*(N_af*N_r0*Q*V_tank**4*lambda_a**3*lambda_b**2 - N_af*N_r0*Q*V_tank**4*lambda_a**2*lambda_b**3)))*exp(lambda_a*t) + (lambda_b**3*(-Q_external**3*V_tank*a0*lambda_a + Q_external**2*V_tank**2*a0*lambda_a**2) - lambda_b**2*(-Q_external**4*a0*lambda_a + Q_external**2*V_tank**2*a0*lambda_a**3) + lambda_b*(-Q_external**4*a0*lambda_a**2 + Q_external**3*V_tank*a0*lambda_a**3) - lambda_c**3*(-Q_external**3*V_tank*a0*lambda_a + Q_external**2*V_tank**2*a0*lambda_a**2 + 2*lambda_b**2*(-Q_external**2*V_tank**2*a0 + Q_external*V_tank**3*a0*lambda_a) - lambda_b*(-2*Q_external**3*V_tank*a0 + Q_external**2*V_tank**2*a0*lambda_a + Q_external*V_tank**3*a0*lambda_a**2)) + lambda_c**2*(-Q_external**4*a0*lambda_a + Q_external**2*V_tank**2*a0*lambda_a**3 + 2*lambda_b**3*(-Q_external**2*V_tank**2*a0 + Q_external*V_tank**3*a0*lambda_a) - lambda_b*(-2*Q_external**4*a0 + Q_external**3*V_tank*a0*lambda_a + Q_external*V_tank**3*a0*lambda_a**3)) - lambda_c*(-Q_external**4*a0*lambda_a**2 + Q_external**3*V_tank*a0*lambda_a**3 + lambda_b**3*(-2*Q_external**3*V_tank*a0 + Q_external**2*V_tank**2*a0*lambda_a + Q_external*V_tank**3*a0*lambda_a**2) - lambda_b**2*(-2*Q_external**4*a0 + Q_external**3*V_tank*a0*lambda_a + Q_external*V_tank**3*a0*lambda_a**3)) + recoil_prob*(lambda_c**3*(lambda_b**2*(-Q_external**2*V_tank**2*a0 + Q_external*V_tank**3*a0*lambda_a) - lambda_b*(-Q_external**3*V_tank*a0 + Q_external**2*V_tank**2*a0*lambda_a)) - lambda_c**2*(lambda_b**3*(-Q_external**2*V_tank**2*a0 + Q_external*V_tank**3*a0*lambda_a) - lambda_b*(-Q_external**4*a0 + Q_external**3*V_tank*a0*lambda_a)) + lambda_c*(lambda_b**3*(-Q_external**3*V_tank*a0 + Q_external**2*V_tank**2*a0*lambda_a) - lambda_b**2*(-Q_external**4*a0 + Q_external**3*V_tank*a0*lambda_a))) - rs*(N_af*N_r0*Q*Q_external**3*V_tank*lambda_a**2*lambda_b + N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a*lambda_b**3 - lambda_b**2*(N_af*N_r0*Q*Q_external**3*V_tank*lambda_a + N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a**2) - lambda_c**3*(N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a + 2*N_af*N_r0*Q*Q_external*V_tank**3*lambda_b**2 - lambda_b*(2*N_af*N_r0*Q*Q_external**2*V_tank**2 + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a)) + lambda_c**2*(N_af*N_r0*Q*Q_external**3*V_tank*lambda_a + N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a**2 + 2*N_af*N_r0*Q*Q_external*V_tank**3*lambda_b**3 - lambda_b*(2*N_af*N_r0*Q*Q_external**3*V_tank + N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**2)) - lambda_c*(N_af*N_r0*Q*Q_external**3*V_tank*lambda_a**2 + lambda_b**3*(2*N_af*N_r0*Q*Q_external**2*V_tank**2 + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a) - lambda_b**2*(2*N_af*N_r0*Q*Q_external**3*V_tank + N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**2)) + recoil_prob*(lambda_c**3*(-N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_b + N_af*N_r0*Q*Q_external*V_tank**3*lambda_b**2) - lambda_c**2*(-N_af*N_r0*Q*Q_external**3*V_tank*lambda_b + N_af*N_r0*Q*Q_external*V_tank**3*lambda_b**3) + lambda_c*(-N_af*N_r0*Q*Q_external**3*V_tank*lambda_b**2 + N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_b**3))))*exp(Q_external*t/V_tank))*exp(lambda_b*t) + (lambda_c**3*(lambda_a**2*(Q_external**2*V_tank**2*a0 + Q_external**2*V_tank**2*b0) - lambda_a*(Q_external**3*V_tank*a0 + Q_external**3*V_tank*b0) + lambda_b**2*(-Q_external**2*V_tank**2*b0 + Q_external*V_tank**3*b0*lambda_a) + lambda_b*(Q_external**3*V_tank*b0 + Q_external**2*V_tank**2*a0*lambda_a - lambda_a**2*(Q_external*V_tank**3*a0 + Q_external*V_tank**3*b0))) - lambda_c**2*(lambda_a**3*(Q_external**2*V_tank**2*a0 + Q_external**2*V_tank**2*b0) - lambda_a*(Q_external**4*a0 + Q_external**4*b0) + lambda_b**2*(-Q_external**3*V_tank*b0 + Q_external*V_tank**3*b0*lambda_a**2) - lambda_b*(-Q_external**4*b0 + Q_external**2*V_tank**2*b0*lambda_a**2 + lambda_a**3*(Q_external*V_tank**3*a0 + Q_external*V_tank**3*b0) - lambda_a*(Q_external**3*V_tank*a0 + Q_external**3*V_tank*b0))) + lambda_c*(lambda_a**3*(Q_external**3*V_tank*a0 + Q_external**3*V_tank*b0) - lambda_a**2*(Q_external**4*a0 + Q_external**4*b0) + lambda_b**2*(-Q_external**3*V_tank*b0*lambda_a + Q_external**2*V_tank**2*b0*lambda_a**2) + lambda_b*(Q_external**4*b0*lambda_a + Q_external**3*V_tank*a0*lambda_a**2 - lambda_a**3*(Q_external**2*V_tank**2*a0 + Q_external**2*V_tank**2*b0))) - recoil_prob*(lambda_c**3*(-Q_external**3*V_tank*a0*lambda_a + Q_external**2*V_tank**2*a0*lambda_a**2 - lambda_b*(-Q_external**2*V_tank**2*a0*lambda_a + Q_external*V_tank**3*a0*lambda_a**2)) - lambda_c**2*(-Q_external**4*a0*lambda_a + Q_external**2*V_tank**2*a0*lambda_a**3 - lambda_b*(-Q_external**3*V_tank*a0*lambda_a + Q_external*V_tank**3*a0*lambda_a**3)) + lambda_c*(-Q_external**4*a0*lambda_a**2 + Q_external**3*V_tank*a0*lambda_a**3 - lambda_b*(-Q_external**3*V_tank*a0*lambda_a**2 + Q_external**2*V_tank**2*a0*lambda_a**3))) + rs*(lambda_c**3*(-N_r0*Q*Q_external**2*V_tank**2*lambda_a*(N_af + N_bf) + N_r0*Q*Q_external*V_tank**3*lambda_a**2*(N_af + N_bf) - lambda_b*(-N_bf*N_r0*Q*Q_external**2*V_tank**2 + N_bf*N_r0*Q*Q_external*V_tank**3*lambda_a)) - lambda_c**2*(-N_r0*Q*Q_external**3*V_tank*lambda_a*(N_af + N_bf) + N_r0*Q*Q_external*V_tank**3*lambda_a**3*(N_af + N_bf) - lambda_b*(-N_bf*N_r0*Q*Q_external**3*V_tank + N_bf*N_r0*Q*Q_external*V_tank**3*lambda_a**2)) + lambda_c*(-N_r0*Q*Q_external**3*V_tank*lambda_a**2*(N_af + N_bf) + N_r0*Q*Q_external**2*V_tank**2*lambda_a**3*(N_af + N_bf) - lambda_b*(-N_bf*N_r0*Q*Q_external**3*V_tank*lambda_a + N_bf*N_r0*Q*Q_external**2*V_tank**2*lambda_a**2)) - recoil_prob*(lambda_c**3*(-N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**2) - lambda_c**2*(-N_af*N_r0*Q*Q_external**3*V_tank*lambda_a + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**3) + lambda_c*(-N_af*N_r0*Q*Q_external**3*V_tank*lambda_a**2 + N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a**3))))*exp(Q_external*t/V_tank + lambda_a*t))*exp(lambda_c*t) + (lambda_b**3*(lambda_a**2*(Q_external**2*V_tank**2*a0 + Q_external**2*V_tank**2*b0 + Q_external**2*V_tank**2*c0) - lambda_a*(Q_external**3*V_tank*a0 + Q_external**3*V_tank*b0 + Q_external**3*V_tank*c0)) - lambda_b**2*(lambda_a**3*(Q_external**2*V_tank**2*a0 + Q_external**2*V_tank**2*b0 + Q_external**2*V_tank**2*c0) - lambda_a*(Q_external**4*a0 + Q_external**4*b0 + Q_external**4*c0)) + lambda_b*(lambda_a**3*(Q_external**3*V_tank*a0 + Q_external**3*V_tank*b0 + Q_external**3*V_tank*c0) - lambda_a**2*(Q_external**4*a0 + Q_external**4*b0 + Q_external**4*c0)) - lambda_c**3*(-Q_external**3*V_tank*c0*lambda_a + Q_external**2*V_tank**2*c0*lambda_a**2 + lambda_b**2*(-Q_external**2*V_tank**2*c0 + Q_external*V_tank**3*c0*lambda_a) - lambda_b*(-Q_external**3*V_tank*c0 + Q_external*V_tank**3*c0*lambda_a**2)) + lambda_c**2*(-Q_external**4*c0*lambda_a + Q_external**2*V_tank**2*c0*lambda_a**3 - lambda_b**3*(Q_external**2*V_tank**2*b0 + Q_external**2*V_tank**2*c0 - lambda_a*(Q_external*V_tank**3*b0 + Q_external*V_tank**3*c0)) - lambda_b**2*(-Q_external**3*V_tank*b0 + Q_external*V_tank**3*b0*lambda_a**2) - lambda_b*(-Q_external**4*c0 + Q_external**3*V_tank*b0*lambda_a - Q_external**2*V_tank**2*b0*lambda_a**2 + Q_external*V_tank**3*c0*lambda_a**3)) - lambda_c*(-Q_external**4*c0*lambda_a**2 + Q_external**3*V_tank*c0*lambda_a**3 - lambda_b**3*(Q_external**3*V_tank*b0 + Q_external**3*V_tank*c0 + Q_external**2*V_tank**2*a0*lambda_a - lambda_a**2*(Q_external*V_tank**3*a0 + Q_external*V_tank**3*b0 + Q_external*V_tank**3*c0)) - lambda_b**2*(-Q_external**4*b0 - Q_external**4*c0 + Q_external**2*V_tank**2*b0*lambda_a**2 + lambda_a**3*(Q_external*V_tank**3*a0 + Q_external*V_tank**3*b0 + Q_external*V_tank**3*c0) - lambda_a*(Q_external**3*V_tank*a0 + Q_external**3*V_tank*b0)) - lambda_b*(Q_external**4*b0*lambda_a + Q_external**3*V_tank*a0*lambda_a**2 - lambda_a**3*(Q_external**2*V_tank**2*a0 + Q_external**2*V_tank**2*b0))) - recoil_prob*(lambda_b**3*(-Q_external**3*V_tank*a0*lambda_a + Q_external**2*V_tank**2*a0*lambda_a**2) - lambda_b**2*(-Q_external**4*a0*lambda_a + Q_external**2*V_tank**2*a0*lambda_a**3) + lambda_b*(-Q_external**4*a0*lambda_a**2 + Q_external**3*V_tank*a0*lambda_a**3) - lambda_c*(lambda_b**3*(-Q_external**2*V_tank**2*a0*lambda_a + Q_external*V_tank**3*a0*lambda_a**2) - lambda_b**2*(-Q_external**3*V_tank*a0*lambda_a + Q_external*V_tank**3*a0*lambda_a**3) + lambda_b*(-Q_external**3*V_tank*a0*lambda_a**2 + Q_external**2*V_tank**2*a0*lambda_a**3))) + rs*(lambda_b**3*(-N_r0*Q*Q_external**2*V_tank**2*lambda_a*(N_af + N_bf) + N_r0*Q*Q_external*V_tank**3*lambda_a**2*(N_af + N_bf)) - lambda_b**2*(-N_r0*Q*Q_external**3*V_tank*lambda_a*(N_af + N_bf) + N_r0*Q*Q_external*V_tank**3*lambda_a**3*(N_af + N_bf)) + lambda_b*(-N_r0*Q*Q_external**3*V_tank*lambda_a**2*(N_af + N_bf) + N_r0*Q*Q_external**2*V_tank**2*lambda_a**3*(N_af + N_bf)) - lambda_c*(lambda_b**3*(-N_bf*N_r0*Q*Q_external**2*V_tank**2 + N_bf*N_r0*Q*Q_external*V_tank**3*lambda_a) - lambda_b**2*(-N_bf*N_r0*Q*Q_external**3*V_tank + N_bf*N_r0*Q*Q_external*V_tank**3*lambda_a**2) + lambda_b*(-N_bf*N_r0*Q*Q_external**3*V_tank*lambda_a + N_bf*N_r0*Q*Q_external**2*V_tank**2*lambda_a**2)) - recoil_prob*(lambda_b**3*(-N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**2) - lambda_b**2*(-N_af*N_r0*Q*Q_external**3*V_tank*lambda_a + N_af*N_r0*Q*Q_external*V_tank**3*lambda_a**3) + lambda_b*(-N_af*N_r0*Q*Q_external**3*V_tank*lambda_a**2 + N_af*N_r0*Q*Q_external**2*V_tank**2*lambda_a**3))))*exp(Q_external*t/V_tank + lambda_a*t + lambda_b*t))*exp(-Q_external*t/V_tank - lambda_a*t - lambda_b*t - lambda_c*t)/(lambda_b**3*(-Q_external**3*V_tank*lambda_a + Q_external**2*V_tank**2*lambda_a**2) - lambda_b**2*(-Q_external**4*lambda_a + Q_external**2*V_tank**2*lambda_a**3) + lambda_b*(-Q_external**4*lambda_a**2 + Q_external**3*V_tank*lambda_a**3) - lambda_c**3*(-Q_external**3*V_tank*lambda_a + Q_external**2*V_tank**2*lambda_a**2 + lambda_b**2*(-Q_external**2*V_tank**2 + Q_external*V_tank**3*lambda_a) - lambda_b*(-Q_external**3*V_tank + Q_external*V_tank**3*lambda_a**2)) + lambda_c**2*(-Q_external**4*lambda_a + Q_external**2*V_tank**2*lambda_a**3 + lambda_b**3*(-Q_external**2*V_tank**2 + Q_external*V_tank**3*lambda_a) - lambda_b*(-Q_external**4 + Q_external*V_tank**3*lambda_a**3)) - lambda_c*(-Q_external**4*lambda_a**2 + Q_external**3*V_tank*lambda_a**3 + lambda_b**3*(-Q_external**3*V_tank + Q_external*V_tank**3*lambda_a**2) - lambda_b**2*(-Q_external**4 + Q_external*V_tank**3*lambda_a**3))) + (Q_external*a0*recoil_prob - 2*Q_external*a0 - Q_external*b0 - Q_external*c0 + rs*(N_af*N_r0*Q*V_tank*recoil_prob - N_r0*Q*V_tank*(2*N_af + N_bf)))/Q_external)

    return X


def tc_integral_filter_activity_two_delay(V_delay,N_d10,V_tank,Q,a0,b0,N_bf,N_af,c0,N_d0,rs,recoil_prob,N_r0,Q_external,eff,t, **kwargs):
    x0 = 1/V_delay
    x1 = Q_external*x0
    x2 = 1/V_tank
    x3 = Q_external*x2
    x4 = lambda_a + x1 + x3
    x5 = lambda_b + x4
    x6 = Q_external**6
    x7 = lambda_a**2
    x8 = x6*x7
    x9 = Q_external**3
    x10 = V_delay**2
    x11 = V_tank**2
    x12 = V_delay*V_tank
    x13 = 2*x12
    x14 = x10 + x11 - x13
    x15 = x14*x9
    x16 = lambda_a**3
    x17 = V_tank*x10*x14
    x18 = x16*x17
    x19 = Q_external**2
    x20 = lambda_a*x19
    x21 = V_tank**3
    x22 = V_delay**3
    x23 = 2*x22
    x24 = V_tank*x10
    x25 = 3*x24
    x26 = x21 + x23 - x25
    x27 = x20*x26
    x28 = Q_external*x7
    x29 = 2*x21
    x30 = V_delay*x11
    x31 = 3*x30
    x32 = x22 + x29 - x31
    x33 = V_delay*x32
    x34 = x28*x33
    x35 = -x15 + x18 + x27 - x34
    x36 = lambda_b*x35*x8
    x37 = lambda_b**5
    x38 = V_tank*x10*x37
    x39 = lambda_a*x9
    x40 = x35*x39
    x41 = x38*x40
    x42 = Q_external**5
    x43 = lambda_a*x42
    x44 = lambda_b**2
    x45 = Q_external**4
    x46 = x14*x45
    x47 = x19*x7
    x48 = V_delay**4
    x49 = 3*x48
    x50 = V_tank**4
    x51 = V_tank*x22
    x52 = 4*x51
    x53 = -x52
    x54 = x50 + x53
    x55 = x49 + x54
    x56 = x47*x55
    x57 = V_delay*x16
    x58 = 2*x10
    x59 = x11*x58
    x60 = -x59
    x61 = x48 + x50 + x60
    x62 = 2*Q_external*x57*x61
    x63 = lambda_a**4
    x64 = V_tank*x10*x63
    x65 = x26*x64
    x66 = -x46 + x56 - x62 + x65
    x67 = x43*x44*x66
    x68 = lambda_a*x45
    x69 = lambda_b**3
    x70 = x26*x45
    x71 = -x70
    x72 = x55*x9
    x73 = lambda_a*x72
    x74 = V_tank*x22*x63
    x75 = x32*x74
    x76 = Q_external*x16
    x77 = 3*x50
    x78 = V_delay*x21
    x79 = 4*x78
    x80 = -x79
    x81 = x48 + x80
    x82 = x77 + x81
    x83 = x10*x76*x82
    x84 = x71 + x73 + x75 - x83
    x85 = x68*x69*x84
    x86 = V_delay*lambda_a*x9
    x87 = lambda_b**4
    x88 = x32*x45
    x89 = -x88
    x90 = 2*x9
    x91 = lambda_a*x61*x90
    x92 = x11*x22*x63
    x93 = x14*x92
    x94 = V_delay*x47*x82
    x95 = x89 + x91 + x93 - x94
    x96 = x86*x87*x95
    x97 = x36 + x41 - x67 + x85 - x96
    x98 = lambda_c**5
    x99 = V_tank*x10*x98
    x100 = x14*x6
    x101 = lambda_a*x100
    x102 = x26*x42
    x103 = x102*x7
    x104 = x15*x64
    x105 = V_delay*x32*x45
    x106 = x105*x16
    x107 = -x101 + x103 + x104 - x106
    x108 = V_tank*x10*x87
    x109 = x10*x9
    x110 = x11*x9
    x111 = x109 + x110 - x13*x9 - x18 - x27 + x34
    x112 = lambda_b*x19
    x113 = x10*x45
    x114 = x11*x45
    x115 = x113 + x114 - x13*x45 - x56 + x62 - x65
    x116 = V_delay*x69
    x117 = x22*x45
    x118 = x29*x45
    x119 = 3*x45
    x120 = x117 + x118 - x119*x30 - x91 - x93 + x94
    x121 = Q_external*x44
    x122 = x21*x45
    x123 = x23*x45
    x124 = -x119*x24 + x122 + x123 - x73 - x75 + x83
    x125 = -x108*x111 + x112*x115 + x116*x120 - x121*x124
    x126 = lambda_c**2
    x127 = Q_external*x126
    x128 = Q_external**8
    x129 = lambda_a*x128*x14
    x130 = x16*x6
    x131 = x130*x55
    x132 = V_delay*x63
    x133 = 2*x48
    x134 = 2*x50
    x135 = -4*x10*x11 + x133 + x134
    x136 = lambda_a**5
    x137 = V_tank*x10*x136
    x138 = x137*x70
    x139 = -x129 + x131 - x132*x135*x42 + x138
    x140 = Q_external*x69
    x141 = x42*x50
    x142 = V_delay**5
    x143 = 4*x142
    x144 = V_tank**5
    x145 = V_tank*x48
    x146 = -5*x145
    x147 = x143 + x144 + x146
    x148 = x147*x68
    x149 = x22*x63
    x150 = 4*x144
    x151 = V_delay*x50
    x152 = -5*x151
    x153 = x142 + x152
    x154 = x150 + x153
    x155 = Q_external*x149*x154
    x156 = x136*x145*x82
    x157 = x141 - x148 + x155 - x156 + x42*x49 - x42*x52
    x158 = lambda_b*x9
    x159 = x10*x42
    x160 = x16*x19
    x161 = x147*x160
    x162 = x137*x55
    x163 = x11*x22
    x164 = -5*x163
    x165 = 3*x142
    x166 = 2*x144
    x167 = x165 + x166
    x168 = x164 + x167
    x169 = Q_external*x132*x168
    x170 = x11*x42 - x13*x42 + x159 - x161 - x162 + x169
    x171 = V_delay*x87
    x172 = x133*x42
    x173 = x134*x42
    x174 = x10*x11*x42
    x175 = x168*x68
    x176 = x10*x16*x19
    x177 = x154*x176
    x178 = x11*x48
    x179 = x136*x178*x32
    x180 = x172 + x173 - 4*x174 - x175 + x177 - x179
    x181 = lambda_c**3
    x182 = lambda_a*x128*x26
    x183 = Q_external**7
    x184 = x183*x7
    x185 = x184*x55
    x186 = x63*x82
    x187 = x159*x186
    x188 = V_tank*x136*x22
    x189 = x188*x88
    x190 = -x182 + x185 - x187 + x189
    x191 = V_tank*x22*x37
    x192 = x19*x44
    x193 = x10*x87
    x194 = x42*x48
    x195 = x136*x14*x21*x48
    x196 = V_delay*x7*x9
    x197 = x154*x196
    x198 = x10*x21
    x199 = -5*x198
    x200 = 2*x142
    x201 = 3*x144
    x202 = x199 + x200 + x201
    x203 = x202*x68
    x204 = x194 - x195 + x197 - x203 + x42*x77 - x42*x79
    x205 = x21*x42
    x206 = x7*x9
    x207 = x147*x206
    x208 = V_tank*x23
    x209 = x136*x208*x61
    x210 = Q_external*x10*x63
    x211 = x202*x210
    x212 = x205 - x207 - x209 + x211 + x23*x42 - x25*x42
    x213 = lambda_c*x19
    x214 = x14*x183
    x215 = x214*x7
    x216 = x130*x26
    x217 = x137*x46
    x218 = x33*x42*x63
    x219 = -x215 + x216 + x217 - x218
    x220 = x22*x42
    x221 = x136*x163*x26
    x222 = x168*x206
    x223 = V_delay*x16*x19
    x224 = x202*x223
    x225 = x220 - x221 - x222 + x224 + x29*x42 - x31*x42
    x226 = lambda_c**4
    x227 = V_delay*x226
    x228 = x183*x32
    x229 = lambda_a*x228
    x230 = x42*x82
    x231 = x230*x57
    x232 = x11*x14*x9
    x233 = x136*x22*x232
    x234 = x135*x8 - x229 - x231 + x233
    x235 = x11*x22*x37
    x236 = a0 + b0
    x237 = c0 + x236
    x238 = V_tank*x10*x35
    x239 = x238*x87
    x240 = x116*x95
    x241 = -x112*x66 + x121*x84 + x239 - x240
    x242 = x24*x98*(x107 + x241)
    x243 = c0*x135
    x244 = c0*x82
    x245 = x244*x42
    x246 = V_tank*b0*x10*x87
    x247 = x246*x95
    x248 = -b0*x15 - c0*x15
    x249 = b0 + c0
    x250 = V_delay*V_tank*lambda_a
    x251 = b0*x46
    x252 = x32*x42
    x253 = c0*x252
    x254 = -x253
    x255 = Q_external*x11*x22*x63
    x256 = b0*x14
    x257 = x255*x256
    x258 = -x257
    x259 = b0*x26
    x260 = c0*x168
    x261 = -x260
    x262 = b0*x32
    x263 = c0*x202
    x264 = -x263
    x265 = -x245
    x266 = V_tank*x259
    x267 = c0*x154
    x268 = V_tank*x10*x16*x19
    x269 = b0*x82
    x270 = x255*x262
    x271 = b0*x55
    x272 = V_tank*x271
    x273 = x14*x42
    x274 = b0*x273
    x275 = x243*x42
    x276 = -x275
    x277 = V_delay*V_tank*x7
    x278 = x255*x259
    x279 = -x278
    x280 = -x267
    x281 = b0*x135
    x282 = c0*x55
    x283 = x10*x42*x63
    x284 = c0*x88
    x285 = b0*x88
    x286 = V_tank*x10*x32*x76
    x287 = a0*x286 + x285
    x288 = c0*x135
    x289 = -x288
    x290 = V_delay*V_tank*x14
    x291 = a0*x290
    x292 = b0*x135
    x293 = x291 - x292
    x294 = V_delay*x19*x7
    x295 = -x244
    x296 = V_tank*a0
    x297 = x26*x296
    x298 = -x269 + x297
    x299 = x133 + x134
    x300 = x10*x11
    x301 = x299 - 6*x300 + x51 + x78
    x302 = b0*x301
    x303 = x302*x42
    x304 = x179*x236 - x303
    x305 = V_delay*V_tank*x55*x7*x9
    x306 = V_tank*x133
    x307 = 4*x198
    x308 = -x307
    x309 = x306 + x308
    x310 = 6*x144
    x311 = x142 + x152 + x309 + x310
    x312 = b0*x311
    x313 = Q_external*V_tank*x22*x63
    x314 = V_delay*V_tank*a0
    x315 = -b0*x168
    x316 = x116*(-x176*x312 + x236*x305 + x304 - x313*(a0*x82 - x266) - x68*(x26*x314 + x315))
    x317 = c0*x102
    x318 = V_delay*lambda_a
    x319 = x314*x32
    x320 = x264 + x319
    x321 = b0*x290
    x322 = c0*x147
    x323 = a0*x17 + x322
    x324 = V_tank*x10*x16
    x325 = x324*x82
    x326 = x19*x325
    x327 = 3*x300
    x328 = -x327
    x329 = x208 + x328
    x330 = 4*x50
    x331 = x329 + x330 + x48 + x80
    x332 = b0*x331
    x333 = -x236*x326 + x270 - x332*x42
    x334 = 2*a0
    x335 = x334*x61
    x336 = V_tank*x335
    x337 = -b0*x154 + x336
    x338 = 4*x163
    x339 = -x338
    x340 = -b0*(V_tank*x49 + x150 + x199 + x200 + x339)
    x341 = x282*x42
    x342 = b0*x33
    x343 = x151 - 8*x163 + x167 + x306
    x344 = b0*x343
    x345 = V_delay*x134
    x346 = x145 + x345
    x347 = -8*x198 + x200 + x201 + x346
    x348 = b0*x347
    x349 = x296*x55 - x348
    x350 = V_tank*x136*x48
    x351 = Q_external*x22*x63
    x352 = c0*x46
    x353 = lambda_a*lambda_b*x9
    x354 = x26*x9
    x355 = lambda_a*x354
    x356 = a0*x355
    x357 = x251 + x356
    x358 = x236*x65
    x359 = Q_external*V_delay*x16
    x360 = a0*x301
    x361 = x292 + x360
    x362 = x359*x361
    x363 = V_delay*x29
    x364 = x328 + x363
    x365 = 4*x48
    x366 = x364 + x365 + x50 + x53
    x367 = a0*x366
    x368 = x271 + x367
    x369 = x368*x47
    x370 = b0*x252
    x371 = x68*(x321 + x360)
    x372 = a0*x347
    x373 = x144 + x200
    x374 = x21*x58
    x375 = -x374
    x376 = x145 + x339 + x345 + x373 + x375
    x377 = x334*x376
    x378 = x344 + x377
    x379 = c0*x273
    x380 = lambda_a*x236
    x381 = x380*x70
    x382 = x206*x271
    x383 = 6*x142
    x384 = x144 + x146 + x339 + x345 + x383
    x385 = a0*x384
    x386 = b0*x147 + x385
    x387 = b0*x366
    x388 = Q_external*V_delay*x63
    x389 = b0*(V_delay*x77 + x143 + x164 + x166 + x308) + x377
    x390 = x259*x42
    x391 = x176*x269
    x392 = x68*(x342 + x367)
    x393 = b0*x202
    x394 = x372 + x393
    x395 = b0*x384
    x396 = c0*x70
    x397 = x259*x45
    x398 = V_delay*x360
    x399 = x398*x47
    x400 = -x282
    x401 = a0*x33
    x402 = -x271 + x401
    x403 = Q_external*x10*x16
    x404 = a0*x331
    x405 = x269 + x404
    x406 = -x390
    x407 = V_tank*x136*x22*x236
    x408 = x301*x407 + x406
    x409 = V_delay*x269
    x410 = x11*x23
    x411 = -x410
    x412 = x142 + x151 + x166 + x309 + x411
    x413 = x334*x412
    x414 = -V_delay*lambda_a*x236*x88 + x206*x395 - x210*(x393 + x413) + x223*(a0*x343 - x409) + x408
    x415 = -x379
    x416 = -x322 + x398
    x417 = V_delay*x404
    x418 = x196*(x272 + x413)
    x419 = x315 + x417
    x420 = a0*x311
    x421 = x387*x42
    x422 = x176*x348
    x423 = x196*x343
    x424 = x236*x423
    x425 = -6*x145
    x426 = -x198
    x427 = -b0*(x143 + x144 + x410 + x425 + x426)
    x428 = -x163
    x429 = b0*(x142 + x150 - 6*x151 + x374 + x428) + x420
    x430 = a0*lambda_b*recoil_prob
    x431 = lambda_a*x6
    x432 = x35*x9
    x433 = V_tank*x10*(x241 + x40)
    x434 = x26*x324
    x435 = Q_external*V_delay*x7
    x436 = x20*x366 - x301*x435 - x354 + x434
    x437 = x108*x436
    x438 = 2*Q_external*V_delay*x16
    x439 = -x112*(x366*x64 - x376*x438 + x384*x47 + x71)
    x440 = -x301*x45
    x441 = 2*lambda_a*x9
    x442 = x26*x92 - x294*x347 + x376*x441 + x440
    x443 = x301*x74 - x347*x403 - x366*x45 + x384*x39
    x444 = x32*x9
    x445 = x20*x301 + x32*x324 - x331*x435 - x444
    x446 = x301*x64 + x343*x47 - x412*x438 + x89
    x447 = -x294*x311 + x32*x92 - x331*x45 + x412*x441
    x448 = -x311*x403 + x331*x74 + x343*x39 + x440
    x449 = Q*rs
    x450 = N_af + N_bf
    x451 = x42*x450*x7
    x452 = N_r0*x21
    x453 = N_d0 + N_d10
    x454 = x22*x453
    x455 = 2*N_r0
    x456 = -x455
    x457 = x453 + x456
    x458 = x30*x457
    x459 = 2*N_d10
    x460 = 2*N_d0
    x461 = -N_r0
    x462 = x460 + x461
    x463 = x459 + x462
    x464 = x24*x463
    x465 = x452 + x454 + x458 - x464
    x466 = x465*x9
    x467 = x324*x465
    x468 = x455*x50
    x469 = N_r0*x51
    x470 = x453*x48
    x471 = x10*x453
    x472 = 3*x11*x471
    x473 = 3*N_r0
    x474 = -x473
    x475 = x460 + x474
    x476 = x459 + x475
    x477 = x476*x78
    x478 = x468 + x469 + x470 - x472 + x477
    x479 = x435*x478
    x480 = N_r0*x50
    x481 = x133*x453
    x482 = x300*x473
    x483 = x453*x78
    x484 = 3*N_d10
    x485 = 3*N_d0
    x486 = x456 + x485
    x487 = x484 + x486
    x488 = x487*x51
    x489 = -x480 - x481 + x482 - x483 + x488
    x490 = x20*x489
    x491 = -x467 + x479 + x490
    x492 = x466 + x491
    x493 = V_tank*x10*x492*x87
    x494 = x45*x465
    x495 = N_r0*x144
    x496 = x151*x453
    x497 = x495 + x496
    x498 = N_r0*x145
    x499 = x142*x453
    x500 = x21*x455
    x501 = x10*x500
    x502 = x410*x453
    x503 = x497 + x498 + x499 - x501 - x502
    x504 = x438*x503
    x505 = x494 + x504
    x506 = x165*x453
    x507 = 4*N_r0
    x508 = x163*x507
    x509 = 4*N_d0
    x510 = 4*N_d10
    x511 = x474 + x509 + x510
    x512 = x145*x511
    x513 = x497 + x506 - x508 - x512
    x514 = x480 + x481 - x482 + x483 - x488
    x515 = lambda_b*(-x47*x513 + x505 - x514*x64)
    x516 = V_delay*lambda_a*x19
    x517 = x465*x92
    x518 = x45*x478
    x519 = x441*x503
    x520 = x144*x473
    x521 = x307*x453
    x522 = -x507
    x523 = x485 + x522
    x524 = x484 + x523
    x525 = x151*x524
    x526 = x498 + x499 + x520 - x521 + x525
    x527 = x294*x526
    x528 = x517 - x518 + x519 - x527
    x529 = x478*x74
    x530 = -x403*x526
    x531 = x44*(x39*x513 - x45*x514 + x529 + x530)
    x532 = N_r0*x11*x22*x63
    x533 = x14*x450*x532
    x534 = N_bf*x45
    x535 = N_d0*x22
    x536 = N_d0 + x522
    x537 = N_d0 + x461
    x538 = 2*V_tank*x10
    x539 = x537*x538
    x540 = x30*x536 + x500 + x535 - x539
    x541 = 2*N_af
    x542 = N_r0*x541
    x543 = 2*N_bf*x537
    x544 = x24*x543
    x545 = N_bf*N_d0
    x546 = N_r0*x450
    x547 = x545 - x546
    x548 = 3*N_af
    x549 = -N_bf
    x550 = x548 + x549
    x551 = V_tank*x10*x76*(x21*x542 - x22*x547 - x30*(N_r0*x550 + x545) + x544)
    x552 = x48*x545
    x553 = 3*N_bf
    x554 = -x553
    x555 = N_af + x554
    x556 = N_d0 + x474
    x557 = 2*N_bf*x556*x78
    x558 = x294*(-x327*x547 - x480*x555 - x51*x542 + x552 + x557)
    x559 = 2*N_bf
    x560 = N_d0*x559
    x561 = N_r0*x559
    x562 = -x559
    x563 = N_af + x562
    x564 = x455*x563
    x565 = N_d0*x553
    x566 = x39*(x300*x564 + x48*x560 + x50*x561 - x51*(N_r0*x555 + x565) + x547*x78)
    x567 = x533 - x534*x540 - x551 - x558 + x566
    x568 = V_delay*x536
    x569 = N_bf*x11
    x570 = x45*x569
    x571 = x117*x545 + x122*x561 - x45*x544 - x533 + x551 + x558 - x566 + x568*x570
    x572 = x205*x561 - x42*x544
    x573 = x42*x569
    x574 = x136*x450
    x575 = N_bf*x7*x9
    x576 = x144*x455
    x577 = x142*x485 + x576
    x578 = N_d0*V_delay
    x579 = x50*x578
    x580 = 8*N_r0
    x581 = -x163*x580 - x306*x475 + x577 + x579
    x582 = Q_external*V_tank*x10*x63
    x583 = x50*x542
    x584 = x545*x78
    x585 = N_bf*x51
    x586 = x523*x585
    x587 = x541 + x549
    x588 = x300*x455
    x589 = x142*x560
    x590 = 8*N_bf
    x591 = N_r0*x10*x21
    x592 = -N_r0*x11*x22*x26*x574 + N_r0*x14*x250*x45*x450 + x220*x545 + x223*(-x338*x547 - x495*x555 - x498*x550 + x559*x579 + x589 - x590*x591) + x568*x573 + x572 - x575*x581 - x582*(x133*x547 - x583 + x584 - x586 + x587*x588)
    x593 = 4*N_bf
    x594 = N_r0*x593
    x595 = x51*x561
    x596 = x136*x450*x48
    x597 = N_r0*x14*x21
    x598 = N_bf*Q_external*x11*x22*x63
    x599 = x145*x542
    x600 = N_bf*x50
    x601 = x485 - x580
    x602 = 5*N_bf
    x603 = x548 - x602
    x604 = x141*x594 - x174*x565 + x196*(V_delay*x600*x601 + x142*x545 - x307*x547 - x563*x576 - x599) + x326*x546 + x42*x552 + x42*x557 + x42*x595 - x540*x598 - x596*x597 - x68*(-4*N_bf*x11*x535 + x144*x594 + x345*x547 - x498*x555 + x589 + x591*x603)
    x605 = x141*x561
    x606 = N_r0*x11*x32
    x607 = N_d0*x142
    x608 = x151*x601 + x607
    x609 = 6*N_r0
    x610 = x144*x609
    x611 = x145*x455
    x612 = -x198*x509 + x608 + x610 + x611
    x613 = x10*x16*x19*x612
    x614 = x144*x561
    x615 = N_r0*x11
    x616 = x22*x615
    x617 = N_r0*x587 + x545
    x618 = -6*N_bf*N_r0*x11*x159 + N_bf*x613 + x194*x560 - x305*x546 - x313*(-x300*x565 + x363*x617 + x48*x547 - x480*x550 + x595) + x42*x584 - x42*x586 - x596*x606 + x605 - x68*(x142*x565 + x151*x547 - x306*(N_r0*x563 + x560) + x603*x616 + x614)
    x619 = Q_external*lambda_c
    x620 = x450*x540*x74
    x621 = N_bf*N_r0
    x622 = x50*x621
    x623 = -N_d10*x559
    x624 = N_af + x549
    x625 = N_d0*x624
    x626 = x623 + x625
    x627 = N_bf*N_d10
    x628 = -x450*x455
    x629 = x545 + x627 + x628
    x630 = N_d0*x450
    x631 = 4*N_af
    x632 = N_bf + x631
    x633 = -N_r0*x632
    x634 = -x542
    x635 = -N_d10*x553
    x636 = N_d0*x587
    x637 = x635 + x636
    x638 = x39*(-x300*(x630 + x633) - x48*x626 + x51*(x634 + x637) + x622 + x629*x78)
    x639 = -x627
    x640 = N_bf + x541
    x641 = N_d0*x640
    x642 = x639 + x641
    x643 = N_r0*x553
    x644 = x553 + x631
    x645 = x294*(x327*x629 + x48*x642 - x51*(-N_r0*x644 + x450*x485) + x583 + x78*(x626 + x643))
    x646 = N_d0*x48
    x647 = N_bf + x548
    x648 = N_d0*x647
    x649 = x623 + x648
    x650 = x548 + x559
    x651 = x403*(-x300*(x621 + x649) + x450*x646 + x480*x644 - x51*x629 + x78*(-x455*x650 + x642))
    x652 = -x465*x534 + x620 + x638 + x645 - x651
    x653 = V_delay*x457
    x654 = x122*x621 + x454*x534 - x464*x534 + x570*x653 - x620 - x638 - x645 + x651
    x655 = x205*x621 + x573*x653
    x656 = N_bf*x220
    x657 = x453*x656
    x658 = N_bf*x24
    x659 = x45*x540
    x660 = V_tank*x136*x22*x450
    x661 = x460*x48
    x662 = x468 + x661
    x663 = x21*x578 - x300*x609 - x51*x523 + x662
    x664 = -x495
    x665 = -x496 - x506 + x508 + x512 + x664
    x666 = x142*x460
    x667 = 8*N_af
    x668 = x602 + x667
    x669 = N_d0*x632
    x670 = x635 + x669
    x671 = V_delay*lambda_a*x450*x659 + x210*(x151*x642 - x163*(x561 + x670) - x306*x629 + x450*x666 + x495*x644 - x591*x668) - x223*(x142*x649 + x144*x542 + x151*x626 + x198*x594 - x306*(-N_r0*x650 + x450*x460) + x338*x629) - x42*x463*x658 + x575*x665 + x655 + x657 - x660*x663
    x672 = V_tank*x22*x42
    x673 = x194*x453
    x674 = x10*x11*x42*x453
    x675 = N_bf*x21
    x676 = x42*x675
    x677 = -N_r0*x647 + x630
    x678 = N_d0*x550
    x679 = -N_d10*x593 + x678
    x680 = N_bf*x673 + V_delay*x476*x676 - x11*x48*x540*x574 - x196*(-x11*x22*x450*x509 + x142*x642 + x151*(x594 + x637) + x307*x629 + x495*x632 + x498*x644) + x450*x613 - x465*x598 - x553*x674 + x605 + x621*x672 + x68*(x142*x626 - x163*x679 - x345*x629 + x374*x677 + x599 - x614)
    x681 = V_delay*x453
    x682 = x363*x556 + x646
    x683 = x50*x507
    x684 = x455*x51
    x685 = -x300*x485 + x682 + x683 + x684
    x686 = x163*x455
    x687 = -N_bf*x176*x526 + V_tank*x48*x574*x685 + x174*x643 + x196*x450*x581 - x351*(-x145*x629 + x151*(-N_r0*x668 + x649) - x163*x621 - x198*x670 + x450*x607 + x576*x650) + x42*x487*x585 - x42*x622 - x559*x673 - x676*x681 + x68*(-x142*x637 + x144*x621 + x145*(x633 + x679) + x151*x629 - x198*x630 + x647*x686)
    x688 = N_af*lambda_a*recoil_prob
    x689 = x20*x663 + x324*x540 - x435*x685 - x540*x9
    x690 = x576 + x607
    x691 = -x198*x507
    x692 = -x163*x460 + x579 + x611 + x690 + x691
    x693 = -x438*x692 + x47*x581 + x64*x663 - x659
    x694 = -x294*x612 + x441*x692 - x45*x685 + x540*x92
    x695 = x39*x581 - x403*x612 - x45*x663 + x685*x74
    x696 = -x251
    x697 = -x397
    x698 = b0*x239 - x101*x236 + x103*x236 + x104*x236 - x106*x236 - x112*(-x356 + x358 - x362 + x369 + x696) + x116*(-x236*x93 + x287 + x293*x39 - x294*x298) + x121*(x236*x75 - x39*x402 + x399 - x403*x405 + x697)
    x699 = V_tank*x10*x226
    x700 = x42*x55
    x701 = V_tank*x10*x136*x236
    x702 = -x370
    x703 = x221*x236 + x702
    x704 = -x274
    x705 = V_delay*x181
    x706 = x135*x6*x7
    x707 = x183*x26
    x708 = x15*x324
    x709 = x238*x69
    x710 = x112*x436
    x711 = Q_external*V_delay*x44
    x712 = x445*x711
    x713 = lambda_a*x102 - x100 - x105*x7 + x708 - x709 - x710 + x712
    x714 = V_tank*x10*x66
    x715 = V_delay*x7
    x716 = V_tank*x10*x69
    x717 = x42*x465
    x718 = lambda_a*x717
    x719 = x19*x465
    x720 = V_delay*x16*x450
    x721 = x478*x9
    x722 = x45*x489
    x723 = V_tank*x10*x450*x63*x719 - x450*x7*x722 - x450*x718 - x720*x721
    x724 = V_delay*x44
    x725 = Q_external*lambda_b
    x726 = N_bf*N_r0*V_tank*x10*x69
    x727 = x431*x465
    x728 = x45*x665
    x729 = 2*x503*x9
    x730 = x450*x489
    x731 = x431*x478
    x732 = 2*V_delay*x453*x50 - 4*x11*x22*x453 + 2*x142*x453 + x576 + x611 + x691
    x733 = x45*x526
    x734 = x10*x526*x9
    x735 = N_r0*x44
    x736 = Q_external*V_delay*lambda_b
    x737 = -x196*x478 + x238*x735 + x268*x465 - x489*x68 - x689*x736 - x717
    x738 = x489*x64
    x739 = V_tank*x10*x84
    x740 = Q_external*t
    x741 = x35*x87
    x742 = x355 - x359*(x299 - x51 + x60 - x78) - 2*x46 + x47*(x133 + x327 - x363 + x54) + x65
    x743 = x286 - x294*(x133 + x329 + 7*x50 - 8*x78) + x39*(-10*x300 + x330 + x365 + x51 + x78) - 2*x88 + x93
    x744 = -x294*x301 + x39*(x134 + x364 + 7*x48 - 8*x51) - x403*(x134 - x208 + x327 + x81) - 2*x70 + x75
    x745 = x35*x37
    x746 = 2*V_delay*x7*x9
    x747 = x195 - 2*x230 + x326 + x68*(x143 - 13*x198 + x310 + x346) - x746*(x142 + 5*x144 + x145 + x152 + x375)
    x748 = -x345
    x749 = -x145 + x748
    x750 = x221 - x223*(x200 + x201 + x375 + x749) - 2*x252 + x301*x68 + x7*x90*(x142 + x144 + x374 + x428 + x749)
    x751 = 4*x42*x61
    x752 = V_delay*x330
    x753 = -x176*(x153 + x166 - x306 + x307) + x179 - x412*x746 + x68*(7*x142 + x150 - 13*x163 + x309 + x752) - x751
    x754 = x162 - x169
    x755 = V_tank*x365
    x756 = lambda_a*x70 + x160*(x143 + x144 + x198 + x411 - x755) - x206*x33 - 2*x273 + x754
    x757 = x209 - x211
    x758 = -2*x102 + x19*x434 + x206*(6*x163 + x373 + x425 + x426 + x748) + x366*x68 + x757
    x759 = -x155 + x156
    x760 = x324*x55
    x761 = 2*lambda_a*x45
    x762 = x19*x760 - x423 - 2*x700 + x759 + x761*(5*x142 + x144 + x146 + x151 + x411)
    x763 = -x432 + x709 + x710 - x712
    x764 = x20*x384 - x343*x435 - x72 + x760
    x765 = 2*Q_external*V_delay*x69
    x766 = x20*x376 + x324*x61 - x412*x435 - x61*x9
    x767 = V_delay*x19*x44
    x768 = x20*x347 - x311*x435 + x325 - x82*x9
    x769 = 2*lambda_b*x9
    x770 = V_tank*x22*x87
    x771 = Q_external*x10*x69
    x772 = lambda_b*x6*x7
    x773 = Q_external*V_delay*lambda_a
    x774 = N_r0*x17*x7 - x540*x773
    x775 = x719 + x774
    x776 = V_tank*lambda_a*x10*x37*x9
    x777 = V_delay*lambda_a*x87*x9
    x778 = x16*x22
    x779 = N_r0*x11*x14*x778
    x780 = x14*x537
    x781 = x473*x50
    x782 = x457*x51
    x783 = -N_d10
    x784 = N_d0 + x783
    x785 = -x459
    x786 = N_r0 + x785
    x787 = N_d0 + x786
    x788 = x300*x787
    x789 = x646 + x78*(x522 + x784) + x781 - x782 - x788
    x790 = lambda_a*x42*x44
    x791 = N_r0*x434
    x792 = x474 + x485
    x793 = -x300*x507 - x51*x792 + x537*x78 + x662
    x794 = N_d0 + x459
    x795 = N_d0 + x484
    x796 = -x300*x537 + x457*x78 + x48*x794 + x480 - x51*x795
    x797 = lambda_a*x45*x69
    x798 = x16*x32*x469
    x799 = Q_external*x10*x7
    x800 = -x327*x537 + x682 + x781
    x801 = x474 + x794
    x802 = -x21*x801 + x22*x784 - x25*x537 + x31*x457
    x803 = x19*x452 + x19*x454 + x19*x458 - x19*x464 + x774
    x804 = x803*x87
    x805 = N_d0 + x456
    x806 = x453 + x522
    x807 = -x484
    x808 = x805 + x807
    x809 = 5*N_r0
    x810 = -x809
    x811 = x460 + x810
    x812 = -x300*x811 + x459*x48 + x480 + x51*x808 + x78*x806
    x813 = x20*x812 - x435*(-x486*x51 - x588 + x662 + x78*x805) + x454*x90 + x458*x90 - x464*x90 + x500*x9 + x791
    x814 = 6*N_d0
    x815 = 6*N_d10
    x816 = x814 + x815
    x817 = 7*N_r0
    x818 = 10*N_r0
    x819 = x485 + x783
    x820 = V_tank*x10*x28*(-x22*x805 - x30*(N_d0 + x455) + x500 + x539) - x10*x11*x816*x9 + x470*x90 + x477*x90 - x516*(-x300*(x509 + x786) + x50*x817 - x51*x806 + x661 + x78*(-x818 + x819)) + x683*x9 + x684*x9 + x779
    x821 = 4*x453*x48
    x822 = 6*N_r0*x11
    x823 = x459 + x474
    x824 = -x817
    x825 = x109*x822 - x468*x9 - x483*x90 + x488*x90 + x516*(x327*x806 + x468 + x48*x819 - x51*(x814 + x824) - x78*x823) - x798 + x799*(-x327*x805 + x468 + x682 - x684) - x821*x9
    x826 = V_tank*x22*x537
    x827 = x45*x453
    x828 = x10*x21*x45
    x829 = x48*x63
    x830 = -13*N_r0 + x509
    x831 = 5*N_d0
    x832 = x807 + x831
    x833 = -Q_external*x11*x16*x48*x780 + V_tank*x10*x47*(-x48*x805 - x78*(x507 + x784) + x781 + x782 + x788) + x200*x827 + x345*x45*x524 + x45*x610 + x45*x611 + x597*x829 - x828*(8*N_d0 + 8*N_d10) - x86*(x144*x818 - x145*x806 + x151*(x785 + x830) - x198*x832 - x616 + x666)
    x834 = x45*x481
    x835 = x10*x11*x45
    x836 = x520 + x666
    x837 = x456 + x784
    x838 = x456 + x794
    x839 = x459 + x460 + x824
    x840 = -Q_external*x16*x26*x826 + x26*x532 - x294*(-x145*x838 + x151*x837 - x163*(x485 + x807) + x198*x556 + x836) + x363*x45*x476 + x39*(x142*x459 + x145*x457 + x151*x839 - x163*(x461 + x815) - x198*(-x609 + x819) + x576) + x45*x683 + x45*x684 - x816*x835 + x834
    x841 = x144*x507
    x842 = V_delay*x45*x453
    x843 = x117*x453
    x844 = x10*x19*x7
    x845 = 4*N_r0*x145*x45 - V_tank*x32*x48*x537*x76 - 8*x11*x843 + x143*x827 + x330*x842 + x45*x841 - x580*x828 + x606*x829 - x844*(x145*x837 + x151*(x785 + x811) - x163*x792 - x198*x808 + x690) - x86*(x142*x819 - x145*x839 - x163*(x455 + x832) + x198*(x510 + x830) - x752*(N_d10 + x461) + x841)
    x846 = N_r0*V_tank*x10*x63
    x847 = V_delay*x16*x42
    x848 = x151*x457
    x849 = N_d0 + x510
    x850 = 2*x11*x45*x653 + x123*x453 - x359*(x151*x537 - x163*x809 - x537*x755 + x577) + x39*x812 - x45*x463*x538 + x45*x500 - x47*(-x142*x795 + x145*(x461 + x849) + x198*x805 + x664 + x686 - x848) + x55*x846
    x851 = x45*x468
    x852 = x113*x822 - x118*x681 + x208*x45*x487 - x39*(x142*x510 - x163*(x484 + x601) + x198*x823 + x306*(x785 + x805) + x495 + x848) + x403*(-x198*x809 - x338*x537 + x345*x537 + x836) - x45*x821 - x61*x63*x684 + x844*(x133*x784 - x208*x462 + x300*(x456 + x849) + x363*x537 - x50*x838) - x851
    x853 = x45*x469
    x854 = lambda_a*x183
    x855 = x10*x7
    x856 = Q_external*x16*x22
    x857 = x509 + x810
    x858 = x522 + x795
    x859 = 8*N_r0*x11*x117 - x134*x842 - x186*x498 + x306*x45*x511 + 2*x318*x9*(-N_d10*x151 + x142*(x460 + x783) - x145*x857 + x410*x806 + x495 + x501) - x383*x827 - x45*x576 - x844*(-x142*x784 + x145*x473 + x151*x858 - x307*x457 + x338*x805 + x495) + x856*(-x307*x537 + x608 + x841)
    x860 = lambda_a*x465
    x861 = N_r0*V_tank*x10*x7
    x862 = x19*x468 + x19*x469 + x19*x470 - x19*x472 + x19*x477 + x32*x861 - x685*x773
    x863 = -x19*x480 - x19*x481 + x19*x482 - x19*x483 + x19*x488 - x26*x861 + x663*x773
    x864 = -x112*x863 - x711*x862 + x716*x803 - x803*x9
    x865 = x19*x498 + x19*x499
    x866 = x19*x520 - x19*x521 + x19*x525 - x612*x773 + x82*x861 + x865
    x867 = x19*x495
    x868 = x19*x496
    x869 = -x19*x501 - x19*x502 + x61*x861 - x692*x773 + x865 + x867 + x868
    x870 = -x19*x506 + x19*x508 + x19*x512 - x55*x861 + x581*x773 - x867 - x868
    x871 = exp(t*x3)
    x872 = N_af*lambda_b*x16*x6
    x873 = V_delay - V_tank
    x874 = x19*x873
    x875 = x7*x873
    x876 = Q_external*lambda_a
    x877 = -x11
    x878 = x10 + x877
    x879 = x12*x875 + x874 - x876*x878
    x880 = N_af*V_tank*x10*x37
    x881 = x206*x879
    x882 = N_af*x42*x44*x7
    x883 = x873*x9
    x884 = V_delay*V_tank*x16
    x885 = -x12 + x58 + x877
    x886 = -x21
    x887 = x23 - x30 + x886
    x888 = N_af*V_delay*x7*x87*x9
    x889 = Q_external*V_delay*x11
    x890 = x16*x873
    x891 = x300*x890
    x892 = 2*x11
    x893 = x10 + x12 - x892
    x894 = x22 + x24 - x29
    x895 = N_af*x45*x69*x7
    x896 = x22 + x886
    x897 = -x20*x896
    x898 = Q_external*x7*x896
    x899 = N_af*x7*x873
    x900 = N_af*V_delay*V_tank*x63
    x901 = N_af*x16
    x902 = x45*x878
    x903 = V_delay*V_tank*x87
    x904 = N_bf*x9
    x905 = V_tank*x904
    x906 = x24*x640
    x907 = N_bf*x12
    x908 = x450*x892
    x909 = x10*x640
    x910 = x12*x640
    x911 = -x910
    x912 = x450*x58 - x569 + x911
    x913 = x20*x912
    x914 = V_delay*x904 + x435*(x907 - x908 + x909) - x890*x906 - x905 - x913
    x915 = lambda_a*lambda_b*x19
    x916 = N_af*x11
    x917 = -x916
    x918 = x10*x647 + x911 + x917
    x919 = N_af*x21
    x920 = -x919
    x921 = x22*x647
    x922 = -x28*(-V_delay*x908 + x658 + x920 + x921) + x624*x883 + x884*x918 + x913
    x923 = V_delay*x534
    x924 = V_tank*x534
    x925 = x19*x624*x7
    x926 = x22*x640
    x927 = N_af*x12
    x928 = -x11*x647 + x909 + x927
    x929 = x359*(-x29*x450 + x658 + x926) - x39*x918 - x64*x928 + x896*x925 + x923 - x924
    x930 = x10*x534
    x931 = x63*x873
    x932 = x11*x22*x640
    x933 = x624*x873
    x934 = Q_external*x10*x11*x16
    x935 = N_af*x24
    x936 = x926 + x935
    x937 = -x30*x647
    x938 = x39*(x23*x450 - x675 + x935 + x937)
    x939 = x294*(-x21*x647 + x936) - x570 + x930 - x931*x932 - x933*x934 - x938
    x940 = lambda_a*lambda_c*x19
    x941 = x45*x873
    x942 = x16*x878
    x943 = V_delay*V_tank*x63
    x944 = V_delay*x916
    x945 = x22*x632 - x906 + x920 - x944
    x946 = N_af*x50
    x947 = -x946
    x948 = x585 + x947
    x949 = V_delay*x919
    x950 = N_af*x941 + x294*x912 - x76*(-x450*x59 + x48*x632 + x948 - x949) + x86*x933 + x943*x945
    x951 = x12*x624
    x952 = x10*x587 + x917 - x951
    x953 = x624*x78
    x954 = x48*x647
    x955 = x21*x541
    x956 = x24*x541
    x957 = x921 + x937 - x955 + x956
    x958 = -x359*(-x363*x450 + x948 + x954) + x45*x952 - x47*(x48*x587 + x947 - x953) + x64*x957 + x86*x918
    x959 = x10*x624
    x960 = -x11*x587 + x927 + x959
    x961 = x10*x11*x63
    x962 = Q_external*V_delay*x11*x16
    x963 = x50*x541
    x964 = x45*x960 - x47*(x51*x541 - x647*x78 + x954 - x963) + x918*x961 + x938 + x952*x962
    x965 = N_af*V_delay*x6
    x966 = N_af*V_delay*V_tank*x136*x45
    x967 = N_af*x42*x63
    x968 = N_bf*x159
    x969 = x42*x907
    x970 = x48 - x50
    x971 = x9*x970
    x972 = V_delay*x16*x19*x624
    x973 = x48*x640
    x974 = N_af*x7*x971 - x188*(-x21*x632 + x936 + x944) + x210*(-x134*x450 + x585 + x973) - x68*x945 + x968 - x969 + x970*x972
    x975 = N_af*x51
    x976 = x973 + x975
    x977 = x11*x136*x22
    x978 = Q_external*x10*x11*x63
    x979 = x206*(x48*x624 - x50*x587 + x975) + x223*(-x50*x647 + x976) - x573 - x68*x957 - x928*x977 - x960*x978 + x968
    x980 = N_af*V_delay*x11*x63
    x981 = x136*x873
    x982 = N_af*x10*x11*x9
    x983 = N_af*x6*x7
    x984 = N_af*x16*x42
    x985 = x10*x11*x37
    x986 = N_af*x10*x16*x21
    x987 = x21*x48*x640
    x988 = Q_external*x624
    x989 = x21*x22
    x990 = x931*x989
    x991 = x10*x916
    x992 = x196*(-x50*x632 + x976 + x991) + x656 - x676 - x68*(x133*x450 - x600 - x632*x78 + x975 + x991) - x874*x986 - x981*x987 - x988*x990
    x993 = N_af*x16*x6
    x994 = N_af*V_delay*x42
    x995 = x63*x896
    x996 = N_af*x183*x7
    x997 = N_af*V_tank*x10*x136*x45
    x998 = N_af*lambda_a*lambda_b*lambda_c*recoil_prob*x10
    x999 = V_delay*V_tank*x69
    x1000 = x12*x942 + x883 - x898
    x1001 = x878*x9 + x891 + x897
    x1002 = x1000*x725 - x1001*x44 - x20*x879 + x879*x999
    x1003 = V_delay*V_tank*x226
    x1004 = x12*x995 - x76*x970 + x941
    x1005 = -x47*x970 + x878*x961 + x902
    x1006 = -lambda_a*x971 + x45*x896 + x990
    x1007 = x10*x11*x87
    x1008 = V_delay*x794 - V_tank*x795
    x1009 = -V_tank*x794 + x681
    x1010 = -x11*x795
    x1011 = x1010 + x471
    x1012 = x1008*x19 + x1009*x277 - x1011*x876
    x1013 = -V_tank*x453 + x578
    x1014 = x10*x11*x16
    x1015 = x1009*x1014
    x1016 = x10*x794
    x1017 = x1016 + x12*x453 - x795*x892
    x1018 = N_d0*V_tank
    x1019 = x10*x1018
    x1020 = x1019 - x29*x795 + x454
    x1021 = -x21*x795
    x1022 = x1021 + x535
    x1023 = -x21*x849 + x454
    x1024 = x1023*x28
    x1025 = V_tank*x578
    x1026 = x1025 + x471 - x794*x892
    x1027 = x1010 - x12*x849 + x58*x794
    x1028 = x1008*x9
    x1029 = V_delay*x795 - V_tank*x849
    x1030 = -x11*x794 - x12*x795 + x453*x58
    x1031 = x1021 + x23*x453 - x30*x849
    x1032 = N_af*x42*x7
    x1033 = N_af*V_delay*V_tank*x1009*x63
    x1034 = V_tank*x10*x16*x640
    x1035 = x471*x640
    x1036 = N_d10*x650 + x630
    x1037 = -x795*x910
    x1038 = N_d10*x640
    x1039 = x1038 + x630
    x1040 = -x1009*x1034 - x20*(x1037 + x1039*x58 - x569*x794) + x435*(x1035 - x1036*x892 + x12*x545) + x681*x904 - x794*x905
    x1041 = -x849*x910
    x1042 = x459*x640
    x1043 = x1042 + x648
    x1044 = x10*x1043 + x1037 - x794*x916
    x1045 = -x795*x919
    x1046 = x1043*x22
    x1047 = N_d10*x644 + x630
    x1048 = x1028*x624 + x1044*x884 + x20*(x1036*x58 + x1041 - x569*x795) - x28*(-V_delay*x1047*x892 + x1045 + x1046 + x453*x658)
    x1049 = x454*x640
    x1050 = 7*N_af
    x1051 = N_d10*(x1050 + x553) + x648
    x1052 = N_af*x1025 + x1035 - x1051*x11
    x1053 = -x795*x916
    x1054 = x1022*x925 - x1052*x64 + x359*(-x1047*x29 + x1049 + x24*x545) - x39*(x10*x1051 + x1041 + x1053) + x794*x923 - x795*x924
    x1055 = N_af*x1019 + x1049
    x1056 = 5*N_af
    x1057 = x459*(x1056 + x559)
    x1058 = x1057 + x648
    x1059 = -x1058*x30
    x1060 = -x1009*x63*x932 - x1013*x624*x934 + x294*(x1055 - x1058*x21) - x39*(x1039*x23 + x1059 + x453*x935 - x675*x795) + x471*x534 - x570*x795
    x1061 = x1009*x136
    x1062 = x21*x22*x63
    x1063 = N_d0*V_tank*x22
    x1064 = x470*x640
    x1065 = N_af*x1063 + x1064
    x1066 = N_d10*(14*N_af + x602) + x669
    x1067 = -Q_external*x1013*x1062*x624 - x1061*x987 + x19*x986*(-V_delay*x784 + x1018) + x196*(x1065 - x1066*x50 + x784*x991) + x657 - x676*x849 - x68*(N_d0*x991 + x1039*x133 - x1066*x78 + x453*x975 - x600*x849)
    x1068 = x459*(x548 + x562) + x636
    x1069 = x636 + x639
    x1070 = x1043*x48
    x1071 = 13*N_af
    x1072 = N_d10*(x1071 + x602) + x648
    x1073 = -x1072*x30
    x1074 = x1044*x961 + x39*(x1036*x23 + x1073 - x675*x849 + x794*x935) + x45*(-x1068*x11 + x453*x927 + x794*x959) - x47*(x1063*x541 + x1070 - x1072*x78 - x795*x963) + x962*(x10*x1069 - x453*x916 - x794*x951)
    x1075 = x784*x975
    x1076 = x459*x624
    x1077 = -x1052*x977 + x206*(-x1068*x50 + x1075 + x624*x646) + x223*(x1065 - x1072*x50) - x573*x849 - x68*(x1051*x22 + x1073 + x453*x956 - x795*x955) + x794*x968 - x978*(x10*x625 - x11*(x1076 + x636) + x784*x927)
    x1078 = N_af*x45
    x1079 = 5*N_d10
    x1080 = N_d0 + x1079
    x1081 = -x1080*x910
    x1082 = x484*x640
    x1083 = x1082 + x669
    x1084 = -x795*x946
    x1085 = x1056 + x593
    x1086 = N_d10*x1085 + x630
    x1087 = x1008*x1078 + x1029*x624*x86 + x294*(x1047*x58 + x1081 - x569*x849) - x76*(x1083*x48 + x1084 - x1086*x59 + x585*x794 - x849*x949) + x943*(x1083*x22 - x794*x919 - x795*x944 - x849*x906)
    x1088 = -x359*(x1070 - x1086*x363 + x453*x585 - x849*x946) + x45*(x10*(N_d10*(x554 + x631) + x636) + x1053 - x849*x951) - x47*(x1069*x48 + x1084 - x849*x953) + x64*(x1019*x541 + x1046 + x1059 - x794*x955) + x86*(x10*x1058 + x1081 - x849*x916)
    x1089 = x1023*x63
    x1090 = x1057 + x669
    x1091 = N_af*x7*x9*(x48*x784 - x50*x795) - x188*(x1055 - x1090*x21 + x784*x944) + x210*(x1064 - x1086*x134 + x51*x545) - x68*(x1045 - x1080*x906 + x1090*x22 - x849*x944) + x795*x968 - x849*x969 + x972*(-x50*x849 + x646)
    x1092 = x1011*x884 - x1024 + x1029*x9
    x1093 = x1016 - x11*x849
    x1094 = x1008*x277 + x1029*x19 - x1093*x876
    x1095 = x1015 - x1023*x20 + x1093*x9
    x1096 = V_delay*x849 - V_tank*x1080
    x1097 = x10*x795 - x1080*x11
    x1098 = x1029*x277 + x1096*x19 - x1097*x876
    x1099 = -x1080*x21 + x22*x794
    x1100 = x1093*x884 + x1096*x9 - x1099*x28
    x1101 = x1008*x1014 + x1097*x9 - x1099*x20
    x1102 = -x1080*x50 + x470
    x1103 = x1089*x12 + x1096*x45 - x1102*x76
    x1104 = x1011*x961 + x1097*x45 - x1102*x47
    x1105 = x1009*x1062 + x1099*x45 - x1102*x39
    x1106 = 2*Q_external
    x1107 = -x1106*x318 + x19 + x855
    x1108 = x12*x457
    x1109 = x10*x537
    x1110 = x1108 - x1109 + x615
    x1111 = x1110*x9
    x1112 = lambda_a*x1110*x19
    x1113 = x10*x16
    x1114 = -x23*x537
    x1115 = x1114 + x24*x801 + x30*x453 + x452
    x1116 = x22*x537
    x1117 = -3*x1116 + x24*x858 + x30*x463 + x500
    x1118 = Q_external*x1110*x7
    x1119 = -x1116 - x24*x784 + x30*x476 + x500
    x1120 = x21*x473
    x1121 = x1114 + x1120 - x24*x787 + x30*x524
    x1122 = x10*x69
    x1123 = -3*Q_external*x10*x7 + x16*x23 + x9
    x1124 = -3*x516 + x778 + x90
    x1125 = x1107*x1122 - x1107*x20 + x1123*x725 - x1124*x724
    x1126 = x22*x87
    x1127 = x119 + x829 - 4*x86
    x1128 = x45 + x49*x63 - 4*x856
    x1129 = 2*N_af*V_delay*x1110*x16
    x1130 = N_af*x1110*x63
    x1131 = N_bf*V_delay*V_tank*x457
    x1132 = x452*x640
    x1133 = -x1116*x559
    x1134 = -N_r0*x631
    x1135 = x1038 + x641
    x1136 = x1132 + x1133 - x24*(-N_r0*(x541 + x554) + x623 + x636) + x30*(x1134 + x1135)
    x1137 = x1136*x20
    x1138 = x500*x640
    x1139 = x1042 + x460*x640
    x1140 = -x1034*x1110 + x110*x621 - x1109*x904 + x1131*x9 - x1137 + x435*(-N_bf*x1116 + x1138 - x24*(x1134 + x639 + x669) + x30*(-N_r0*(x553 + x667) + x1139))
    x1141 = -x1116*x541
    x1142 = N_d10*x541
    x1143 = -x1142
    x1144 = x1135 + x628
    x1145 = x1132 + x1141 + x1144*x30 - x24*(x1143 + x617)
    x1146 = -N_d10*x647 + x630
    x1147 = x1056 + x553
    x1148 = -N_r0*x1147
    x1149 = x1139 + x1148
    x1150 = x1111*x624 + x1113*x1145 + x1137 - x435*(x1138 + x1149*x30 - x24*(x1146 + x542) - x537*x921)
    x1151 = x1110*x624
    x1152 = x1120*x640
    x1153 = N_d0*x644 + x1143
    x1154 = x1082 + x485*x640
    x1155 = -x1147*x455 + x1154
    x1156 = N_af + x553
    x1157 = x39*(-x1116*x1156 + x1138 - x24*(-N_d10*x1156 - x564 + x678) + x30*(-N_r0*(N_bf + x1050) + x1139))
    x1158 = 2*N_bf*x1108*x45 - x1110*x640*x74 - x113*x543 + x114*x561 - x1151*x856 - x1157 + x294*(x1141 + x1152 + x1155*x30 - x24*(-N_r0*(x541 + x553) + x1153))
    x1159 = x1110*x19
    x1160 = x1145*x39
    x1161 = -N_af*x1116
    x1162 = -N_af*N_d10
    x1163 = x1138 + x1161 - x24*(N_d0*x650 + x1162 + x628) + x30*(-N_r0*(x1050 + x593) + x1139)
    x1164 = 6*N_af
    x1165 = 3*x10*x1159*x624*x7 + x1131*x45 + x114*x621 - x1160 - x1163*x149 + x403*(x1133 + x1152 - x24*(N_d0*(N_bf + x1164) - N_r0*(x1164 + x549) + x623) + x30*(x1154 - x507*x647)) - x537*x930
    x1166 = V_tank*x1110
    x1167 = x480*x640
    x1168 = x1144*x78
    x1169 = x48*x537
    x1170 = -x1169*x548
    x1171 = x1167 + x1168 + x1170 - x300*(x1143 + x547) + x858*x975
    x1172 = N_d10*x631
    x1173 = V_tank*x1136*x47 + lambda_a*x1166*x624*x9 + x10*x1171*x63 + x1078*x1110 - x359*(x1149*x78 - x1169*x631 - x300*(x1146 + x634) + x468*x640 + x51*(-N_r0*(x1056 + x549) + x1172 + x625))
    x1174 = x1141 + x24*(x1142 + x677) + x30*(N_d10*x624 + x561 + x625) + x452*x624
    x1175 = -N_af*x1169
    x1176 = -x1075 + x1175
    x1177 = N_r0*x624 + x1143 + x545
    x1178 = x1167 + x1168 + x1176 - x1177*x300
    x1179 = -V_tank*x10*x1121*x640*x76 + V_tank*x1160 + x1174*x45 + x1178*x23*x63 - x844*(-x1116*x631 + x1120*x624 + x24*(N_d0*x1156 + x1148 + x1172) + x30*(-x455*x555 + x484*x624 + x485*x624))
    x1180 = -x593
    x1181 = x1161 - x24*(N_d0*x563 + x1162 + x561) + x30*(-N_r0*(x1180 + x548) + x1076 + x460*x624) + x500*x624
    x1182 = x640*x781
    x1183 = V_tank*x1157 + x1145*x74 + x1174*x856 + x1181*x45 - x294*(-3*N_af*V_tank*x22*x784 + 3*V_delay*x1144*x21 - 3*x10*x11*x1177 + x1170 + x1182)
    x1184 = 3*N_af*x1110
    x1185 = N_af*x136
    x1186 = x42*x537
    x1187 = x42*x458
    x1188 = -N_d10*x548
    x1189 = N_d0*x1085 + x1188
    x1190 = x509*x640 + x510*x640
    x1191 = -N_r0*(x1071 + x590) + x1190
    x1192 = N_af + x559
    x1193 = x549 + x631
    x1194 = -N_af*x1159*x16*x48 - 3*N_bf*V_tank*x10*x1186 - V_tank*x1110*x48*x63*x988 - x11*x1110*x136*x973 + x1187*x553 + x196*(-x1169*x541 + x1191*x78 - x300*(x1189 - x450*x507) + x640*x683 - x787*x975) + x205*x643 - x68*(x1175 + x1182 - x300*(N_d0*x1193 - N_r0*x603 - x1192*x459) - x51*(N_d0*(N_af + x593) + x1162 - x594) + x78*(x1154 - x455*(N_bf + x1056)))
    x1195 = 4*N_r0*x21
    x1196 = x1195*x640
    x1197 = 4*N_af*x1110*x206*x22 + 4*V_tank*x1151*x16*x19*x22 - x1171*x68 - x1186*x658 - x136*x48*(x1155*x78 + x1176 + x1182 - x300*(x1153 - x450*x473)) + x313*(-x1116*x553 + x1196 - x24*(N_d0*(N_bf + x667) - x1193*x455 + x635) + x30*(-N_r0*(16*N_af + x602) + x1190)) + x655
    x1198 = -x1116*x548
    x1199 = x1192*x455
    x1200 = -Q_external*x1181*x829 + x109*x7*(x1195*x624 + x1198 - x24*(N_d0*(N_af + x1180) + x1188 + x1199) + x30*(-N_r0*(x1056 - x590) + x509*x624 + x510*x624)) - x1163*x350 - x1178*x761 + x1187*x559 + x268*(x1191*x30 + x1196 + x1198 - x24*(x1189 - x1199)) + x572
    x1201 = x249 + x334
    x1202 = x1201*x18 + x1201*x27 - x1201*x34 - x15*x334 + x248
    x1203 = x1201*x56 - x1201*x62 + x1201*x65 - x334*x46 - x352 + x696
    x1204 = x1201*x73 + x1201*x75 - x1201*x83 - x334*x70 - x396 + x697
    x1205 = x1201*x91 + x1201*x93 - x1201*x94 - x284 - x285 - x334*x88
    x1206 = x1201*x161 + x1201*x162 - x1201*x169 - x273*x334 + x415 + x704
    x1207 = -x102*x334 + x1201*x207 + x1201*x209 - x1201*x211 - x317 + x406
    x1208 = x1201*x221 + x1201*x222 - x1201*x224 - x252*x334 + x254 + x702
    x1209 = x1201*x148 - x1201*x155 + x1201*x156 - x271*x42 - x334*x700 - x341
    x1210 = -a0*x751 + x1201*x175 - x1201*x177 + x1201*x179 + x276 - x281*x42
    x1211 = x1201*x195 - x1201*x197 + x1201*x203 - x230*x334 + x265 - x269*x42
    x1212 = x148 - x700 + x759
    x1213 = x161 - x273 + x754
    x1214 = -x135*x42 + x175 - x177 + x179
    x1215 = -x102 + x207 + x757
    x1216 = x221 + x222 - x224 - x252
    x1217 = x195 - x197 + x203 - x230
    x1218 = -x466 + x467 - x479 - x490
    x1219 = x1218*x772
    x1220 = x47*x665 + x738
    x1221 = x790*(x1220 + x505)
    x1222 = x528*x777
    x1223 = -x39*x665 + x529 + x530
    x1224 = x797*(x1223 + x722)
    x1225 = x452*x9 + x454*x9 + x458*x9 - x464*x9 + x491
    x1226 = x1220 + x45*x452 + x45*x458 - x45*x464 + x504 + x843
    x1227 = -3*x11*x45*x471 + x45*x470 + x45*x477 - x517 - x519 + x527 + x851 + x853
    x1228 = x1223 - x45*x480 - x45*x483 + x45*x488 + x473*x835 - x834
    x1229 = -x108*x1225 + x112*x1226 + x116*x1227 + x121*x1228 - x42*x489*x7 + x466*x64 - x518*x57 - x727
    x1230 = V_delay*x42*x63
    x1231 = x220*x453
    x1232 = V_tank**6
    x1233 = V_delay**6*x453
    x1234 = V_tank*x142
    x1235 = -N_r0*x1232 - 4*x1233 + x1234*(x1079 + x522 + x831) - x144*x681 + x178*x809
    x1236 = -5*x11*x470 + x1232*x455 + 3*x1233 + x1234*x473 + x166*x681 - x809*x989
    x1237 = x1187 + x1231 + x1235*x160 + x1236*x388 + x137*x665 + x42*x452 - x42*x464
    x1238 = -x10*x50*x809 + x1232*x473 + 2*x1233 + x1234*x455 + x201*x681 - 5*x21*x454
    x1239 = -x1235*x206 - x1238*x210 + x136*x208*x503 - x172*x453 + x174*x473 - x42*x480 - x42*x483 + x487*x672
    x1240 = -x1236*x206 + x1238*x223 + x42*x468 + x42*x469 + x42*x477 + x489*x977 + x673 - 3*x674
    x1241 = x213*(-x1226*x38 - x1230*x478 + x1237*x192 + x1239*x140 + x1240*x171 - x130*x489 + x137*x494 - x184*x465)
    x1242 = x136*x465
    x1243 = N_r0*x1234 + V_delay*x144*(x510 + x857) + x1232*x507 + x1233 - 5*x471*x50
    x1244 = -x1238*x68 - x1242*x21*x48 + x1243*x196 - 4*x159*x21*x453 + x42*x498 + x42*x499 + x42*x520 + x42*x525
    x1245 = -4*x11*x1231 - x1195*x159 - x1236*x68 + x1243*x176 - x136*x178*x478 + x173*x681 + x200*x42*x453 + x42*x576 + x42*x611
    x1246 = x227*(x11*x1242*x22*x9 + x112*x1240 + x116*x1244 - x121*x1245 - x1225*x235 - x478*x854 - x526*x847 + x732*x8)
    x1247 = 4*N_r0*x11*x220 - x1235*x68 - x1243*x351 + x350*x526 - x42*x495 - x42*x496 - x42*x506 + x42*x512
    x1248 = x127*(-x1228*x38 + x1230*x732 - x1237*x158 - x1245*x171 - x1247*x140 + x128*x860 + x130*x665 + x137*x722)
    x1249 = x181*(V_tank*x136*x22*x45*x478 + lambda_a*x128*x489 - x1227*x191 - x1239*x158 + x1244*x193 + x1247*x192 - x184*x665 - x283*x526)
    X = -eff*(Q_external*(-c0*x242 - lambda_a*x430*(V_delay*x127*(x108*x445 - x112*x446 - x116*x447 + x121*x448 + x39*x445) - lambda_b*x42*x66 + x108*x432 - x181*x433 - x213*(-x116*x442 + x121*x443 + x39*x436 + x437 + x439) - x240*x9 + x35*x431 + x44*x45*x84) + lambda_b*x449*(-N_bf*N_r0*x181*x24*(x125 + x40) + V_delay*x126*(-x108*x571 + x112*x592 + x116*x604 - x121*x618 + x39*x567) - lambda_a*x19*x450*x493 + lambda_a*x45*x450*x515 + lambda_a*x450*x531*x9 - x450*x516*x528*x69 - x451*x492 - x619*(-x108*x654 + x112*x671 + x116*x680 + x121*x687 + x39*x652) - x688*(N_r0*x126*x433 - V_delay*x619*(x108*x689 - x112*x693 - x116*x694 + x121*x695 + x39*x689) - x116*x19*x528 - x19*x493 - x43*x492 + x45*x515 + x531*x9)) + x127*(-c0*x129 - c0*x132*x135*x42 + x130*x282 + x137*x396 - x140*(x341 - x350*(x244 + x332 + x404) + x351*(x267 + x429) + x421 + x422 - x424 + x68*(x416 + x427)) - x158*(lambda_a*x397 - x137*(x342 + x400 + x401) - x160*x416 + x206*x402 + x388*(x261 + x409 + x417) + x415) + x171*(x176*(x267 + x312 + x420) - x179*x237 + x275 + x279 + x303 - x418 + x68*(x261 + x419)) - x192*x414 - x38*(-x237*x75 + x39*(x400 + x402) + x396 + x397 - x399 + x403*(x244 + x405))) + x181*(-Q_external*x316 + c0*x182 - x158*(x176*x298 + x188*(x289 + x291 + x321) - x206*(-V_delay*x281 + x323) - x210*x320 - x285*x318 + x317) - x184*x282 - x188*x284 + x191*(-x237*x93 + x284 + x287 - x294*(x295 + x298) + x39*(x289 + x293)) + x192*(x176*x349 + x196*x344 + x341 - x342*x42 + x350*(x266 + x295 + x297) - x351*(-x256*x30 + x280 + x336) - x68*(x24*x256 + x323)) + x193*(x195*x237 + x196*(x280 + x337) + x265 + x333 - x68*(x320 + x340)) + x244*x283) - x213*(-c0*x215 + c0*x216 - c0*x218 + x137*x352 - x140*(-x188*(x288 + x302 + x360) - x206*(x322 + x385 + x395) + x210*(x263 + x394) + x317 + x390 + x391 + x392) + x171*(-x206*(x260 + x378) - x221*x237 + x223*(x263 + x348 + x372) + x253 + x258 + x370 + x371) + x192*(-x137*(x282 + x367 + x387) - x160*(x322 + x386) + x274 + x379 + x381 - x382 + x388*(x260 + x389)) - x353*(x357 - x358 + x362 - x369) - x38*(-x237*x65 + x352 + x357 + x359*(x288 + x361) - x47*(x282 + x368))) - x227*(c0*x229 - c0*x233 + x112*(c0*x221 - x206*(x12*x259 + x261) + x223*(x12*x262 + x264) + x250*x251 + x254 + x258) + x116*(c0*x195 - x196*x267 + x265 + x266*x42 + x268*x269 - x270 - x68*(x264 + x272)) - x121*(-b0*x277*x55*x9 + c0*x179 + x12*x274 + x176*(V_tank*x281 + x280) + x260*x68 + x276 + x279) - x235*(x18*x249 + x248 + x249*x27 - x249*x34) - x243*x8 + x245*x57 + x247) + x237*x36 + x237*x41 - x237*x67 + x237*x85 - x237*x96)*exp(t*x5) + (-x619*(-a0*lambda_a*recoil_prob*(x127*(-x112*x443 - x113*x16*x82 + x431*x55 + x444*x74 + x448*x711 - x707 - x716*x84) - x213*(-x135*x45*x57 - x214 + x354*x64 + x439 + x446*x711 - x69*x714 + x7*x700) + x39*x713 + x699*x713 - x705*(-x112*x442 + x135*x431 + x149*x232 - x228 - x230*x715 + x447*x711 - x716*x95)) + x127*(-x10*x186*x236*x45 - x112*(x206*x236*x384 - x210*x394 - x391 - x392 + x408) + x121*(x236*x331*x350 - x351*x429 - x421 - x422 + x424 - x68*(x398 + x427)) + x236*x55*x8 + x246*x84 - x316 - x380*x707 + x407*x444) - x213*(-x112*(x160*x386 + x366*x701 - x381 + x382 - x388*x389 + x704) - x116*(-V_delay*V_tank*x14*x380*x45 + x206*x344 + x223*x349 - x582*(-x321 + x335) + x703) + x121*x414 - x132*x135*x236*x45 + x16*x236*x700 - x214*x380 + x246*x66 + x354*x701) + x39*x698 + x449*(x127*(x124*x726 + x19*x478*x660 + x431*x730 - x450*x63*x734 - x451*x665 - x618*x724 - x687*x725) + x213*(V_delay*x450*x63*x729 + V_tank*x10*x136*x19*x730 - x115*x726 + x16*x450*x728 + x450*x727 + x592*x724 - x671*x725) + x39*(x567*x724 - x621*x709 - x652*x725 + x723) - x688*(x127*(-x16*x734 + x19*x529 - x43*x665 + x489*x6 - x695*x736 + x735*x739) + x213*(x19*x738 + x465*x6 + x57*x729 + x693*x736 + x7*x728 - x714*x735) + x39*x737 + x699*x737 - x705*(V_tank*x10*x735*x95 + x43*x732 - x478*x6 - x694*x736 - x715*x733 + x719*x92)) + x699*(x111*x726 - x571*x724 + x654*x725 + x723) - x705*(x11*x136*x22*x450*x719 + x120*x726 - x450*x731 + x451*x732 - x604*x724 + x680*x725 - x720*x733)) + x698*x699 - x705*(-x112*(x206*x378 - x223*x236*x347 + x257 - x371 + x703) - x116*(x195*x236 + x196*x337 + x333 - x68*(x319 + x340)) + x121*(-x176*x236*x311 + x278 + x304 + x418 - x419*x68) - x228*x380 - x231*x236 + x233*x236 + x236*x706 + x247))*exp(t*x4) + (Q_external*(-N_af*x449*(lambda_b*lambda_c*recoil_prob*(x127*(-x158*x870 + x45*x863 + x770*x862 - x771*x866) + x158*x864 + x213*(x108*x863 + x192*x870 + x45*x803 + x765*x869) + x699*x864 - x705*(x163*x804 - x45*x862 - x767*x866 + x769*x869)) - x127*(x140*x859 + x158*x850 + x171*x845 - x183*x860 + x38*x825 - x70*x846 + x793*x847 - x796*x8) - x181*(x158*x852 - x159*x16*x800 + x191*x820 - x192*x859 - x193*x833 + x32*x63*x853 - x489*x854 - x6*x802*x855) - x213*(-x140*x852 - x171*x840 - x192*x850 + x38*x813 + x46*x846 + x465*x8 - x540*x847) + x227*(-x112*x840 - x116*x833 + x121*x845 - x14*x16*x45*x826 + x15*x532 + x37*x410*x803 - x42*x715*x789 + x731) + x772*x775 + x775*x776 - x777*(-Q_external*V_tank*x22*x7*x780 - x516*x789 + x721 + x779) - x790*(x20*x796 - x435*x793 + x466 + x791) + x797*(-x10*x20*x802 - x489*x9 + x798 - x799*x800) - x99*(N_r0*x708 - x112*x813 - x116*x820 - x121*x825 + x538*x804 - x659*x715 + x718)) + a0*x127*(x139 + x140*x762 - x158*x756 - x171*x753 + x38*x744) - a0*x181*(-x158*x758 + x190 + x191*x743 + x192*x762 - x193*x747) - a0*x213*(x140*x758 - x171*x750 - x192*x756 + x219 + x38*x742) + a0*x227*(-x112*x750 - x116*x747 + x121*x753 + x234 + x410*x745) + a0*x36 + a0*x41 - a0*x67 + a0*x85 - a0*x96 - a0*x99*(x107 - x112*x742 - x116*x743 + x121*x744 + x538*x741) + lambda_c*x430*(x127*(x158*x764 - x436*x45 + x445*x770 - x768*x771) + x158*x763 - x213*(x192*x764 - x35*x45 + x437 - x765*x766) + x699*x763 - x705*(x163*x741 - x445*x45 + x766*x769 - x767*x768)))*exp(x740*(x0 + x2)) + (x10*x449*x871*(N_d10*x740*(x127*(-x140*x974 + x171*x979 + x183*x899 - x353*x950 - x38*x929 + x885*x966 - x887*x967 + x890*x965) - x181*(x171*x992 - x192*x974 - x353*x958 - x38*x939 + x885*x996 + x893*x997 - x896*x993 - x994*x995) + x227*(-x121*x979 + x69*x992 + x893*x983 - x894*x984 - x914*x985 - x915*x964 + x941*x980 + x981*x982) + x872*x879 + x880*x881 - x882*(-x28*x887 + x516*x873 + x883 + x884*x885) - x888*(-x20*x894 + x875*x889 + x891 + x893*x9) + x895*(-V_delay*x898 + x324*x893 + x885*x9 + x897) - x940*(-N_af*x42*x942 + x140*x958 - x171*x964 - x192*x950 + x38*x922 + x6*x899 + x900*x941) - x99*(-x121*x929 + x42*x899 + x69*x939 + x883*x900 - x901*x902 - x903*x914 - x915*x922) + x998*(x1002*x1003 + x1002*x915 + x126*(-x1000*x39 + x1001*x903 + x1004*x112 - x1006*x69) - x181*(-x1001*x20 + x1005*x725 - x1006*x44 + x1007*x879) - x619*(x1000*x903 + x1004*x121 - x1005*x69 - x881))) + V_delay*(x1012*x7*x880*x9 + x1012*x872 + x127*(x1008*x996 + x1029*x16*x965 + x1030*x966 - x1031*x967 - x1054*x38 + x1077*x171 - x1087*x353 - x1091*x140) - x181*(-x1022*x993 + x1026*x997 + x1027*x996 - x1060*x38 + x1067*x171 - x1088*x353 - x1089*x994 - x1091*x192) + x227*(x1013*x45*x980 + x1017*x983 - x1020*x984 - x1040*x985 + x1061*x982 + x1067*x69 - x1074*x915 - x1077*x121) - x882*(x1028 + x1029*x516 + x1030*x884 - x1031*x28) - x888*(x1013*x7*x889 + x1015 + x1017*x9 - x1020*x20) + x895*(-V_delay*x1024 - x1022*x20 + x1026*x324 + x1027*x9) - x940*(x1008*x983 - x1011*x984 + x1033*x45 + x1048*x38 - x1074*x171 - x1087*x192 + x1088*x140) - x99*(x1008*x1032 - x1011*x45*x901 + x1033*x9 - x1040*x903 - x1048*x915 - x1054*x121 + x1060*x69) + x998*(x1003*(x1012*x999 + x1092*x725 - x1094*x20 - x1095*x44) + x126*(x1095*x903 - x1100*x39 + x1103*x112 - x1105*x69) - x181*(x1007*x1012 - x1101*x20 + x1104*x725 - x1105*x44) - x619*(x1092*x903 - x1098*x206 + x1103*x121 - x1104*x69) + x915*(x1094*x999 - x1098*x20 + x1100*x725 - x1101*x44)))) + (x11*x449*(N_af*lambda_a*lambda_b*lambda_c*recoil_prob*x11*x1110*(x10*x1125*x226 + x1125*x915 + x126*(x112*x1128 - x1122*x1127 - x1123*x39 + x1124*x1126) - x619*(-x1107*x206 + x1123*x193 + x1128*x121 - x116*(-4*x10*x19*x7 + 2*x45 + 2*x48*x63)) - x705*(lambda_b*x1106*(x45 - x47*x58 + x829) + x1107*x1126 - x1124*x20 - x1127*x724)) + x1107*x1110*x7*x880*x9 + x1107*x1110*x872 + x127*(x10*x1115*x1185*x45 + x1110*x996 - x1117*x63*x994 - x1165*x38 + x1166*x993 - x1173*x353 - x1197*x140 + x1200*x171) - x181*(-V_tank*x10*x1184*x42*x63 - x10*x1184*x16*x6 + x1115*x996 + x1119*x1185*x22*x45 - x1158*x191 - x1179*x353 + x1194*x193 - x1197*x192) + x227*(N_af*V_tank*x1111*x136*x22 - V_delay*x1121*x984 + x1119*x983 + x1130*x117 - x1140*x191 + x116*x1194 - x1183*x915 - x1200*x121) - x882*(V_tank*x1112 + x1111 + x1113*x1115 - x1117*x435) - x888*(x1110*x16*x51 + x1118*x22 + x1119*x9 - x1121*x516) + x895*(-3*x10*x1112 + x1115*x9 - x1118*x25 + x1119*x778) - x940*(x1110*x983 - x1129*x42 + x113*x1130 + x1150*x38 - x1173*x192 + x1179*x140 - x1183*x171) - x99*(x1032*x1110 + x109*x1130 - x1129*x45 - x1140*x193 - x1150*x915 + x1158*x116 - x1165*x121)) - x871*(-Q_external*a0*recoil_prob*(x127*(x1212*x140 - x1213*x158 - x1214*x171 + x139 + x37*x739) - x181*(x1212*x192 - x1215*x158 - x1217*x193 + x190 + x191*x95) - x213*(-x1213*x192 + x1215*x140 - x1216*x171 + x219 + x37*x714) + x227*(-x112*x1216 - x116*x1217 + x121*x1214 + x163*x745 + x234) - x242 + x97) - Q_external*x181*(-x1201*x182 + x1201*x185 - x1201*x187 + x1201*x189 + x1205*x191 - x1207*x158 + x1209*x192 - x1211*x193) + Q_external*x227*(-x112*x1208 - x116*x1211 - x1201*x229 - x1201*x231 + x1201*x233 + x1201*x706 + x1202*x235 + x121*x1210) - Q_external*x99*(-x101*x1201 + x103*x1201 + x104*x1201 - x106*x1201 + x108*x1202 - x112*x1203 - x116*x1205 + x1204*x121) + lambda_a*x1201*x238*x37*x45 + lambda_b*x1201*x184*x35 - lambda_c*x9*(-x1201*x215 + x1201*x216 + x1201*x217 - x1201*x218 + x1203*x38 - x1206*x192 + x1207*x140 - x1208*x171) - x1201*x318*x45*x87*x95 + x1201*x43*x69*x84 - x1201*x431*x44*x66 + x126*x19*(-V_delay*x1201*x135*x42*x63 - x1201*x129 + x1201*x131 + x1201*x138 + x1204*x38 - x1206*x158 + x1209*x140 - x1210*x171) + x449*(-N_af*recoil_prob*(x1218*x776 + x1219 + x1221 - x1222 + x1224 - x1229*x99 - x1241 + x1246 - x1248 - x1249) + V_tank*x10*x1218*x37*x39*x640 + x1219*x640 + x1221*x640 - x1222*x640 + x1224*x640 - x1229*x906*x98 - x1241*x640 + x1246*x640 - x1248*x640 - x1249*x640)))*exp(t*x1))*exp(lambda_a*t))*exp(lambda_b*t))*exp(lambda_c*t))*exp(-t*(lambda_c + x5))/(Q_external*(x127*(-x124*x38 + x139 - x140*x157 + x158*x170 + x171*x180) - x181*(-x120*x191 - x157*x192 + x158*x212 + x190 + x193*x204) - x213*(-x115*x38 - x140*x212 + x170*x192 + x171*x225 + x219) + x227*(-x111*x235 + x112*x225 + x116*x204 - x121*x180 + x234) + x97 - x99*(x107 + x125)))

    return X


def tc_integral_delta(V_delay,rs,recoil_prob,V_tank,Q,N_bf,N_af,Q_external,eff,t, **kwargs):
    x0 = 2*N_af
    x1 = -N_bf
    x2 = 1/V_delay
    x3 = Q_external*x2
    x4 = 1/V_tank
    x5 = Q_external*x4
    x6 = lambda_a + x3 + x5
    x7 = lambda_b + x6
    x8 = Q_external**4
    x9 = lambda_b*x8
    x10 = lambda_a**2
    x11 = Q_external**2
    x12 = V_delay - V_tank
    x13 = x11*x12
    x14 = V_delay*V_tank*x12
    x15 = Q_external*lambda_a
    x16 = V_delay**2
    x17 = V_tank**2
    x18 = x16 - x17
    x19 = x15*x18
    x20 = x10*x14 - x19
    x21 = x13 + x20
    x22 = lambda_b**4
    x23 = V_delay*V_tank*lambda_a*x11*x22
    x24 = Q_external**3
    x25 = lambda_b**2
    x26 = lambda_a*x24*x25
    x27 = x12*x24
    x28 = V_delay**3
    x29 = V_tank**3
    x30 = x28 - x29
    x31 = x10*x30
    x32 = lambda_a**3
    x33 = V_delay*V_tank*x18
    x34 = -Q_external*x31 + x32*x33
    x35 = x27 + x34
    x36 = lambda_b**3
    x37 = lambda_a*x11*x36
    x38 = x18*x24
    x39 = x11*x30
    x40 = x12*x16*x17
    x41 = -lambda_a*x39 + x32*x40
    x42 = x38 + x41
    x43 = V_delay*V_tank*lambda_c**4
    x44 = lambda_a*x12
    x45 = x44*x8
    x46 = V_delay*V_tank*x11*x12
    x47 = -x10*x38
    x48 = V_delay*V_tank
    x49 = V_delay*x11
    x50 = V_tank*x11
    x51 = x20 + x49 - x50
    x52 = x36*x48*x51
    x53 = Q_external*lambda_b
    x54 = V_delay*x24 - V_tank*x24 + x34
    x55 = x53*x54
    x56 = x16*x24 - x17*x24 + x41
    x57 = x25*x56
    x58 = Q_external*lambda_c
    x59 = Q_external**5
    x60 = x10*x12
    x61 = V_tank*x12
    x62 = lambda_a**4
    x63 = V_delay*x24*x62
    x64 = x32*x8
    x65 = Q_external*x25
    x66 = Q_external*x32
    x67 = V_delay**4 - V_tank**4
    x68 = V_delay*x8 - V_tank*x8 + x30*x48*x62 - x66*x67
    x69 = V_delay*V_tank*x22
    x70 = x10*x11
    x71 = x16*x17*x62
    x72 = x16*x8 - x17*x8 + x18*x71 - x67*x70
    x73 = lambda_c**2
    x74 = V_tank*x18
    x75 = lambda_b*x11
    x76 = lambda_a*x24
    x77 = x29*x62
    x78 = x12*x28*x77 + x28*x8 - x29*x8 - x67*x76
    x79 = lambda_c**3
    x80 = lambda_a*x18
    x81 = N_af + N_bf
    x82 = x21*x81
    x83 = Q_external*lambda_a*lambda_b
    x84 = lambda_a*x81
    x85 = x25*x42
    x86 = N_af*lambda_a*recoil_prob
    x87 = lambda_a*x11
    x88 = -x21*x87
    x89 = V_delay*V_tank*x21
    x90 = N_bf*lambda_b
    x91 = lambda_a*x13
    x92 = Q_external*x18
    x93 = -x10*x81*x92 + x14*x32*x81 + x81*x91
    x94 = V_delay*V_tank*x79
    x95 = x62*x81
    x96 = x24*x80
    x97 = V_delay*lambda_a
    x98 = x61*x97
    x99 = 2*Q_external
    x100 = V_delay*x99 - V_tank*x99 + x80
    x101 = x16*x99 - x17*x99 + x98
    x102 = x19 + x31 + 2*x49 - 2*x50
    x103 = 2*x11
    x104 = V_tank*x10
    x105 = V_tank*x16
    x106 = V_delay*x17
    x107 = V_delay*x104*x18 + x103*x16 - x103*x17 + x15*(x105 - x106 + x30)
    x108 = Q_external*x97
    x109 = x10*x16
    x110 = x12*x17
    x111 = x103*x28 - x103*x29 + x108*x74 + x109*x110
    x112 = -lambda_b*x92 + x13 + x14*x25
    x113 = x16*x36
    x114 = -Q_external
    x115 = V_tank*lambda_a
    x116 = x114 + x115
    x117 = N_af*lambda_b*x32*x8
    x118 = N_af*V_delay*V_tank*x22
    x119 = x116*x70
    x120 = N_af*x10*x24*x25
    x121 = V_delay + V_tank
    x122 = x10*x121
    x123 = N_af*x10*x11*x36
    x124 = -x11*x121
    x125 = N_af*x24
    x126 = -x10*x125
    x127 = N_af*V_tank
    x128 = x11*x32
    x129 = V_tank*x36
    x130 = N_bf*V_tank
    x131 = N_bf + x0
    x132 = V_delay*x131
    x133 = x130 + x132
    x134 = x133*x15
    x135 = N_bf*x11 + x104*x132
    x136 = -x134 + x135
    x137 = N_af + x1
    x138 = x11*x137
    x139 = x127 + x132
    x140 = -x104*x139 + x134 + x138
    x141 = N_bf*x24
    x142 = Q_external*x137
    x143 = x10*x17
    x144 = x131*x32
    x145 = x106*x144 - x139*x87 + x141 + x142*x143
    x146 = N_af*lambda_a*lambda_b*lambda_c*recoil_prob
    x147 = -x11
    x148 = x143 + x147
    x149 = V_tank*x116*x25 - lambda_b*x148 + x116*x15
    x150 = -x24
    x151 = x29*x32
    x152 = x150 + x151
    x153 = Q_external*lambda_a*lambda_c
    x154 = N_af*x10
    x155 = x154*x8
    x156 = -x155
    x157 = x24*x32
    x158 = V_delay*x10
    x159 = N_af*V_delay
    x160 = V_tank*x159
    x161 = x131*x16
    x162 = N_af*x17 + x160 + x161
    x163 = Q_external*x133*x158 - V_tank*x162*x32 + x125 + x138*x97
    x164 = V_delay*x137 + x127
    x165 = Q_external*x143*x164 + x106*x139*x32 - x11*x139*x97 - x164*x24
    x166 = x154*x59
    x167 = x121*x24*x62
    x168 = lambda_a*lambda_b*x11
    x169 = N_bf*V_delay
    x170 = N_af*x10*x11
    x171 = Q_external*V_delay*x137*x151 + x161*x77 - x162*x76 + x169*x8 + x170*x29
    x172 = N_af*x24*x32
    x173 = -x121*x155
    x174 = x11*x62
    x175 = x114 + x97
    x176 = x175*x70
    x177 = V_delay*x36
    x178 = V_tank*x131
    x179 = x169 + x178
    x180 = x15*x179
    x181 = x135 - x180
    x182 = x159 + x178
    x183 = x138 - x158*x182 + x180
    x184 = x105*x144 + x109*x142 + x141 - x182*x87
    x185 = x109 + x147
    x186 = V_delay*x175*x25 - lambda_b*x185 + x15*x175
    x187 = x150 + x28*x32
    x188 = x131*x17
    x189 = N_af*x16 + x160 + x188
    x190 = Q_external*x104*x179 - V_delay*x189*x32 + x115*x138 + x125
    x191 = V_tank*x137
    x192 = x159 + x191
    x193 = Q_external*x109*x192 + x105*x182*x32 - x11*x115*x182 - x192*x24
    x194 = Q_external*x191*x28*x32 + x130*x8 + x170*x28 + x188*x28*x62 - x189*x76
    X = -Q*eff*rs*(N_af*recoil_prob - x0 + x1 - (x75*(N_bf*lambda_c*(x52 + x55 - x57 + x88) - V_delay*V_tank*lambda_a*x36*x82 - x35*x81*x83 + x70*x82 + x84*x85 + x86*(x35*x53 + x36*x89 - x85 + x88))*exp(t*x7) + (-lambda_c*x11*(-x58*(x27*x84 - x30*x66*x81 + x33*x95 - x54*x90) + x73*(-x11*x31*x81 + x40*x95 - x56*x90 + x81*x96) + x86*(x35*x58 - x42*x73 + x79*x89 + x88) + x87*(-x21*x90 + x93) - x94*(-x51*x90 + x93))*exp(t*x6) + (N_af*x11*(lambda_b*lambda_c*recoil_prob*(-x112*x75 + x112*x94 + x58*(x27 - x30*x65 + x33*x36) - x73*(-lambda_b*x39 + x110*x113 + x38)) - x12*x23 - x26*(Q_external*x12 + x80) + x37*(x92 + x98) - x43*(x100*x53 - x101*x25 + 2*x14*x36 - x91) + x58*(-x10*x27 + x100*x69 + x102*x65 - x107*x36) + x60*x9 - x73*(x101*x69 + x102*x75 - x111*x36 - x45 + x47) + x79*(-x10*x46 + x107*x53 - x111*x25 + 2*x22*x40 - x96))*exp(Q_external*t*(x2 + x4)) + (x16*(x116*x117 - x118*x119 + x120*(-V_tank*x122 + x108 + x11) + x123*(x10*x106 + x124 + x15*x17) + x146*x16*(V_tank*x149*x79 + lambda_c*(x119 + x129*x148 - x152*x25) - x149*x83 - x73*(-lambda_b*x152 + x116*x17*x36 + x148*x15)) - x153*(x127*x157 + x140*x69 + x156 + x163*x65 + x165*x36) + x43*(x126 + x127*x128 - x129*x136 + x140*x83 + x145*x25) - x73*(-x127*x167 + x145*x69 + x159*x64 - x163*x168 + x166 - x171*x36) - x79*(N_af*V_delay*x17*x174 - x106*x136*x22 - x165*x83 + x17*x172 + x171*x25 + x173))*exp(t*x5) - x17*(x117*x175 - x118*x176 + x120*(Q_external*x115 - V_delay*x122 + x11) + x123*(x10*x105 + x124 + x15*x16) + x146*x17*(V_delay*x186*x79 + lambda_c*(x176 + x177*x185 - x187*x25) - x186*x83 - x73*(-lambda_b*x187 + x113*x175 + x15*x185)) - x153*(x156 + x157*x159 + x183*x69 + x190*x65 + x193*x36) + x43*(x126 + x128*x159 - x177*x181 + x183*x83 + x184*x25) - x73*(x127*x64 - x159*x167 + x166 - x168*x190 + x184*x69 - x194*x36) - x79*(N_af*V_tank*x16*x174 - x105*x181*x22 + x16*x172 + x173 - x193*x83 + x194*x25))*exp(t*x3))*exp(lambda_a*t))*exp(lambda_b*t))*exp(lambda_c*t))*exp(-t*(lambda_c + x7))/(-x10*x21*x9 + x21*x23 + x26*x35 - x37*x42 - x43*(x32*x46 + x45 + x47 - x52 - x55 + x57) + x58*(-x18*x64 + x36*x72 - x54*x69 + x59*x60 + x61*x63 - x65*x68) - x73*(Q_external**6*x44 - x30*x64 + x36*x78 - x56*x69 + x63*x74 - x68*x75) + x79*(x13*x71 - x16*x17*x22*x51 + x25*x78 - x31*x8 - x53*x72 + x59*x80)))/Q_external

    return X


def tc_integral_calibration(Ncal,rs,recoil_prob,V_tank,Q,cal_begin,N_bf,N_af,t,Q_external,eff,cal_duration, **kwargs):
    x0 = lambda_c**2
    x1 = Q_external**3
    x2 = lambda_a*x1
    x3 = x0*x2
    x4 = lambda_a**2
    x5 = x1*x4
    x6 = lambda_b*x5
    x7 = lambda_b**2
    x8 = lambda_c*x1*x7
    x9 = x2*x7
    x10 = lambda_c*x5
    x11 = lambda_b*x0*x1
    x12 = lambda_b**3
    x13 = Q_external**2
    x14 = V_tank*lambda_a*x13
    x15 = x12*x14
    x16 = lambda_a**3
    x17 = V_tank*x13*x16
    x18 = lambda_c*x17
    x19 = V_tank*x13
    x20 = lambda_c**3
    x21 = lambda_b*x20
    x22 = x19*x21
    x23 = x14*x20
    x24 = lambda_b*x17
    x25 = lambda_c*x12
    x26 = x19*x25
    x27 = V_tank**2
    x28 = Q_external*x27*x4
    x29 = x20*x28
    x30 = Q_external*x16*x27
    x31 = x30*x7
    x32 = Q_external*x27
    x33 = x0*x12
    x34 = x32*x33
    x35 = V_tank**3
    x36 = lambda_a*x35
    x37 = x20*x7
    x38 = x36*x37
    x39 = x35*x4
    x40 = x25*x39
    x41 = lambda_b*x0
    x42 = x16*x35
    x43 = x41*x42
    x44 = x12*x28
    x45 = x0*x30
    x46 = x32*x37
    x47 = x33*x36
    x48 = x21*x39
    x49 = lambda_c*x7
    x50 = x42*x49
    x51 = N_bf*cal_duration
    x52 = 2*N_af*cal_duration
    x53 = N_af*cal_duration*recoil_prob
    x54 = cal_begin - t
    x55 = abs(x54)
    x56 = N_bf*x55
    x57 = 2*N_af*x55
    x58 = abs(cal_duration + x54)
    x59 = N_bf*x58
    x60 = N_af*recoil_prob*x55
    x61 = 2*N_af*x58
    x62 = N_af*recoil_prob*x58
    x63 = cal_begin/2
    x64 = -t/2
    x65 = -x55/2 + x63 + x64
    x66 = exp(lambda_a*x65)
    x67 = 2*N_af*lambda_a*x1*x66
    x68 = 2*N_bf*lambda_a*lambda_b*x1
    x69 = exp(lambda_c*x65)
    x70 = 2*N_bf*lambda_a*lambda_c*x1
    x71 = exp(lambda_b*x65)
    x72 = 2*N_af*x1*x66
    x73 = 2*N_bf*x1*x7
    x74 = 2*N_bf*x0*x1
    x75 = 2*N_af*V_tank*x13*x66
    x76 = cal_duration/2 - x58/2 + x63 + x64
    x77 = exp(lambda_a*x76)
    x78 = 2*N_af*lambda_a*x1*x77
    x79 = 2*N_bf*V_tank*x13
    x80 = x12*x69
    x81 = x20*x71
    x82 = exp(lambda_c*x76)
    x83 = exp(lambda_b*x76)
    x84 = 2*N_af*x1*x77
    x85 = 2*N_af*Q_external*x27*x66
    x86 = 2*N_af*V_tank*lambda_a*x13*x66
    x87 = 2*N_bf*Q_external*lambda_a*x27
    x88 = 2*N_bf*V_tank*lambda_b*x13*x4
    x89 = 2*N_bf*V_tank*lambda_c*x13*x4
    x90 = 2*N_af*V_tank*x13*x77
    x91 = x12*x82
    x92 = x20*x83
    x93 = 2*N_af*Q_external*lambda_a*x27*x66
    x94 = 2*N_af*Q_external*x27*x77
    x95 = 2*N_af*V_tank*lambda_a*x13*x77
    x96 = 1/lambda_a
    x97 = 4*N_af*x66*x96
    x98 = 1/lambda_b
    x99 = 2*N_af*x71*x98
    x100 = x3*x99
    x101 = 1/lambda_c
    x102 = 2*N_af*x101*x69
    x103 = x102*x9
    x104 = x10*x99
    x105 = x102*x6
    x106 = 2*N_bf*Q_external*x27*x4*x7
    x107 = 2*N_bf*Q_external*x0*x27*x4
    x108 = 2*N_bf*x71*x98
    x109 = 2*N_bf*x101*x69
    x110 = Q_external/V_tank
    x111 = exp(x110*x65)
    x112 = 2*N_af*Q_external*x111*x16*x27
    x113 = 2*N_af*lambda_a*x111*x35
    x114 = 2*N_bf*lambda_a*x111*x35
    x115 = 2*N_af*Q_external*lambda_a*x27*x77
    x116 = x23*x99
    x117 = x102*x15
    x118 = x18*x99
    x119 = x102*x24
    x120 = 2*N_af*recoil_prob*x66*x96
    x121 = 2*N_af*x111*x35*x4
    x122 = 2*N_af*x111*x16*x35
    x123 = 2*N_bf*x111*x35
    x124 = 4*N_af*x77*x96
    x125 = 2*N_af*x83*x98
    x126 = x125*x3
    x127 = 2*N_af*x101*x82
    x128 = x127*x9
    x129 = x10*x125
    x130 = x127*x6
    x131 = 2*N_bf*x83*x98
    x132 = 2*N_bf*x101*x82
    x133 = 2*N_af*Q_external*lambda_a*x111*x27
    x134 = 2*N_af*Q_external*x111*x27*x4
    x135 = exp(x110*x76)
    x136 = 2*N_af*Q_external*x135*x16*x27
    x137 = 2*N_af*lambda_a*x135*x35
    x138 = 2*N_bf*lambda_a*x135*x35
    x139 = 2*N_bf*x111*x35*x4
    x140 = x29*x99
    x141 = x102*x44
    x142 = x45*x99
    x143 = x102*x31
    x144 = x125*x23
    x145 = x127*x15
    x146 = x125*x18
    x147 = x127*x24
    x148 = 2*N_af*recoil_prob*x77*x96
    x149 = 2*N_af*x135*x35*x4
    x150 = 2*N_af*x135*x16*x35
    x151 = 2*N_bf*x135*x35
    x152 = 2*N_af*Q_external*lambda_a*x135*x27
    x153 = 2*N_af*Q_external*x135*x27*x4
    x154 = 2*N_bf*x135*x35*x4
    x155 = x125*x29
    x156 = x127*x44
    x157 = x125*x45
    x158 = x127*x31
    x159 = 1/Q_external
    x160 = V_tank**4
    x161 = 4*N_af*lambda_a*x111*x159*x160
    x162 = 4*N_af*x111*x159*x160*x4
    x163 = 4*N_af*x111*x159*x16*x160
    x164 = 2*N_bf*lambda_a*x111*x159*x160
    x165 = 2*N_bf*x111*x159*x160*x4
    x166 = 2*N_bf*x111*x159*x16*x160
    x167 = 2*N_af*lambda_a*recoil_prob*x111*x159*x160
    x168 = 2*N_af*recoil_prob*x111*x159*x160*x4
    x169 = 2*N_af*recoil_prob*x111*x159*x16*x160
    x170 = 4*N_af*lambda_a*x135*x159*x160
    x171 = 4*N_af*x135*x159*x160*x4
    x172 = 4*N_af*x135*x159*x16*x160
    x173 = 2*N_bf*lambda_a*x135*x159*x160
    x174 = 2*N_bf*x135*x159*x160*x4
    x175 = 2*N_bf*x135*x159*x16*x160
    x176 = 2*N_af*lambda_a*recoil_prob*x135*x159*x160
    x177 = 2*N_af*recoil_prob*x135*x159*x160*x4
    x178 = 2*N_af*recoil_prob*x135*x159*x16*x160
    X = Ncal*Q*eff*rs*(-lambda_b*x112 + lambda_b*x136 + lambda_b*x67 - lambda_b*x78 + lambda_c*x112 - lambda_c*x136 - lambda_c*x67 + lambda_c*x78 - recoil_prob*x100 + recoil_prob*x103 + recoil_prob*x104 - recoil_prob*x105 + recoil_prob*x116 - recoil_prob*x117 - recoil_prob*x118 + recoil_prob*x119 + recoil_prob*x126 - recoil_prob*x128 - recoil_prob*x129 + recoil_prob*x130 - recoil_prob*x140 + recoil_prob*x141 + recoil_prob*x142 - recoil_prob*x143 - recoil_prob*x144 + recoil_prob*x145 + recoil_prob*x146 - recoil_prob*x147 + recoil_prob*x155 - recoil_prob*x156 - recoil_prob*x157 + recoil_prob*x158 - x0*x122 - x0*x134 + x0*x150 + x0*x153 + x0*x72 - x0*x84 + x0*x86 - x0*x95 - x10*x108 + x10*x131 - x10*x51 - x10*x52 + x10*x53 - x10*x56 - x10*x57 + x10*x59 + x10*x60 + x10*x61 - x10*x62 + x100 - x103 - x104 + x105 - x106*x69 + x106*x82 + x107*x71 - x107*x83 + x108*x18 - x108*x23 + x108*x29 + x108*x3 - x108*x45 + x109*x15 - x109*x24 + x109*x31 - x109*x44 + x109*x6 - x109*x9 + x11*x120 + x11*x124 - x11*x148 - x11*x51 - x11*x52 + x11*x53 - x11*x56 - x11*x57 + x11*x59 + x11*x60 + x11*x61 - x11*x62 - x11*x97 - x113*x21 + x113*x25 + x114*x21 - x114*x25 + x115*x41 - x115*x49 - x116 + x117 + x118 - x119 - x12*x121 + x12*x149 + x12*x75 - x12*x90 - x120*x22 + x120*x26 - x120*x34 + x120*x46 - x120*x8 + x121*x20 + x121*x41 - x121*x49 + x122*x7 + x123*x33 - x123*x37 - x124*x22 + x124*x26 - x124*x34 + x124*x46 - x124*x8 - x126 + x128 + x129 - x130 - x131*x18 + x131*x23 - x131*x29 - x131*x3 + x131*x45 - x132*x15 + x132*x24 - x132*x31 + x132*x44 - x132*x6 + x132*x9 + x133*x41 - x133*x49 + x134*x7 + x137*x21 - x137*x25 - x138*x21 + x138*x25 - x139*x41 + x139*x49 + x140 - x141 - x142 + x143 + x144 - x145 - x146 + x147 + x148*x22 - x148*x26 + x148*x34 - x148*x46 + x148*x8 - x149*x20 - x149*x41 + x149*x49 + x15*x51 + x15*x52 - x15*x53 + x15*x56 + x15*x57 - x15*x59 - x15*x60 - x15*x61 + x15*x62 - x150*x7 - x151*x33 + x151*x37 - x152*x41 + x152*x49 - x153*x7 + x154*x41 - x154*x49 - x155 + x156 + x157 - x158 - x161*x33 + x161*x37 - x162*x21 + x162*x25 + x163*x41 - x163*x49 - x164*x33 + x164*x37 - x165*x21 + x165*x25 + x166*x41 - x166*x49 + x167*x33 - x167*x37 + x168*x21 - x168*x25 - x169*x41 + x169*x49 + x170*x33 - x170*x37 + x171*x21 - x171*x25 - x172*x41 + x172*x49 + x173*x33 - x173*x37 + x174*x21 - x174*x25 - x175*x41 + x175*x49 - x176*x33 + x176*x37 - x177*x21 + x177*x25 + x178*x41 - x178*x49 + x18*x51 + x18*x52 - x18*x53 + x18*x56 + x18*x57 - x18*x59 - x18*x60 - x18*x61 + x18*x62 - x20*x75 + x20*x90 + x21*x85 - x21*x94 + x22*x51 + x22*x52 - x22*x53 + x22*x56 + x22*x57 - x22*x59 - x22*x60 - x22*x61 + x22*x62 + x22*x97 - x23*x51 - x23*x52 + x23*x53 - x23*x56 - x23*x57 + x23*x59 + x23*x60 + x23*x61 - x23*x62 - x24*x51 - x24*x52 + x24*x53 - x24*x56 - x24*x57 + x24*x59 + x24*x60 + x24*x61 - x24*x62 - x25*x85 + x25*x94 - x26*x51 - x26*x52 + x26*x53 - x26*x56 - x26*x57 + x26*x59 + x26*x60 + x26*x61 - x26*x62 - x26*x97 + x29*x51 + x29*x52 - x29*x53 + x29*x56 + x29*x57 - x29*x59 - x29*x60 - x29*x61 + x29*x62 + x3*x51 + x3*x52 - x3*x53 + x3*x56 + x3*x57 - x3*x59 - x3*x60 - x3*x61 + x3*x62 + x31*x51 + x31*x52 - x31*x53 + x31*x56 + x31*x57 - x31*x59 - x31*x60 - x31*x61 + x31*x62 + x34*x51 + x34*x52 - x34*x53 + x34*x56 + x34*x57 - x34*x59 - x34*x60 - x34*x61 + x34*x62 + x34*x97 + x38*x51 + x38*x52 - x38*x53 + x38*x56 + x38*x57 - x38*x59 - x38*x60 - x38*x61 + x38*x62 + x40*x51 + x40*x52 - x40*x53 + x40*x56 + x40*x57 - x40*x59 - x40*x60 - x40*x61 + x40*x62 - x41*x75 + x41*x90 - x41*x93 + x43*x51 + x43*x52 - x43*x53 + x43*x56 + x43*x57 - x43*x59 - x43*x60 - x43*x61 + x43*x62 - x44*x51 - x44*x52 + x44*x53 - x44*x56 - x44*x57 + x44*x59 + x44*x60 + x44*x61 - x44*x62 - x45*x51 - x45*x52 + x45*x53 - x45*x56 - x45*x57 + x45*x59 + x45*x60 + x45*x61 - x45*x62 - x46*x51 - x46*x52 + x46*x53 - x46*x56 - x46*x57 + x46*x59 + x46*x60 + x46*x61 - x46*x62 - x46*x97 - x47*x51 - x47*x52 + x47*x53 - x47*x56 - x47*x57 + x47*x59 + x47*x60 + x47*x61 - x47*x62 - x48*x51 - x48*x52 + x48*x53 - x48*x56 - x48*x57 + x48*x59 + x48*x60 + x48*x61 - x48*x62 + x49*x75 - x49*x90 + x49*x93 - x50*x51 - x50*x52 + x50*x53 - x50*x56 - x50*x57 + x50*x59 + x50*x60 + x50*x61 - x50*x62 + x51*x6 + x51*x8 - x51*x9 + x52*x6 + x52*x8 - x52*x9 - x53*x6 - x53*x8 + x53*x9 + x56*x6 + x56*x8 - x56*x9 + x57*x6 + x57*x8 - x57*x9 - x59*x6 - x59*x8 + x59*x9 - x6*x60 - x6*x61 + x6*x62 - x60*x8 + x60*x9 - x61*x8 + x61*x9 + x62*x8 - x62*x9 - x68*x69 + x68*x82 + x69*x73 + x69*x88 - x7*x72 + x7*x84 - x7*x86 + x7*x95 + x70*x71 - x70*x83 - x71*x74 - x71*x89 - x73*x82 + x74*x83 - x79*x80 + x79*x81 + x79*x91 - x79*x92 + x8*x97 + x80*x87 - x81*x87 - x82*x88 + x83*x89 - x87*x91 + x87*x92)/(2*(-x10 - x11 + x15 + x18 + x22 - x23 - x24 - x26 + x29 + x3 + x31 + x34 + x38 + x40 + x43 - x44 - x45 - x46 - x47 - x48 - x50 + x6 + x8 - x9))

    return X


def tc_integral_calibration_w_delay(V_delay,Ncal,V_tank,Q,N_bf,N_af,rs,recoil_prob,t,cal_begin,Q_external,eff,cal_duration, **kwargs):
    x0 = lambda_c**2
    x1 = Q_external**6
    x2 = V_delay*lambda_a*x1
    x3 = x0*x2
    x4 = lambda_a**2
    x5 = V_delay*x1*x4
    x6 = lambda_b*x5
    x7 = V_delay*x1
    x8 = lambda_b**2
    x9 = lambda_c*x8
    x10 = x7*x9
    x11 = V_tank*lambda_a*x1
    x12 = x11*x8
    x13 = V_tank*x1*x4
    x14 = lambda_c*x13
    x15 = V_tank*x1
    x16 = lambda_b*x0
    x17 = x15*x16
    x18 = x2*x8
    x19 = lambda_c*x5
    x20 = x16*x7
    x21 = x0*x11
    x22 = lambda_b*x13
    x23 = x15*x9
    x24 = lambda_b**3
    x25 = Q_external**5
    x26 = V_delay**2
    x27 = lambda_a*x25*x26
    x28 = x24*x27
    x29 = lambda_a**3
    x30 = x25*x26*x29
    x31 = lambda_c*x30
    x32 = lambda_c**3
    x33 = lambda_b*x32
    x34 = x25*x26
    x35 = x33*x34
    x36 = V_tank**2
    x37 = lambda_a*x25*x36
    x38 = x32*x37
    x39 = x25*x29*x36
    x40 = lambda_b*x39
    x41 = lambda_c*x24
    x42 = x25*x36
    x43 = x41*x42
    x44 = x27*x32
    x45 = lambda_b*x30
    x46 = x34*x41
    x47 = x24*x37
    x48 = lambda_c*x39
    x49 = x33*x42
    x50 = lambda_b**4
    x51 = Q_external**4
    x52 = V_delay*lambda_a*x36*x51
    x53 = x50*x52
    x54 = lambda_a**4
    x55 = V_delay*x36*x51*x54
    x56 = lambda_c*x55
    x57 = lambda_c**4
    x58 = lambda_b*x57
    x59 = V_delay*x36*x51
    x60 = x58*x59
    x61 = V_tank*lambda_a*x26*x51
    x62 = x57*x61
    x63 = V_tank*x26*x51*x54
    x64 = lambda_b*x63
    x65 = lambda_c*x50
    x66 = V_tank*x26*x51
    x67 = x65*x66
    x68 = V_delay**3
    x69 = x4*x51*x68
    x70 = x32*x69
    x71 = x29*x51*x68
    x72 = x71*x8
    x73 = x51*x68
    x74 = x0*x24
    x75 = x73*x74
    x76 = V_tank**3
    x77 = x4*x51*x76
    x78 = x24*x77
    x79 = x29*x51*x76
    x80 = x0*x79
    x81 = x51*x76
    x82 = x32*x8
    x83 = x81*x82
    x84 = x52*x57
    x85 = lambda_b*x55
    x86 = x59*x65
    x87 = x50*x61
    x88 = lambda_c*x63
    x89 = x58*x66
    x90 = x24*x69
    x91 = x0*x71
    x92 = x73*x82
    x93 = x32*x77
    x94 = x79*x8
    x95 = x74*x81
    x96 = Q_external**3
    x97 = V_delay*x4*x76*x96
    x98 = x57*x97
    x99 = V_delay*x54*x76*x96
    x100 = x8*x99
    x101 = x0*x50
    x102 = V_delay*x76*x96
    x103 = x101*x102
    x104 = V_tank*x4*x68*x96
    x105 = x104*x50
    x106 = V_tank*x54*x68*x96
    x107 = x0*x106
    x108 = x57*x8
    x109 = V_tank*x68*x96
    x110 = x108*x109
    x111 = V_delay**4
    x112 = lambda_a*x111*x96
    x113 = x112*x82
    x114 = x111*x4*x96
    x115 = x114*x41
    x116 = x111*x29*x96
    x117 = x116*x16
    x118 = V_tank**4
    x119 = lambda_a*x118*x96
    x120 = x119*x74
    x121 = x118*x4*x96
    x122 = x121*x33
    x123 = x118*x29*x96
    x124 = x123*x9
    x125 = x50*x97
    x126 = x0*x99
    x127 = x102*x108
    x128 = x104*x57
    x129 = x106*x8
    x130 = x101*x109
    x131 = x112*x74
    x132 = x114*x33
    x133 = x116*x9
    x134 = x119*x82
    x135 = x121*x41
    x136 = x123*x16
    x137 = x32*x50
    x138 = Q_external*lambda_a*x118*x26
    x139 = x137*x138
    x140 = Q_external*x118*x26*x29
    x141 = x140*x58
    x142 = Q_external*x118*x26*x54
    x143 = x142*x41
    x144 = x24*x57
    x145 = Q_external*lambda_a*x111*x36
    x146 = x144*x145
    x147 = Q_external*x111*x29*x36
    x148 = x147*x65
    x149 = Q_external*x111*x36*x54
    x150 = x149*x33
    x151 = Q_external**2
    x152 = V_delay*lambda_a*x118*x151
    x153 = x108*x152
    x154 = V_delay*x118*x151*x4
    x155 = x154*x65
    x156 = V_delay*x118*x151*x54
    x157 = x156*x16
    x158 = V_tank*lambda_a*x111*x151
    x159 = x101*x158
    x160 = V_tank*x111*x151*x4
    x161 = x160*x58
    x162 = V_tank*x111*x151*x54
    x163 = x162*x9
    x164 = x151*x26*x29*x76
    x165 = x164*x50
    x166 = x151*x26*x54*x76
    x167 = x166*x32
    x168 = x151*x26*x76
    x169 = x144*x168
    x170 = x151*x29*x36*x68
    x171 = x170*x57
    x172 = x151*x36*x54*x68
    x173 = x172*x24
    x174 = x151*x36*x68
    x175 = x137*x174
    x176 = x118*x4*x68
    x177 = x144*x176
    x178 = x118*x29*x68
    x179 = x101*x178
    x180 = x118*x54*x68
    x181 = x180*x82
    x182 = x111*x4*x76
    x183 = x137*x182
    x184 = x111*x29*x76
    x185 = x108*x184
    x186 = x111*x54*x76
    x187 = x186*x74
    x188 = x138*x144
    x189 = x140*x65
    x190 = x142*x33
    x191 = x137*x145
    x192 = x147*x58
    x193 = x149*x41
    x194 = x101*x152
    x195 = x154*x58
    x196 = x156*x9
    x197 = x108*x158
    x198 = x160*x65
    x199 = x16*x162
    x200 = x164*x57
    x201 = x166*x24
    x202 = x137*x168
    x203 = x170*x50
    x204 = x172*x32
    x205 = x144*x174
    x206 = x137*x176
    x207 = x108*x178
    x208 = x180*x74
    x209 = x144*x182
    x210 = x101*x184
    x211 = x186*x82
    x212 = N_bf*cal_duration
    x213 = 2*N_af*cal_duration
    x214 = N_af*cal_duration*recoil_prob
    x215 = cal_begin - t
    x216 = abs(x215)
    x217 = N_bf*x216
    x218 = 2*N_af*x216
    x219 = abs(cal_duration + x215)
    x220 = N_bf*x219
    x221 = N_af*recoil_prob*x216
    x222 = 2*N_af*x219
    x223 = N_af*recoil_prob*x219
    x224 = cal_begin/2
    x225 = -t/2
    x226 = -x216/2 + x224 + x225
    x227 = exp(lambda_a*x226)
    x228 = 2*N_af*V_delay*lambda_a*x1*x227
    x229 = 2*N_af*V_tank*lambda_a*x1*x227
    x230 = 2*N_bf*V_delay*lambda_a*x1
    x231 = exp(lambda_c*x226)
    x232 = lambda_b*x231
    x233 = exp(lambda_b*x226)
    x234 = lambda_c*x233
    x235 = 2*N_bf*V_tank*lambda_a*x1
    x236 = 2*N_af*V_delay*x1*x227
    x237 = 2*N_af*V_tank*x1*x227
    x238 = 2*N_bf*V_delay*x1
    x239 = x231*x8
    x240 = x0*x233
    x241 = 2*N_bf*V_tank*x1
    x242 = cal_duration/2 - x219/2 + x224 + x225
    x243 = exp(lambda_a*x242)
    x244 = 2*N_af*V_delay*lambda_a*x1*x243
    x245 = 2*N_af*V_tank*lambda_a*x1*x243
    x246 = exp(lambda_c*x242)
    x247 = lambda_b*x246
    x248 = exp(lambda_b*x242)
    x249 = lambda_c*x248
    x250 = 2*N_af*x227*x25*x26
    x251 = 2*N_af*x227*x25*x36
    x252 = 2*N_af*V_delay*x1*x243
    x253 = 2*N_af*V_tank*x1*x243
    x254 = 2*N_bf*x25*x26
    x255 = x231*x24
    x256 = x233*x32
    x257 = 2*N_bf*x25*x36
    x258 = x246*x8
    x259 = x0*x248
    x260 = 2*N_af*V_delay*x227*x36*x51
    x261 = 2*N_af*V_tank*x227*x26*x51
    x262 = 2*N_af*x227*x51*x68
    x263 = 2*N_af*x227*x51*x76
    x264 = 2*N_af*lambda_a*x227*x25*x26
    x265 = 2*N_af*lambda_a*x227*x25*x36
    x266 = 2*N_bf*V_delay*x36*x51
    x267 = x231*x50
    x268 = x233*x57
    x269 = 2*N_bf*V_tank*x26*x51
    x270 = 2*N_bf*lambda_a*x51*x68
    x271 = 2*N_bf*lambda_a*x51*x76
    x272 = 2*N_bf*x25*x26*x4
    x273 = 2*N_bf*x25*x36*x4
    x274 = 2*N_af*x243*x25*x26
    x275 = 2*N_af*x243*x25*x36
    x276 = x24*x246
    x277 = x248*x32
    x278 = 2*N_af*V_delay*x227*x76*x96
    x279 = 2*N_af*V_tank*x227*x68*x96
    x280 = 2*N_af*V_delay*lambda_a*x227*x36*x51
    x281 = 2*N_af*V_tank*lambda_a*x227*x26*x51
    x282 = 2*N_af*lambda_a*x227*x51*x68
    x283 = 2*N_af*lambda_a*x227*x51*x76
    x284 = 1/lambda_a
    x285 = 4*N_af*x227*x284
    x286 = 1/lambda_b
    x287 = 2*N_af*x233*x286
    x288 = x287*x3
    x289 = 1/lambda_c
    x290 = 2*N_af*x231*x289
    x291 = x18*x290
    x292 = x19*x287
    x293 = x290*x6
    x294 = x21*x287
    x295 = x12*x290
    x296 = x14*x287
    x297 = x22*x290
    x298 = 2*N_bf*V_delay*lambda_a*x76*x96
    x299 = 2*N_bf*V_tank*lambda_a*x68*x96
    x300 = 2*N_bf*V_delay*x29*x36*x51
    x301 = 2*N_bf*V_tank*x26*x29*x51
    x302 = 2*N_bf*x233*x286
    x303 = 2*N_bf*x231*x289
    x304 = 2*N_af*V_delay*x243*x36*x51
    x305 = 2*N_af*V_tank*x243*x26*x51
    x306 = 2*N_af*x243*x51*x68
    x307 = 2*N_af*x243*x51*x76
    x308 = 2*N_af*lambda_a*x243*x25*x26
    x309 = 2*N_af*lambda_a*x243*x25*x36
    x310 = x246*x50
    x311 = x248*x57
    x312 = 2*N_bf*x4*x51*x68
    x313 = 2*N_bf*x4*x51*x76
    x314 = 2*N_af*V_delay*lambda_a*x227*x76*x96
    x315 = 2*N_af*V_tank*lambda_a*x227*x68*x96
    x316 = 2*N_af*recoil_prob*x227*x284
    x317 = 1/V_delay
    x318 = Q_external*x226
    x319 = exp(x317*x318)
    x320 = 2*N_af*x29*x319*x51*x68
    x321 = 1/V_tank
    x322 = exp(x318*x321)
    x323 = 2*N_af*x29*x322*x51*x76
    x324 = 2*N_af*V_delay*x243*x76*x96
    x325 = 2*N_af*V_tank*x243*x68*x96
    x326 = 2*N_af*V_delay*lambda_a*x243*x36*x51
    x327 = 2*N_af*V_tank*lambda_a*x243*x26*x51
    x328 = 2*N_af*lambda_a*x243*x51*x68
    x329 = 2*N_af*lambda_a*x243*x51*x76
    x330 = x287*x44
    x331 = x28*x290
    x332 = x287*x31
    x333 = x290*x45
    x334 = x287*x38
    x335 = x290*x47
    x336 = x287*x48
    x337 = x290*x40
    x338 = 4*N_af*x243*x284
    x339 = 2*N_af*x248*x286
    x340 = x3*x339
    x341 = 2*N_af*x246*x289
    x342 = x18*x341
    x343 = x19*x339
    x344 = x341*x6
    x345 = x21*x339
    x346 = x12*x341
    x347 = x14*x339
    x348 = x22*x341
    x349 = 2*N_bf*V_delay*x29*x76*x96
    x350 = 2*N_bf*V_tank*x29*x68*x96
    x351 = 2*N_bf*x248*x286
    x352 = 2*N_bf*x246*x289
    x353 = 2*N_af*V_delay*x322*x54*x76*x96
    x354 = 2*N_af*V_tank*x319*x54*x68*x96
    x355 = 2*N_af*lambda_a*x111*x319*x96
    x356 = 2*N_af*lambda_a*x118*x322*x96
    x357 = 2*N_af*lambda_a*x319*x51*x68
    x358 = 2*N_af*lambda_a*x322*x51*x76
    x359 = 2*N_bf*lambda_a*x111*x319*x96
    x360 = 2*N_bf*lambda_a*x118*x322*x96
    x361 = 2*N_af*V_delay*lambda_a*x243*x76*x96
    x362 = 2*N_af*V_tank*lambda_a*x243*x68*x96
    x363 = x287*x84
    x364 = x290*x53
    x365 = x287*x56
    x366 = x290*x85
    x367 = x287*x62
    x368 = x290*x87
    x369 = x287*x88
    x370 = x290*x64
    x371 = 2*N_af*recoil_prob*x243*x284
    x372 = 2*N_af*x111*x319*x4*x96
    x373 = 2*N_af*x111*x29*x319*x96
    x374 = 2*N_af*x118*x322*x4*x96
    x375 = 2*N_af*x118*x29*x322*x96
    x376 = 2*N_af*x319*x4*x51*x68
    x377 = Q_external*x242
    x378 = exp(x317*x377)
    x379 = 2*N_af*x29*x378*x51*x68
    x380 = 2*N_af*x322*x4*x51*x76
    x381 = exp(x321*x377)
    x382 = 2*N_af*x29*x381*x51*x76
    x383 = 2*N_bf*x111*x319*x96
    x384 = 2*N_bf*x118*x322*x96
    x385 = 2*N_af*x151*x227*x26*x76
    x386 = 2*N_af*x151*x227*x36*x68
    x387 = x287*x70
    x388 = x290*x90
    x389 = x287*x91
    x390 = x290*x72
    x391 = x287*x93
    x392 = x290*x78
    x393 = x287*x80
    x394 = x290*x94
    x395 = x339*x44
    x396 = x28*x341
    x397 = x31*x339
    x398 = x341*x45
    x399 = x339*x38
    x400 = x341*x47
    x401 = x339*x48
    x402 = x341*x40
    x403 = 2*N_bf*x151*x26*x4*x76
    x404 = 2*N_bf*x151*x26*x29*x76
    x405 = 2*N_bf*x151*x36*x4*x68
    x406 = 2*N_bf*x151*x29*x36*x68
    x407 = V_tank**5
    x408 = 4*N_af*Q_external*V_delay*lambda_a*x322*x407
    x409 = 4*N_af*Q_external*V_delay*x322*x4*x407
    x410 = 4*N_af*Q_external*V_delay*x322*x407*x54
    x411 = V_delay**5
    x412 = 4*N_af*Q_external*V_tank*lambda_a*x319*x411
    x413 = 4*N_af*Q_external*V_tank*x319*x4*x411
    x414 = 4*N_af*Q_external*V_tank*x319*x411*x54
    x415 = 2*N_af*V_delay*lambda_a*x118*x151*x322
    x416 = 2*N_af*V_tank*lambda_a*x111*x151*x319
    x417 = 2*N_af*V_delay*lambda_a*x322*x76*x96
    x418 = 2*N_af*V_tank*lambda_a*x319*x68*x96
    x419 = 2*N_bf*Q_external*V_delay*lambda_a*x322*x407
    x420 = 2*N_bf*Q_external*V_delay*x322*x4*x407
    x421 = 2*N_bf*Q_external*V_delay*x322*x407*x54
    x422 = 2*N_bf*Q_external*V_tank*lambda_a*x319*x411
    x423 = 2*N_bf*Q_external*V_tank*x319*x4*x411
    x424 = 2*N_bf*Q_external*V_tank*x319*x411*x54
    x425 = 2*N_bf*V_delay*lambda_a*x118*x151*x322
    x426 = 2*N_bf*V_tank*lambda_a*x111*x151*x319
    x427 = 2*N_af*Q_external*x118*x26*x29*x322
    x428 = 2*N_af*Q_external*x118*x26*x322*x54
    x429 = 2*N_af*Q_external*x111*x29*x319*x36
    x430 = 2*N_af*Q_external*x111*x319*x36*x54
    x431 = 2*N_af*V_delay*x118*x151*x322*x4
    x432 = 2*N_af*V_delay*x118*x151*x322*x54
    x433 = 2*N_af*V_tank*x111*x151*x319*x4
    x434 = 2*N_af*V_tank*x111*x151*x319*x54
    x435 = 4*N_af*lambda_a*x151*x319*x411
    x436 = 4*N_af*x151*x319*x4*x411
    x437 = 4*N_af*x151*x29*x319*x411
    x438 = 4*N_af*lambda_a*x151*x322*x407
    x439 = 4*N_af*x151*x322*x4*x407
    x440 = 4*N_af*x151*x29*x322*x407
    x441 = 2*N_af*V_delay*x322*x4*x76*x96
    x442 = 2*N_af*V_delay*x381*x54*x76*x96
    x443 = 2*N_af*V_tank*x319*x4*x68*x96
    x444 = 2*N_af*V_tank*x378*x54*x68*x96
    x445 = 2*N_af*lambda_a*x111*x378*x96
    x446 = 2*N_af*lambda_a*x118*x381*x96
    x447 = 2*N_af*lambda_a*x378*x51*x68
    x448 = 2*N_af*lambda_a*x381*x51*x76
    x449 = 4*N_af*lambda_a*x26*x322*x407
    x450 = 4*N_af*x26*x29*x322*x407
    x451 = 4*N_af*x26*x322*x407*x54
    x452 = 2*N_af*x118*x29*x322*x68
    x453 = 2*N_af*x118*x322*x54*x68
    x454 = 2*N_af*x111*x29*x319*x76
    x455 = 2*N_af*x111*x319*x54*x76
    x456 = 4*N_af*lambda_a*x319*x36*x411
    x457 = 4*N_af*x29*x319*x36*x411
    x458 = 4*N_af*x319*x36*x411*x54
    x459 = 2*N_bf*Q_external*x118*x26*x322
    x460 = 2*N_bf*Q_external*x111*x319*x36
    x461 = 2*N_bf*V_delay*x118*x151*x322
    x462 = 2*N_bf*V_tank*x111*x151*x319
    x463 = 2*N_bf*lambda_a*x151*x319*x411
    x464 = 2*N_bf*x151*x319*x4*x411
    x465 = 2*N_bf*x151*x29*x319*x411
    x466 = 2*N_bf*lambda_a*x151*x322*x407
    x467 = 2*N_bf*x151*x322*x4*x407
    x468 = 2*N_bf*x151*x29*x322*x407
    x469 = 2*N_bf*lambda_a*x111*x378*x96
    x470 = 2*N_bf*x111*x319*x4*x96
    x471 = 2*N_bf*lambda_a*x118*x381*x96
    x472 = 2*N_bf*x118*x322*x4*x96
    x473 = 2*N_bf*lambda_a*x26*x322*x407
    x474 = 2*N_bf*x26*x29*x322*x407
    x475 = 2*N_bf*x26*x322*x407*x54
    x476 = 2*N_bf*lambda_a*x118*x322*x68
    x477 = 2*N_bf*lambda_a*x111*x319*x76
    x478 = 2*N_bf*lambda_a*x319*x36*x411
    x479 = 2*N_bf*x29*x319*x36*x411
    x480 = 2*N_bf*x319*x36*x411*x54
    x481 = 2*N_af*lambda_a*x151*x227*x26*x76
    x482 = 2*N_af*lambda_a*x151*x227*x36*x68
    x483 = x287*x98
    x484 = x125*x290
    x485 = x126*x287
    x486 = x100*x290
    x487 = x128*x287
    x488 = x105*x290
    x489 = x107*x287
    x490 = x129*x290
    x491 = x339*x84
    x492 = x341*x53
    x493 = x339*x56
    x494 = x341*x85
    x495 = x339*x62
    x496 = x341*x87
    x497 = x339*x88
    x498 = x341*x64
    x499 = 2*N_af*Q_external*V_delay*lambda_a*recoil_prob*x322*x407
    x500 = 2*N_af*Q_external*V_delay*recoil_prob*x322*x4*x407
    x501 = 2*N_af*Q_external*V_delay*recoil_prob*x322*x407*x54
    x502 = 2*N_af*Q_external*V_tank*lambda_a*recoil_prob*x319*x411
    x503 = 2*N_af*Q_external*V_tank*recoil_prob*x319*x4*x411
    x504 = 2*N_af*Q_external*V_tank*recoil_prob*x319*x411*x54
    x505 = 2*N_af*x111*x378*x4*x96
    x506 = 2*N_af*x111*x29*x378*x96
    x507 = 2*N_af*x118*x381*x4*x96
    x508 = 2*N_af*x118*x29*x381*x96
    x509 = 2*N_af*x378*x4*x51*x68
    x510 = 2*N_af*x381*x4*x51*x76
    x511 = 2*N_bf*x111*x378*x96
    x512 = 2*N_bf*x118*x381*x96
    x513 = 2*N_af*x151*x243*x26*x76
    x514 = 2*N_af*x151*x243*x36*x68
    x515 = x339*x70
    x516 = x341*x90
    x517 = x339*x91
    x518 = x341*x72
    x519 = x339*x93
    x520 = x341*x78
    x521 = x339*x80
    x522 = x341*x94
    x523 = 4*N_af*Q_external*V_delay*lambda_a*x381*x407
    x524 = 4*N_af*Q_external*V_delay*x381*x4*x407
    x525 = 4*N_af*Q_external*V_delay*x381*x407*x54
    x526 = 2*N_af*Q_external*lambda_a*x118*x26*x322
    x527 = 2*N_af*Q_external*lambda_b*x29*x32*x68*x76
    x528 = 2*N_af*Q_external*lambda_c*x24*x29*x68*x76
    x529 = 2*N_af*Q_external*lambda_b*x0*x54*x68*x76
    x530 = 2*N_af*Q_external*lambda_c*x54*x68*x76*x8
    x531 = 2*N_af*Q_external*lambda_a*x111*x319*x36
    x532 = 4*N_af*Q_external*V_tank*lambda_a*x378*x411
    x533 = 4*N_af*Q_external*V_tank*x378*x4*x411
    x534 = 4*N_af*Q_external*V_tank*x378*x411*x54
    x535 = 2*N_af*V_delay*lambda_a*x118*x151*x381
    x536 = 2*N_af*V_tank*lambda_a*x111*x151*x378
    x537 = 2*N_af*lambda_a*recoil_prob*x151*x319*x411
    x538 = 2*N_af*recoil_prob*x151*x319*x4*x411
    x539 = 2*N_af*recoil_prob*x151*x29*x319*x411
    x540 = 2*N_af*lambda_a*recoil_prob*x151*x322*x407
    x541 = 2*N_af*recoil_prob*x151*x322*x4*x407
    x542 = 2*N_af*recoil_prob*x151*x29*x322*x407
    x543 = 2*N_af*V_delay*lambda_a*x381*x76*x96
    x544 = 2*N_af*V_tank*lambda_a*x378*x68*x96
    x545 = 2*N_af*lambda_a*recoil_prob*x26*x322*x407
    x546 = 2*N_af*recoil_prob*x26*x29*x322*x407
    x547 = 2*N_af*recoil_prob*x26*x322*x407*x54
    x548 = 2*N_af*lambda_a*recoil_prob*x319*x36*x411
    x549 = 2*N_af*recoil_prob*x29*x319*x36*x411
    x550 = 2*N_af*recoil_prob*x319*x36*x411*x54
    x551 = 2*N_bf*Q_external*V_delay*lambda_a*x381*x407
    x552 = 2*N_bf*Q_external*V_delay*x381*x4*x407
    x553 = 2*N_bf*Q_external*V_delay*x381*x407*x54
    x554 = 2*N_bf*Q_external*x118*x26*x322*x4
    x555 = 2*N_bf*Q_external*x118*x26*x29*x322
    x556 = 2*N_bf*Q_external*x111*x319*x36*x4
    x557 = 2*N_bf*Q_external*x111*x29*x319*x36
    x558 = 2*N_bf*Q_external*V_tank*lambda_a*x378*x411
    x559 = 2*N_bf*Q_external*V_tank*x378*x4*x411
    x560 = 2*N_bf*Q_external*V_tank*x378*x411*x54
    x561 = 2*N_bf*V_delay*lambda_a*x118*x151*x381
    x562 = 2*N_bf*V_delay*x118*x151*x29*x322
    x563 = 2*N_bf*V_tank*lambda_a*x111*x151*x378
    x564 = 2*N_bf*V_tank*x111*x151*x29*x319
    x565 = 2*N_af*Q_external*x118*x26*x29*x381
    x566 = 2*N_af*Q_external*x118*x26*x381*x54
    x567 = 2*N_af*Q_external*x111*x29*x36*x378
    x568 = 2*N_af*Q_external*x111*x36*x378*x54
    x569 = 2*N_af*V_delay*x118*x151*x381*x4
    x570 = 2*N_af*V_delay*x118*x151*x381*x54
    x571 = 2*N_af*x151*x26*x29*x322*x76
    x572 = 2*N_af*x151*x26*x322*x54*x76
    x573 = 2*N_af*x151*x29*x319*x36*x68
    x574 = 2*N_af*x151*x319*x36*x54*x68
    x575 = 2*N_af*V_tank*x111*x151*x378*x4
    x576 = 2*N_af*V_tank*x111*x151*x378*x54
    x577 = 4*N_af*lambda_a*x151*x378*x411
    x578 = 4*N_af*x151*x378*x4*x411
    x579 = 4*N_af*x151*x29*x378*x411
    x580 = 4*N_af*lambda_a*x151*x381*x407
    x581 = 4*N_af*x151*x381*x4*x407
    x582 = 4*N_af*x151*x29*x381*x407
    x583 = 2*N_af*V_delay*x381*x4*x76*x96
    x584 = 2*N_af*V_tank*x378*x4*x68*x96
    x585 = 4*N_af*lambda_a*x26*x381*x407
    x586 = 4*N_af*x26*x29*x381*x407
    x587 = 4*N_af*x26*x381*x407*x54
    x588 = 2*N_af*x118*x322*x4*x68
    x589 = 2*N_af*x118*x29*x381*x68
    x590 = 2*N_af*x118*x381*x54*x68
    x591 = 2*N_af*x111*x319*x4*x76
    x592 = 2*N_af*x111*x29*x378*x76
    x593 = 2*N_af*x111*x378*x54*x76
    x594 = 4*N_af*lambda_a*x36*x378*x411
    x595 = 4*N_af*x29*x36*x378*x411
    x596 = 4*N_af*x36*x378*x411*x54
    x597 = 2*N_bf*Q_external*x118*x26*x381
    x598 = 2*N_bf*Q_external*x111*x36*x378
    x599 = 2*N_bf*V_delay*x118*x151*x381
    x600 = 2*N_bf*V_tank*x111*x151*x378
    x601 = 2*N_bf*lambda_a*x151*x378*x411
    x602 = 2*N_bf*x151*x378*x4*x411
    x603 = 2*N_bf*x151*x29*x378*x411
    x604 = 2*N_bf*lambda_a*x151*x381*x407
    x605 = 2*N_bf*x151*x381*x4*x407
    x606 = 2*N_bf*x151*x29*x381*x407
    x607 = 2*N_bf*x111*x378*x4*x96
    x608 = 2*N_bf*x118*x381*x4*x96
    x609 = 2*N_bf*lambda_a*x26*x381*x407
    x610 = 2*N_bf*x26*x29*x381*x407
    x611 = 2*N_bf*x26*x381*x407*x54
    x612 = 2*N_bf*lambda_a*x118*x381*x68
    x613 = 2*N_bf*x118*x322*x4*x68
    x614 = 2*N_bf*x118*x29*x322*x68
    x615 = 2*N_bf*lambda_a*x111*x378*x76
    x616 = 2*N_bf*x111*x319*x4*x76
    x617 = 2*N_bf*x111*x29*x319*x76
    x618 = 2*N_bf*lambda_a*x36*x378*x411
    x619 = 2*N_bf*x29*x36*x378*x411
    x620 = 2*N_bf*x36*x378*x411*x54
    x621 = 2*N_af*lambda_a*x151*x243*x26*x76
    x622 = x200*x287
    x623 = x165*x290
    x624 = x167*x287
    x625 = x201*x290
    x626 = 2*N_af*lambda_a*x151*x243*x36*x68
    x627 = x171*x287
    x628 = x203*x290
    x629 = x204*x287
    x630 = x173*x290
    x631 = x339*x98
    x632 = x125*x341
    x633 = x126*x339
    x634 = x100*x341
    x635 = x128*x339
    x636 = x105*x341
    x637 = x107*x339
    x638 = x129*x341
    x639 = 2*N_af*Q_external*V_delay*lambda_a*recoil_prob*x381*x407
    x640 = 2*N_af*Q_external*V_delay*recoil_prob*x381*x4*x407
    x641 = 2*N_af*Q_external*V_delay*recoil_prob*x381*x407*x54
    x642 = 2*N_af*Q_external*V_tank*lambda_a*recoil_prob*x378*x411
    x643 = 2*N_af*Q_external*V_tank*recoil_prob*x378*x4*x411
    x644 = 2*N_af*Q_external*V_tank*recoil_prob*x378*x411*x54
    x645 = 2*N_af*Q_external*lambda_a*x118*x26*x381
    x646 = 2*N_af*Q_external*x32*x4*x68*x76*x8
    x647 = 2*N_af*Q_external*x0*x24*x4*x68*x76
    x648 = 2*N_af*Q_external*lambda_a*x111*x36*x378
    x649 = 2*N_af*lambda_a*x151*x26*x322*x76
    x650 = 2*N_af*lambda_a*x151*x319*x36*x68
    x651 = 2*N_af*lambda_a*recoil_prob*x151*x378*x411
    x652 = 2*N_af*recoil_prob*x151*x378*x4*x411
    x653 = 2*N_af*recoil_prob*x151*x29*x378*x411
    x654 = 2*N_af*lambda_a*recoil_prob*x151*x381*x407
    x655 = 2*N_af*recoil_prob*x151*x381*x4*x407
    x656 = 2*N_af*recoil_prob*x151*x29*x381*x407
    x657 = 2*N_af*lambda_a*recoil_prob*x26*x381*x407
    x658 = 2*N_af*recoil_prob*x26*x29*x381*x407
    x659 = 2*N_af*recoil_prob*x26*x381*x407*x54
    x660 = 2*N_af*lambda_a*recoil_prob*x36*x378*x411
    x661 = 2*N_af*recoil_prob*x29*x36*x378*x411
    x662 = 2*N_af*recoil_prob*x36*x378*x411*x54
    x663 = 2*N_bf*Q_external*x118*x26*x381*x4
    x664 = 2*N_bf*Q_external*x118*x26*x29*x381
    x665 = 2*N_bf*Q_external*x111*x36*x378*x4
    x666 = 2*N_bf*Q_external*x111*x29*x36*x378
    x667 = 2*N_bf*V_delay*x118*x151*x29*x381
    x668 = 2*N_bf*V_tank*x111*x151*x29*x378
    x669 = 2*N_af*x151*x26*x29*x381*x76
    x670 = 2*N_af*x151*x26*x381*x54*x76
    x671 = 2*N_af*x151*x29*x36*x378*x68
    x672 = 2*N_af*x151*x36*x378*x54*x68
    x673 = 2*N_af*x118*x381*x4*x68
    x674 = 2*N_af*x111*x378*x4*x76
    x675 = 2*N_bf*x118*x381*x4*x68
    x676 = 2*N_bf*x118*x29*x381*x68
    x677 = 2*N_bf*x111*x378*x4*x76
    x678 = 2*N_bf*x111*x29*x378*x76
    x679 = x200*x339
    x680 = x165*x341
    x681 = x167*x339
    x682 = x201*x341
    x683 = x171*x339
    x684 = x203*x341
    x685 = x204*x339
    x686 = x173*x341
    x687 = 1/Q_external
    x688 = 4*N_af*x322*x4*x407*x68*x687
    x689 = 4*N_af*x29*x322*x407*x68*x687
    x690 = 4*N_af*x322*x407*x54*x68*x687
    x691 = 4*N_af*x319*x4*x411*x687*x76
    x692 = 4*N_af*x29*x319*x411*x687*x76
    x693 = 4*N_af*x319*x411*x54*x687*x76
    x694 = 2*N_af*lambda_a*x151*x26*x381*x76
    x695 = 2*N_af*lambda_a*x151*x36*x378*x68
    x696 = 2*N_bf*x322*x4*x407*x68*x687
    x697 = 2*N_bf*x29*x322*x407*x68*x687
    x698 = 2*N_bf*x322*x407*x54*x68*x687
    x699 = 2*N_bf*x319*x4*x411*x687*x76
    x700 = 2*N_bf*x29*x319*x411*x687*x76
    x701 = 2*N_bf*x319*x411*x54*x687*x76
    x702 = 2*N_af*recoil_prob*x322*x4*x407*x68*x687
    x703 = 2*N_af*recoil_prob*x29*x322*x407*x68*x687
    x704 = 2*N_af*recoil_prob*x322*x407*x54*x68*x687
    x705 = 2*N_af*recoil_prob*x319*x4*x411*x687*x76
    x706 = 2*N_af*recoil_prob*x29*x319*x411*x687*x76
    x707 = 2*N_af*recoil_prob*x319*x411*x54*x687*x76
    x708 = 4*N_af*x381*x4*x407*x68*x687
    x709 = 4*N_af*x29*x381*x407*x68*x687
    x710 = 4*N_af*x381*x407*x54*x68*x687
    x711 = 4*N_af*x378*x4*x411*x687*x76
    x712 = 4*N_af*x29*x378*x411*x687*x76
    x713 = 4*N_af*x378*x411*x54*x687*x76
    x714 = 2*N_bf*x381*x4*x407*x68*x687
    x715 = 2*N_bf*x29*x381*x407*x68*x687
    x716 = 2*N_bf*x381*x407*x54*x68*x687
    x717 = 2*N_bf*x378*x4*x411*x687*x76
    x718 = 2*N_bf*x29*x378*x411*x687*x76
    x719 = 2*N_bf*x378*x411*x54*x687*x76
    x720 = 2*N_af*recoil_prob*x381*x4*x407*x68*x687
    x721 = 2*N_af*recoil_prob*x29*x381*x407*x68*x687
    x722 = 2*N_af*recoil_prob*x381*x407*x54*x68*x687
    x723 = 2*N_af*recoil_prob*x378*x4*x411*x687*x76
    x724 = 2*N_af*recoil_prob*x29*x378*x411*x687*x76
    x725 = 2*N_af*recoil_prob*x378*x411*x54*x687*x76
    X = -Ncal*Q*eff*rs*(-lambda_b*x228 + lambda_b*x229 + lambda_b*x244 - lambda_b*x245 + lambda_b*x320 - lambda_b*x323 + lambda_b*x353 - lambda_b*x354 - lambda_b*x379 + lambda_b*x382 - lambda_b*x442 + lambda_b*x444 + lambda_c*x228 - lambda_c*x229 - lambda_c*x244 + lambda_c*x245 - lambda_c*x320 + lambda_c*x323 - lambda_c*x353 + lambda_c*x354 + lambda_c*x379 - lambda_c*x382 + lambda_c*x442 - lambda_c*x444 + recoil_prob*x288 - recoil_prob*x291 - recoil_prob*x292 + recoil_prob*x293 - recoil_prob*x294 + recoil_prob*x295 + recoil_prob*x296 - recoil_prob*x297 - recoil_prob*x330 + recoil_prob*x331 + recoil_prob*x332 - recoil_prob*x333 + recoil_prob*x334 - recoil_prob*x335 - recoil_prob*x336 + recoil_prob*x337 - recoil_prob*x340 + recoil_prob*x342 + recoil_prob*x343 - recoil_prob*x344 + recoil_prob*x345 - recoil_prob*x346 - recoil_prob*x347 + recoil_prob*x348 - recoil_prob*x363 + recoil_prob*x364 + recoil_prob*x365 - recoil_prob*x366 + recoil_prob*x367 - recoil_prob*x368 - recoil_prob*x369 + recoil_prob*x370 + recoil_prob*x387 - recoil_prob*x388 - recoil_prob*x389 + recoil_prob*x390 - recoil_prob*x391 + recoil_prob*x392 + recoil_prob*x393 - recoil_prob*x394 + recoil_prob*x395 - recoil_prob*x396 - recoil_prob*x397 + recoil_prob*x398 - recoil_prob*x399 + recoil_prob*x400 + recoil_prob*x401 - recoil_prob*x402 + recoil_prob*x483 - recoil_prob*x484 - recoil_prob*x485 + recoil_prob*x486 - recoil_prob*x487 + recoil_prob*x488 + recoil_prob*x489 - recoil_prob*x490 + recoil_prob*x491 - recoil_prob*x492 - recoil_prob*x493 + recoil_prob*x494 - recoil_prob*x495 + recoil_prob*x496 + recoil_prob*x497 - recoil_prob*x498 - recoil_prob*x515 + recoil_prob*x516 + recoil_prob*x517 - recoil_prob*x518 + recoil_prob*x519 - recoil_prob*x520 - recoil_prob*x521 + recoil_prob*x522 - recoil_prob*x622 + recoil_prob*x623 + recoil_prob*x624 - recoil_prob*x625 + recoil_prob*x627 - recoil_prob*x628 - recoil_prob*x629 + recoil_prob*x630 - recoil_prob*x631 + recoil_prob*x632 + recoil_prob*x633 - recoil_prob*x634 + recoil_prob*x635 - recoil_prob*x636 - recoil_prob*x637 + recoil_prob*x638 + recoil_prob*x679 - recoil_prob*x680 - recoil_prob*x681 + recoil_prob*x682 - recoil_prob*x683 + recoil_prob*x684 + recoil_prob*x685 - recoil_prob*x686 - x0*x236 + x0*x237 + x0*x252 - x0*x253 - x0*x264 + x0*x265 + x0*x308 - x0*x309 + x0*x373 - x0*x375 + x0*x376 - x0*x380 + x0*x432 - x0*x434 - x0*x506 + x0*x508 - x0*x509 + x0*x510 - x0*x570 + x0*x572 - x0*x574 + x0*x576 - x0*x670 + x0*x672 - x10*x212 - x10*x213 + x10*x214 - x10*x217 - x10*x218 + x10*x220 + x10*x221 + x10*x222 - x10*x223 - x10*x285 + x10*x316 + x10*x338 - x10*x371 - x100*x212 - x100*x213 + x100*x214 - x100*x217 - x100*x218 + x100*x220 + x100*x221 + x100*x222 - x100*x223 - x100*x303 + x100*x352 - x101*x385 + x101*x386 + x101*x408 - x101*x412 + x101*x419 - x101*x422 - x101*x461 + x101*x462 - x101*x499 + x101*x502 + x101*x513 - x101*x514 - x101*x523 + x101*x526 - x101*x531 + x101*x532 - x101*x551 + x101*x558 - x101*x588 + x101*x591 + x101*x599 - x101*x600 + x101*x613 - x101*x616 + x101*x639 - x101*x642 - x101*x645 + x101*x648 + x101*x673 - x101*x674 - x101*x675 + x101*x677 - x101*x689 + x101*x692 - x101*x697 + x101*x700 + x101*x703 - x101*x706 + x101*x709 - x101*x712 + x101*x715 - x101*x718 - x101*x721 + x101*x724 - x103*x212 - x103*x213 + x103*x214 - x103*x217 - x103*x218 + x103*x220 + x103*x221 + x103*x222 - x103*x223 - x103*x285 + x103*x316 + x103*x338 - x103*x371 - x105*x212 - x105*x213 + x105*x214 - x105*x217 - x105*x218 + x105*x220 + x105*x221 + x105*x222 - x105*x223 - x105*x303 + x105*x352 - x107*x212 - x107*x213 + x107*x214 - x107*x217 - x107*x218 + x107*x220 + x107*x221 + x107*x222 - x107*x223 - x107*x302 + x107*x351 + x108*x385 - x108*x386 - x108*x408 + x108*x412 - x108*x419 + x108*x422 + x108*x461 - x108*x462 + x108*x499 - x108*x502 - x108*x513 + x108*x514 + x108*x523 - x108*x526 + x108*x531 - x108*x532 + x108*x551 - x108*x558 + x108*x588 - x108*x591 - x108*x599 + x108*x600 - x108*x613 + x108*x616 - x108*x639 + x108*x642 + x108*x645 - x108*x648 - x108*x673 + x108*x674 + x108*x675 - x108*x677 + x108*x689 - x108*x692 + x108*x697 - x108*x700 - x108*x703 + x108*x706 - x108*x709 + x108*x712 - x108*x715 + x108*x718 + x108*x721 - x108*x724 - x110*x212 - x110*x213 + x110*x214 - x110*x217 - x110*x218 + x110*x220 + x110*x221 + x110*x222 - x110*x223 - x110*x285 + x110*x316 + x110*x338 - x110*x371 - x113*x212 - x113*x213 + x113*x214 - x113*x217 - x113*x218 + x113*x220 + x113*x221 + x113*x222 - x113*x223 - x115*x212 - x115*x213 + x115*x214 - x115*x217 - x115*x218 + x115*x220 + x115*x221 + x115*x222 - x115*x223 - x117*x212 - x117*x213 + x117*x214 - x117*x217 - x117*x218 + x117*x220 + x117*x221 + x117*x222 - x117*x223 - x12*x212 - x12*x213 + x12*x214 - x12*x217 - x12*x218 + x12*x220 + x12*x221 + x12*x222 - x12*x223 - x12*x303 + x12*x352 - x120*x212 - x120*x213 + x120*x214 - x120*x217 - x120*x218 + x120*x220 + x120*x221 + x120*x222 - x120*x223 - x122*x212 - x122*x213 + x122*x214 - x122*x217 - x122*x218 + x122*x220 + x122*x221 + x122*x222 - x122*x223 - x124*x212 - x124*x213 + x124*x214 - x124*x217 - x124*x218 + x124*x220 + x124*x221 + x124*x222 - x124*x223 + x125*x212 + x125*x213 - x125*x214 + x125*x217 + x125*x218 - x125*x220 - x125*x221 - x125*x222 + x125*x223 + x125*x303 - x125*x352 + x126*x212 + x126*x213 - x126*x214 + x126*x217 + x126*x218 - x126*x220 - x126*x221 - x126*x222 + x126*x223 + x126*x302 - x126*x351 + x127*x212 + x127*x213 - x127*x214 + x127*x217 + x127*x218 - x127*x220 - x127*x221 - x127*x222 + x127*x223 + x127*x285 - x127*x316 - x127*x338 + x127*x371 + x128*x212 + x128*x213 - x128*x214 + x128*x217 + x128*x218 - x128*x220 - x128*x221 - x128*x222 + x128*x223 + x128*x302 - x128*x351 + x129*x212 + x129*x213 - x129*x214 + x129*x217 + x129*x218 - x129*x220 - x129*x221 - x129*x222 + x129*x223 + x129*x303 - x129*x352 + x130*x212 + x130*x213 - x130*x214 + x130*x217 + x130*x218 - x130*x220 - x130*x221 - x130*x222 + x130*x223 + x130*x285 - x130*x316 - x130*x338 + x130*x371 + x131*x212 + x131*x213 - x131*x214 + x131*x217 + x131*x218 - x131*x220 - x131*x221 - x131*x222 + x131*x223 + x132*x212 + x132*x213 - x132*x214 + x132*x217 + x132*x218 - x132*x220 - x132*x221 - x132*x222 + x132*x223 + x133*x212 + x133*x213 - x133*x214 + x133*x217 + x133*x218 - x133*x220 - x133*x221 - x133*x222 + x133*x223 + x134*x212 + x134*x213 - x134*x214 + x134*x217 + x134*x218 - x134*x220 - x134*x221 - x134*x222 + x134*x223 + x135*x212 + x135*x213 - x135*x214 + x135*x217 + x135*x218 - x135*x220 - x135*x221 - x135*x222 + x135*x223 + x136*x212 + x136*x213 - x136*x214 + x136*x217 + x136*x218 - x136*x220 - x136*x221 - x136*x222 + x136*x223 - x137*x449 + x137*x456 + x137*x459 - x137*x460 - x137*x473 - x137*x476 + x137*x477 + x137*x478 + x137*x545 - x137*x548 + x137*x585 - x137*x594 - x137*x597 + x137*x598 + x137*x609 + x137*x612 - x137*x615 - x137*x618 - x137*x657 + x137*x660 + x137*x688 - x137*x691 + x137*x696 - x137*x699 - x137*x702 + x137*x705 - x137*x708 + x137*x711 - x137*x714 + x137*x717 + x137*x720 - x137*x723 - x139*x212 - x139*x213 + x139*x214 - x139*x217 - x139*x218 + x139*x220 + x139*x221 + x139*x222 - x139*x223 - x14*x212 - x14*x213 + x14*x214 - x14*x217 - x14*x218 + x14*x220 + x14*x221 + x14*x222 - x14*x223 - x14*x302 + x14*x351 - x141*x212 - x141*x213 + x141*x214 - x141*x217 - x141*x218 + x141*x220 + x141*x221 + x141*x222 - x141*x223 - x143*x212 - x143*x213 + x143*x214 - x143*x217 - x143*x218 + x143*x220 + x143*x221 + x143*x222 - x143*x223 + x144*x449 - x144*x456 - x144*x459 + x144*x460 + x144*x473 + x144*x476 - x144*x477 - x144*x478 - x144*x545 + x144*x548 - x144*x585 + x144*x594 + x144*x597 - x144*x598 - x144*x609 - x144*x612 + x144*x615 + x144*x618 + x144*x657 - x144*x660 - x144*x688 + x144*x691 - x144*x696 + x144*x699 + x144*x702 - x144*x705 + x144*x708 - x144*x711 + x144*x714 - x144*x717 - x144*x720 + x144*x723 - x146*x212 - x146*x213 + x146*x214 - x146*x217 - x146*x218 + x146*x220 + x146*x221 + x146*x222 - x146*x223 - x148*x212 - x148*x213 + x148*x214 - x148*x217 - x148*x218 + x148*x220 + x148*x221 + x148*x222 - x148*x223 - x150*x212 - x150*x213 + x150*x214 - x150*x217 - x150*x218 + x150*x220 + x150*x221 + x150*x222 - x150*x223 - x153*x212 - x153*x213 + x153*x214 - x153*x217 - x153*x218 + x153*x220 + x153*x221 + x153*x222 - x153*x223 - x155*x212 - x155*x213 + x155*x214 - x155*x217 - x155*x218 + x155*x220 + x155*x221 + x155*x222 - x155*x223 - x157*x212 - x157*x213 + x157*x214 - x157*x217 - x157*x218 + x157*x220 + x157*x221 + x157*x222 - x157*x223 - x159*x212 - x159*x213 + x159*x214 - x159*x217 - x159*x218 + x159*x220 + x159*x221 + x159*x222 - x159*x223 + x16*x250 - x16*x251 - x16*x274 + x16*x275 + x16*x282 - x16*x283 - x16*x328 + x16*x329 - x16*x357 + x16*x358 - x16*x372 + x16*x374 - x16*x410 + x16*x414 - x16*x421 + x16*x424 - x16*x428 + x16*x430 - x16*x437 + x16*x440 + x16*x447 - x16*x448 - x16*x465 + x16*x468 + x16*x470 - x16*x472 + x16*x501 - x16*x504 + x16*x505 - x16*x507 + x16*x525 - x16*x534 + x16*x539 - x16*x542 + x16*x553 - x16*x560 + x16*x562 - x16*x564 + x16*x566 - x16*x568 + x16*x579 - x16*x582 + x16*x603 - x16*x606 - x16*x607 + x16*x608 - x16*x641 + x16*x644 - x16*x653 + x16*x656 - x16*x667 + x16*x668 - x161*x212 - x161*x213 + x161*x214 - x161*x217 - x161*x218 + x161*x220 + x161*x221 + x161*x222 - x161*x223 - x163*x212 - x163*x213 + x163*x214 - x163*x217 - x163*x218 + x163*x220 + x163*x221 + x163*x222 - x163*x223 - x165*x212 - x165*x213 + x165*x214 - x165*x217 - x165*x218 + x165*x220 + x165*x221 + x165*x222 - x165*x223 - x165*x303 + x165*x352 - x167*x212 - x167*x213 + x167*x214 - x167*x217 - x167*x218 + x167*x220 + x167*x221 + x167*x222 - x167*x223 - x167*x302 + x167*x351 - x169*x212 - x169*x213 + x169*x214 - x169*x217 - x169*x218 + x169*x220 + x169*x221 + x169*x222 - x169*x223 - x169*x285 + x169*x316 + x169*x338 - x169*x371 - x17*x212 - x17*x213 + x17*x214 - x17*x217 - x17*x218 + x17*x220 + x17*x221 + x17*x222 - x17*x223 - x17*x285 + x17*x316 + x17*x338 - x17*x371 - x171*x212 - x171*x213 + x171*x214 - x171*x217 - x171*x218 + x171*x220 + x171*x221 + x171*x222 - x171*x223 - x171*x302 + x171*x351 - x173*x212 - x173*x213 + x173*x214 - x173*x217 - x173*x218 + x173*x220 + x173*x221 + x173*x222 - x173*x223 - x173*x303 + x173*x352 - x175*x212 - x175*x213 + x175*x214 - x175*x217 - x175*x218 + x175*x220 + x175*x221 + x175*x222 - x175*x223 - x175*x285 + x175*x316 + x175*x338 - x175*x371 - x177*x212 - x177*x213 + x177*x214 - x177*x217 - x177*x218 + x177*x220 + x177*x221 + x177*x222 - x177*x223 - x179*x212 - x179*x213 + x179*x214 - x179*x217 - x179*x218 + x179*x220 + x179*x221 + x179*x222 - x179*x223 + x18*x212 + x18*x213 - x18*x214 + x18*x217 + x18*x218 - x18*x220 - x18*x221 - x18*x222 + x18*x223 + x18*x303 - x18*x352 - x181*x212 - x181*x213 + x181*x214 - x181*x217 - x181*x218 + x181*x220 + x181*x221 + x181*x222 - x181*x223 - x183*x212 - x183*x213 + x183*x214 - x183*x217 - x183*x218 + x183*x220 + x183*x221 + x183*x222 - x183*x223 - x185*x212 - x185*x213 + x185*x214 - x185*x217 - x185*x218 + x185*x220 + x185*x221 + x185*x222 - x185*x223 - x187*x212 - x187*x213 + x187*x214 - x187*x217 - x187*x218 + x187*x220 + x187*x221 + x187*x222 - x187*x223 + x188*x212 + x188*x213 - x188*x214 + x188*x217 + x188*x218 - x188*x220 - x188*x221 - x188*x222 + x188*x223 + x189*x212 + x189*x213 - x189*x214 + x189*x217 + x189*x218 - x189*x220 - x189*x221 - x189*x222 + x189*x223 + x19*x212 + x19*x213 - x19*x214 + x19*x217 + x19*x218 - x19*x220 - x19*x221 - x19*x222 + x19*x223 + x19*x302 - x19*x351 + x190*x212 + x190*x213 - x190*x214 + x190*x217 + x190*x218 - x190*x220 - x190*x221 - x190*x222 + x190*x223 + x191*x212 + x191*x213 - x191*x214 + x191*x217 + x191*x218 - x191*x220 - x191*x221 - x191*x222 + x191*x223 + x192*x212 + x192*x213 - x192*x214 + x192*x217 + x192*x218 - x192*x220 - x192*x221 - x192*x222 + x192*x223 + x193*x212 + x193*x213 - x193*x214 + x193*x217 + x193*x218 - x193*x220 - x193*x221 - x193*x222 + x193*x223 + x194*x212 + x194*x213 - x194*x214 + x194*x217 + x194*x218 - x194*x220 - x194*x221 - x194*x222 + x194*x223 + x195*x212 + x195*x213 - x195*x214 + x195*x217 + x195*x218 - x195*x220 - x195*x221 - x195*x222 + x195*x223 + x196*x212 + x196*x213 - x196*x214 + x196*x217 + x196*x218 - x196*x220 - x196*x221 - x196*x222 + x196*x223 + x197*x212 + x197*x213 - x197*x214 + x197*x217 + x197*x218 - x197*x220 - x197*x221 - x197*x222 + x197*x223 + x198*x212 + x198*x213 - x198*x214 + x198*x217 + x198*x218 - x198*x220 - x198*x221 - x198*x222 + x198*x223 + x199*x212 + x199*x213 - x199*x214 + x199*x217 + x199*x218 - x199*x220 - x199*x221 - x199*x222 + x199*x223 + x20*x212 + x20*x213 - x20*x214 + x20*x217 + x20*x218 - x20*x220 - x20*x221 - x20*x222 + x20*x223 + x20*x285 - x20*x316 - x20*x338 + x20*x371 + x200*x212 + x200*x213 - x200*x214 + x200*x217 + x200*x218 - x200*x220 - x200*x221 - x200*x222 + x200*x223 + x200*x302 - x200*x351 + x201*x212 + x201*x213 - x201*x214 + x201*x217 + x201*x218 - x201*x220 - x201*x221 - x201*x222 + x201*x223 + x201*x303 - x201*x352 + x202*x212 + x202*x213 - x202*x214 + x202*x217 + x202*x218 - x202*x220 - x202*x221 - x202*x222 + x202*x223 + x202*x285 - x202*x316 - x202*x338 + x202*x371 + x203*x212 + x203*x213 - x203*x214 + x203*x217 + x203*x218 - x203*x220 - x203*x221 - x203*x222 + x203*x223 + x203*x303 - x203*x352 + x204*x212 + x204*x213 - x204*x214 + x204*x217 + x204*x218 - x204*x220 - x204*x221 - x204*x222 + x204*x223 + x204*x302 - x204*x351 + x205*x212 + x205*x213 - x205*x214 + x205*x217 + x205*x218 - x205*x220 - x205*x221 - x205*x222 + x205*x223 + x205*x285 - x205*x316 - x205*x338 + x205*x371 + x206*x212 + x206*x213 - x206*x214 + x206*x217 + x206*x218 - x206*x220 - x206*x221 - x206*x222 + x206*x223 + x207*x212 + x207*x213 - x207*x214 + x207*x217 + x207*x218 - x207*x220 - x207*x221 - x207*x222 + x207*x223 + x208*x212 + x208*x213 - x208*x214 + x208*x217 + x208*x218 - x208*x220 - x208*x221 - x208*x222 + x208*x223 + x209*x212 + x209*x213 - x209*x214 + x209*x217 + x209*x218 - x209*x220 - x209*x221 - x209*x222 + x209*x223 + x21*x212 + x21*x213 - x21*x214 + x21*x217 + x21*x218 - x21*x220 - x21*x221 - x21*x222 + x21*x223 + x21*x302 - x21*x351 + x210*x212 + x210*x213 - x210*x214 + x210*x217 + x210*x218 - x210*x220 - x210*x221 - x210*x222 + x210*x223 + x211*x212 + x211*x213 - x211*x214 + x211*x217 + x211*x218 - x211*x220 - x211*x221 - x211*x222 + x211*x223 + x212*x22 + x212*x23 - x212*x28 - x212*x3 - x212*x31 - x212*x35 - x212*x38 - x212*x40 - x212*x43 + x212*x44 + x212*x45 + x212*x46 + x212*x47 + x212*x48 + x212*x49 - x212*x53 - x212*x56 - x212*x6 - x212*x60 - x212*x62 - x212*x64 - x212*x67 - x212*x70 - x212*x72 - x212*x75 - x212*x78 - x212*x80 - x212*x83 + x212*x84 + x212*x85 + x212*x86 + x212*x87 + x212*x88 + x212*x89 + x212*x90 + x212*x91 + x212*x92 + x212*x93 + x212*x94 + x212*x95 - x212*x98 + x213*x22 + x213*x23 - x213*x28 - x213*x3 - x213*x31 - x213*x35 - x213*x38 - x213*x40 - x213*x43 + x213*x44 + x213*x45 + x213*x46 + x213*x47 + x213*x48 + x213*x49 - x213*x53 - x213*x56 - x213*x6 - x213*x60 - x213*x62 - x213*x64 - x213*x67 - x213*x70 - x213*x72 - x213*x75 - x213*x78 - x213*x80 - x213*x83 + x213*x84 + x213*x85 + x213*x86 + x213*x87 + x213*x88 + x213*x89 + x213*x90 + x213*x91 + x213*x92 + x213*x93 + x213*x94 + x213*x95 - x213*x98 - x214*x22 - x214*x23 + x214*x28 + x214*x3 + x214*x31 + x214*x35 + x214*x38 + x214*x40 + x214*x43 - x214*x44 - x214*x45 - x214*x46 - x214*x47 - x214*x48 - x214*x49 + x214*x53 + x214*x56 + x214*x6 + x214*x60 + x214*x62 + x214*x64 + x214*x67 + x214*x70 + x214*x72 + x214*x75 + x214*x78 + x214*x80 + x214*x83 - x214*x84 - x214*x85 - x214*x86 - x214*x87 - x214*x88 - x214*x89 - x214*x90 - x214*x91 - x214*x92 - x214*x93 - x214*x94 - x214*x95 + x214*x98 + x217*x22 + x217*x23 - x217*x28 - x217*x3 - x217*x31 - x217*x35 - x217*x38 - x217*x40 - x217*x43 + x217*x44 + x217*x45 + x217*x46 + x217*x47 + x217*x48 + x217*x49 - x217*x53 - x217*x56 - x217*x6 - x217*x60 - x217*x62 - x217*x64 - x217*x67 - x217*x70 - x217*x72 - x217*x75 - x217*x78 - x217*x80 - x217*x83 + x217*x84 + x217*x85 + x217*x86 + x217*x87 + x217*x88 + x217*x89 + x217*x90 + x217*x91 + x217*x92 + x217*x93 + x217*x94 + x217*x95 - x217*x98 + x218*x22 + x218*x23 - x218*x28 - x218*x3 - x218*x31 - x218*x35 - x218*x38 - x218*x40 - x218*x43 + x218*x44 + x218*x45 + x218*x46 + x218*x47 + x218*x48 + x218*x49 - x218*x53 - x218*x56 - x218*x6 - x218*x60 - x218*x62 - x218*x64 - x218*x67 - x218*x70 - x218*x72 - x218*x75 - x218*x78 - x218*x80 - x218*x83 + x218*x84 + x218*x85 + x218*x86 + x218*x87 + x218*x88 + x218*x89 + x218*x90 + x218*x91 + x218*x92 + x218*x93 + x218*x94 + x218*x95 - x218*x98 - x22*x220 - x22*x221 - x22*x222 + x22*x223 + x22*x303 - x22*x352 - x220*x23 + x220*x28 + x220*x3 + x220*x31 + x220*x35 + x220*x38 + x220*x40 + x220*x43 - x220*x44 - x220*x45 - x220*x46 - x220*x47 - x220*x48 - x220*x49 + x220*x53 + x220*x56 + x220*x6 + x220*x60 + x220*x62 + x220*x64 + x220*x67 + x220*x70 + x220*x72 + x220*x75 + x220*x78 + x220*x80 + x220*x83 - x220*x84 - x220*x85 - x220*x86 - x220*x87 - x220*x88 - x220*x89 - x220*x90 - x220*x91 - x220*x92 - x220*x93 - x220*x94 - x220*x95 + x220*x98 - x221*x23 + x221*x28 + x221*x3 + x221*x31 + x221*x35 + x221*x38 + x221*x40 + x221*x43 - x221*x44 - x221*x45 - x221*x46 - x221*x47 - x221*x48 - x221*x49 + x221*x53 + x221*x56 + x221*x6 + x221*x60 + x221*x62 + x221*x64 + x221*x67 + x221*x70 + x221*x72 + x221*x75 + x221*x78 + x221*x80 + x221*x83 - x221*x84 - x221*x85 - x221*x86 - x221*x87 - x221*x88 - x221*x89 - x221*x90 - x221*x91 - x221*x92 - x221*x93 - x221*x94 - x221*x95 + x221*x98 - x222*x23 + x222*x28 + x222*x3 + x222*x31 + x222*x35 + x222*x38 + x222*x40 + x222*x43 - x222*x44 - x222*x45 - x222*x46 - x222*x47 - x222*x48 - x222*x49 + x222*x53 + x222*x56 + x222*x6 + x222*x60 + x222*x62 + x222*x64 + x222*x67 + x222*x70 + x222*x72 + x222*x75 + x222*x78 + x222*x80 + x222*x83 - x222*x84 - x222*x85 - x222*x86 - x222*x87 - x222*x88 - x222*x89 - x222*x90 - x222*x91 - x222*x92 - x222*x93 - x222*x94 - x222*x95 + x222*x98 + x223*x23 - x223*x28 - x223*x3 - x223*x31 - x223*x35 - x223*x38 - x223*x40 - x223*x43 + x223*x44 + x223*x45 + x223*x46 + x223*x47 + x223*x48 + x223*x49 - x223*x53 - x223*x56 - x223*x6 - x223*x60 - x223*x62 - x223*x64 - x223*x67 - x223*x70 - x223*x72 - x223*x75 - x223*x78 - x223*x80 - x223*x83 + x223*x84 + x223*x85 + x223*x86 + x223*x87 + x223*x88 + x223*x89 + x223*x90 + x223*x91 + x223*x92 + x223*x93 + x223*x94 + x223*x95 - x223*x98 + x23*x285 - x23*x316 - x23*x338 + x23*x371 + x230*x232 - x230*x234 - x230*x247 + x230*x249 - x232*x235 - x232*x272 + x232*x273 - x232*x300 + x232*x301 + x234*x235 + x234*x272 - x234*x273 + x234*x300 - x234*x301 + x235*x247 - x235*x249 + x236*x8 - x237*x8 - x238*x239 + x238*x240 + x238*x258 - x238*x259 + x239*x241 + x239*x312 - x239*x313 + x239*x349 - x239*x350 - x24*x250 + x24*x251 + x24*x274 - x24*x275 + x24*x280 - x24*x281 - x24*x326 + x24*x327 + x24*x372 - x24*x374 + x24*x428 - x24*x430 - x24*x441 + x24*x443 - x24*x505 + x24*x507 - x24*x566 + x24*x568 + x24*x571 - x24*x573 + x24*x583 - x24*x584 - x24*x669 + x24*x671 - x240*x241 - x240*x312 + x240*x313 - x240*x349 + x240*x350 - x241*x258 + x241*x259 + x247*x272 - x247*x273 + x247*x300 - x247*x301 - x249*x272 + x249*x273 - x249*x300 + x249*x301 + x250*x32 - x250*x9 - x251*x32 + x251*x9 - x252*x8 + x253*x8 + x254*x255 - x254*x256 - x254*x276 + x254*x277 - x255*x257 - x255*x270 + x255*x271 - x255*x404 + x255*x406 + x256*x257 + x256*x270 - x256*x271 + x256*x404 - x256*x406 + x257*x276 - x257*x277 - x258*x312 + x258*x313 - x258*x349 + x258*x350 + x259*x312 - x259*x313 + x259*x349 - x259*x350 + x260*x33 - x260*x41 - x260*x50 + x260*x57 - x261*x33 + x261*x41 + x261*x50 - x261*x57 - x262*x33 + x262*x41 + x263*x33 - x263*x41 + x264*x8 - x265*x8 + x266*x267 - x266*x268 - x266*x310 + x266*x311 - x267*x269 - x267*x298 + x267*x299 + x267*x403 - x267*x405 + x268*x269 + x268*x298 - x268*x299 - x268*x403 + x268*x405 + x269*x310 - x269*x311 + x270*x276 - x270*x277 - x271*x276 + x271*x277 - x274*x32 + x274*x9 + x275*x32 - x275*x9 + x276*x404 - x276*x406 - x277*x404 + x277*x406 - x278*x58 + x278*x65 + x278*x74 - x278*x82 + x279*x58 - x279*x65 - x279*x74 + x279*x82 - x28*x303 + x28*x352 - x280*x32 + x281*x32 - x282*x9 + x283*x9 - x285*x35 - x285*x43 + x285*x46 + x285*x49 - x285*x60 - x285*x67 - x285*x75 - x285*x83 + x285*x86 + x285*x89 + x285*x92 + x285*x95 - x288 + x291 + x292 - x293 + x294 - x295 - x296 + x297 + x298*x310 - x298*x311 - x299*x310 + x299*x311 - x3*x302 + x3*x351 - x302*x31 - x302*x38 + x302*x44 + x302*x48 - x302*x56 - x302*x62 - x302*x70 - x302*x80 + x302*x84 + x302*x88 + x302*x91 + x302*x93 - x302*x98 - x303*x40 + x303*x45 + x303*x47 - x303*x53 - x303*x6 - x303*x64 - x303*x72 - x303*x78 + x303*x85 + x303*x87 + x303*x90 + x303*x94 - x304*x33 + x304*x41 + x304*x50 - x304*x57 + x305*x33 - x305*x41 - x305*x50 + x305*x57 + x306*x33 - x306*x41 - x307*x33 + x307*x41 - x308*x8 + x309*x8 + x31*x351 - x310*x403 + x310*x405 + x311*x403 - x311*x405 + x314*x33 - x314*x41 - x315*x33 + x315*x41 + x316*x35 + x316*x43 - x316*x46 - x316*x49 + x316*x60 + x316*x67 + x316*x75 + x316*x83 - x316*x86 - x316*x89 - x316*x92 - x316*x95 - x319*x527 + x319*x528 + x319*x529 - x319*x530 + x319*x646 - x319*x647 + x32*x326 - x32*x327 - x32*x372 + x32*x374 - x32*x428 + x32*x430 + x32*x441 - x32*x443 + x32*x505 - x32*x507 + x32*x566 - x32*x568 - x32*x571 + x32*x573 - x32*x583 + x32*x584 + x32*x669 - x32*x671 + x322*x527 - x322*x528 - x322*x529 + x322*x530 - x322*x646 + x322*x647 + x324*x58 - x324*x65 - x324*x74 + x324*x82 - x325*x58 + x325*x65 + x325*x74 - x325*x82 + x328*x9 - x329*x9 + x33*x355 - x33*x356 - x33*x359 + x33*x360 - x33*x361 + x33*x362 - x33*x417 + x33*x418 + x33*x427 - x33*x429 - x33*x431 + x33*x433 + x33*x436 - x33*x439 - x33*x445 + x33*x446 + x33*x451 + x33*x453 - x33*x455 - x33*x458 + x33*x464 - x33*x467 + x33*x469 - x33*x471 + x33*x475 - x33*x480 - x33*x538 + x33*x541 + x33*x543 - x33*x544 - x33*x547 + x33*x550 - x33*x555 + x33*x557 - x33*x565 + x33*x567 + x33*x569 - x33*x575 - x33*x578 + x33*x581 - x33*x587 - x33*x590 + x33*x593 + x33*x596 - x33*x602 + x33*x605 - x33*x611 + x33*x620 + x33*x652 - x33*x655 + x33*x659 - x33*x662 + x33*x664 - x33*x666 + x330 - x331 - x332 + x333 - x334 + x335 + x336 - x337 + x338*x35 + x338*x43 - x338*x46 - x338*x49 + x338*x60 + x338*x67 + x338*x75 + x338*x83 - x338*x86 - x338*x89 - x338*x92 - x338*x95 + x340 - x342 - x343 + x344 - x345 + x346 + x347 - x348 - x35*x371 + x351*x38 - x351*x44 - x351*x48 + x351*x56 + x351*x62 + x351*x70 + x351*x80 - x351*x84 - x351*x88 - x351*x91 - x351*x93 + x351*x98 + x352*x40 - x352*x45 - x352*x47 + x352*x53 + x352*x6 + x352*x64 + x352*x72 + x352*x78 - x352*x85 - x352*x87 - x352*x90 - x352*x94 - x355*x41 + x356*x41 + x357*x9 - x358*x9 + x359*x41 - x360*x41 + x361*x41 - x362*x41 + x363 - x364 - x365 + x366 - x367 + x368 + x369 - x370 - x371*x43 + x371*x46 + x371*x49 - x371*x60 - x371*x67 - x371*x75 - x371*x83 + x371*x86 + x371*x89 + x371*x92 + x371*x95 + x372*x9 - x373*x8 - x374*x9 + x375*x8 - x376*x8 + x378*x527 - x378*x528 - x378*x529 + x378*x530 - x378*x646 + x378*x647 + x380*x8 - x381*x527 + x381*x528 + x381*x529 - x381*x530 + x381*x646 - x381*x647 - x383*x74 + x383*x82 + x384*x74 - x384*x82 - x387 + x388 + x389 - x390 + x391 - x392 - x393 + x394 - x395 + x396 + x397 - x398 + x399 - x400 - x401 + x402 + x409*x58 - x409*x65 + x41*x417 - x41*x418 - x41*x427 + x41*x429 + x41*x431 - x41*x433 - x41*x436 + x41*x439 + x41*x445 - x41*x446 - x41*x451 - x41*x453 + x41*x455 + x41*x458 - x41*x464 + x41*x467 - x41*x469 + x41*x471 - x41*x475 + x41*x480 + x41*x538 - x41*x541 - x41*x543 + x41*x544 + x41*x547 - x41*x550 + x41*x555 - x41*x557 + x41*x565 - x41*x567 - x41*x569 + x41*x575 + x41*x578 - x41*x581 + x41*x587 + x41*x590 - x41*x593 - x41*x596 + x41*x602 - x41*x605 + x41*x611 - x41*x620 - x41*x652 + x41*x655 - x41*x659 + x41*x662 - x41*x664 + x41*x666 + x410*x9 - x413*x58 + x413*x65 - x414*x9 + x415*x58 - x415*x65 - x415*x74 + x415*x82 - x416*x58 + x416*x65 + x416*x74 - x416*x82 + x420*x58 - x420*x65 + x421*x9 - x423*x58 + x423*x65 - x424*x9 - x425*x58 + x425*x65 + x426*x58 - x426*x65 - x427*x50 + x427*x57 + x428*x9 + x429*x50 - x429*x57 - x430*x9 + x431*x50 - x431*x57 - x432*x8 - x433*x50 + x433*x57 + x434*x8 + x435*x74 - x435*x82 + x437*x9 - x438*x74 + x438*x82 - x440*x9 - x447*x9 + x448*x9 - x450*x58 + x450*x65 - x452*x58 + x452*x65 + x452*x74 - x452*x82 + x454*x58 - x454*x65 - x454*x74 + x454*x82 + x457*x58 - x457*x65 + x463*x74 - x463*x82 + x465*x9 - x466*x74 + x466*x82 - x468*x9 - x470*x9 + x472*x9 - x474*x58 + x474*x65 + x479*x58 - x479*x65 + x481*x74 - x481*x82 - x482*x74 + x482*x82 - x483 + x484 + x485 - x486 + x487 - x488 - x489 + x490 - x491 + x492 + x493 - x494 + x495 - x496 - x497 + x498 + x50*x565 - x50*x567 - x50*x569 + x50*x575 - x500*x58 + x500*x65 - x501*x9 + x503*x58 - x503*x65 + x504*x9 - x505*x9 + x506*x8 + x507*x9 - x508*x8 + x509*x8 - x510*x8 + x511*x74 - x511*x82 - x512*x74 + x512*x82 + x515 - x516 - x517 + x518 - x519 + x520 + x521 - x522 - x524*x58 + x524*x65 - x525*x9 + x533*x58 - x533*x65 + x534*x9 - x535*x58 + x535*x65 + x535*x74 - x535*x82 + x536*x58 - x536*x65 - x536*x74 + x536*x82 - x537*x74 + x537*x82 - x539*x9 + x540*x74 - x540*x82 + x542*x9 + x546*x58 - x546*x65 - x549*x58 + x549*x65 - x552*x58 + x552*x65 - x553*x9 + x554*x58 - x554*x65 - x556*x58 + x556*x65 + x559*x58 - x559*x65 + x560*x9 + x561*x58 - x561*x65 - x562*x9 - x563*x58 + x563*x65 + x564*x9 - x565*x57 - x566*x9 + x567*x57 + x568*x9 + x569*x57 - x57*x575 + x570*x8 - x572*x8 + x574*x8 - x576*x8 - x577*x74 + x577*x82 - x579*x9 + x58*x586 + x58*x589 - x58*x592 - x58*x595 + x58*x610 - x58*x619 + x58*x640 - x58*x643 - x58*x658 + x58*x661 - x58*x663 + x58*x665 + x580*x74 - x580*x82 + x582*x9 - x586*x65 - x589*x65 - x589*x74 + x589*x82 + x592*x65 + x592*x74 - x592*x82 + x595*x65 - x601*x74 + x601*x82 - x603*x9 + x604*x74 - x604*x82 + x606*x9 + x607*x9 - x608*x9 - x610*x65 - x614*x74 + x614*x82 + x617*x74 - x617*x82 + x619*x65 - x621*x74 + x621*x82 + x622 - x623 - x624 + x625 + x626*x74 - x626*x82 - x627 + x628 + x629 - x630 + x631 - x632 - x633 + x634 - x635 + x636 + x637 - x638 - x640*x65 + x641*x9 + x643*x65 - x644*x9 - x649*x74 + x649*x82 + x65*x658 - x65*x661 + x65*x663 - x65*x665 + x650*x74 - x650*x82 + x651*x74 - x651*x82 + x653*x9 - x654*x74 + x654*x82 - x656*x9 + x667*x9 - x668*x9 + x670*x8 - x672*x8 + x676*x74 - x676*x82 - x678*x74 + x678*x82 - x679 + x680 + x681 - x682 + x683 - x684 - x685 + x686 + x690*x74 - x690*x82 - x693*x74 + x693*x82 + x694*x74 - x694*x82 - x695*x74 + x695*x82 + x698*x74 - x698*x82 - x701*x74 + x701*x82 - x704*x74 + x704*x82 + x707*x74 - x707*x82 - x710*x74 + x710*x82 + x713*x74 - x713*x82 - x716*x74 + x716*x82 + x719*x74 - x719*x82 + x722*x74 - x722*x82 - x725*x74 + x725*x82)/(2*(x10 + x100 + x103 + x105 + x107 + x110 + x113 + x115 + x117 + x12 + x120 + x122 + x124 - x125 - x126 - x127 - x128 - x129 - x130 - x131 - x132 - x133 - x134 - x135 - x136 + x139 + x14 + x141 + x143 + x146 + x148 + x150 + x153 + x155 + x157 + x159 + x161 + x163 + x165 + x167 + x169 + x17 + x171 + x173 + x175 + x177 + x179 - x18 + x181 + x183 + x185 + x187 - x188 - x189 - x19 - x190 - x191 - x192 - x193 - x194 - x195 - x196 - x197 - x198 - x199 - x20 - x200 - x201 - x202 - x203 - x204 - x205 - x206 - x207 - x208 - x209 - x21 - x210 - x211 - x22 - x23 + x28 + x3 + x31 + x35 + x38 + x40 + x43 - x44 - x45 - x46 - x47 - x48 - x49 + x53 + x56 + x6 + x60 + x62 + x64 + x67 + x70 + x72 + x75 + x78 + x80 + x83 - x84 - x85 - x86 - x87 - x88 - x89 - x90 - x91 - x92 - x93 - x94 - x95 + x98))

    return X


def tc_integral_square_wave(V_delay,delta_t,V_tank,Q,N_bf,N_af,rs,recoil_prob,t0,t,N_e,Q_external,eff, **kwargs):
    x0 = Q_external**2
    x1 = lambda_a*lambda_b*x0
    x2 = lambda_a*x0
    x3 = V_delay - V_tank
    x4 = x0*x3
    x5 = lambda_a**2
    x6 = V_delay*V_tank*x3
    x7 = Q_external*lambda_a
    x8 = V_delay**2
    x9 = V_tank**2
    x10 = x8 - x9
    x11 = x10*x7
    x12 = -x11 + x4 + x5*x6
    x13 = -x12*x2
    x14 = lambda_b**3
    x15 = V_delay*V_tank*x14
    x16 = Q_external*lambda_b
    x17 = Q_external**3
    x18 = x17*x3
    x19 = V_delay**3
    x20 = V_tank**3
    x21 = x19 - x20
    x22 = x21*x5
    x23 = lambda_a**3
    x24 = V_delay*V_tank*x10
    x25 = -Q_external*x22 + x18 + x23*x24
    x26 = lambda_b**2
    x27 = x10*x17
    x28 = x3*x8*x9
    x29 = -x2*x21 + x23*x28 + x27
    x30 = x26*x29
    x31 = x12*x15 + x13 + x16*x25 - x30
    x32 = x1*x31
    x33 = lambda_c**4
    x34 = V_delay*V_tank*x33
    x35 = Q_external*lambda_c
    x36 = Q_external*x26
    x37 = Q_external**4
    x38 = Q_external*x23
    x39 = V_delay**4 - V_tank**4
    x40 = lambda_a**4
    x41 = V_delay*V_tank*x21*x40 + x3*x37 - x38*x39
    x42 = lambda_b**4
    x43 = V_delay*V_tank*x42
    x44 = x0*x5
    x45 = x8*x9
    x46 = x10*x37 + x10*x40*x45 - x39*x44
    x47 = x35*(-x12*x17*x5 - x14*x46 + x25*x43 + x36*x41)
    x48 = lambda_c**2
    x49 = lambda_b*x0
    x50 = lambda_a*x17
    x51 = x20*x40
    x52 = x19*x3*x51 + x21*x37 - x39*x50
    x53 = x48*(-x14*x52 - x25*x50 + x29*x43 + x41*x49)
    x54 = lambda_c**3
    x55 = x54*(x12*x42*x45 + x16*x46 - x2*x29 - x26*x52)
    x56 = x31*x34 + x32 - x47 + x53 - x55
    x57 = 1/V_delay
    x58 = Q_external*x57
    x59 = 1/V_tank
    x60 = Q_external*x59
    x61 = lambda_a + x58 + x60
    x62 = lambda_b + x61
    x63 = lambda_c + x62
    x64 = t - t0
    x65 = abs(x64)
    x66 = t/2 - t0/2 + x65/2
    x67 = N_af + N_bf
    x68 = x12*x67
    x69 = Q_external*lambda_a*lambda_b
    x70 = lambda_a*x67
    x71 = N_af*lambda_a*recoil_prob
    x72 = 2*lambda_a*x17*x26*(N_bf*lambda_c*x31 - V_delay*V_tank*lambda_a*x14*x68 - x25*x67*x69 + x30*x70 + x31*x71 + x44*x68)
    x73 = lambda_a*x4
    x74 = Q_external*x10
    x75 = N_bf*lambda_b
    x76 = -x12*x75 + x23*x6*x67 - x5*x67*x74 + x67*x73
    x77 = V_delay*V_tank*x54
    x78 = x40*x67
    x79 = lambda_a*x10
    x80 = 2*lambda_a*lambda_c*x17*(x2*x76 - x35*(x18*x70 - x21*x38*x67 + x24*x78 - x25*x75) + x48*(-x0*x22*x67 + x17*x67*x79 + x28*x78 - x29*x75) + x71*(x12*x77 + x13 + x25*x35 - x29*x48) - x76*x77)
    x81 = Q_external*(x57 + x59)
    x82 = x14*x6
    x83 = Q_external*x3 + x79
    x84 = V_delay*lambda_a
    x85 = V_tank*x3
    x86 = x84*x85
    x87 = x74 + x86
    x88 = 2*Q_external
    x89 = V_delay*x88 - V_tank*x88 + x79
    x90 = x8*x88 + x86 - x88*x9
    x91 = 2*x0
    x92 = V_delay*x91 - V_tank*x91 + x11 + x22
    x93 = V_tank*x5
    x94 = V_tank*x8
    x95 = V_delay*x9
    x96 = V_delay*x10*x93 + x7*(x21 + x94 - x95) + x8*x91 - x9*x91
    x97 = Q_external*x84
    x98 = x5*x8
    x99 = x3*x9
    x100 = V_tank*x10*x97 + x19*x91 - x20*x91 + x98*x99
    x101 = V_delay*x26
    x102 = -lambda_b*x74 + x101*x85 + x4
    x103 = x14*x8
    x104 = 2*N_af*x17*(-lambda_b*lambda_c*recoil_prob*(-x102*x49 + x102*x77 + x35*(x10*x15 + x18 - x21*x36) - x48*(x103*x99 - x21*x49 + x27)) - x1*(-x16*x83 + x26*x87 + x73 - x82) - x34*(-x16*x89 + x26*x90 + x73 - 2*x82) + x35*(x14*x96 + x18*x5 - x36*x92 - x43*x89) + x48*(-x100*x14 + x43*x90 + x49*x92 - x50*x83) - x54*(-x100*x26 + x16*x96 - x2*x87 + 2*x28*x42))
    x105 = exp(x60*x66)
    x106 = N_af*lambda_b*x0*x5
    x107 = -Q_external
    x108 = V_tank*lambda_a
    x109 = x107 + x108
    x110 = V_delay + V_tank
    x111 = x110*x5
    x112 = -V_tank*x111 + x0 + x97
    x113 = -x0*x110
    x114 = x113 + x5*x95 + x7*x9
    x115 = N_af*x0*x5
    x116 = V_tank*x14
    x117 = N_bf*V_tank
    x118 = 2*N_af + N_bf
    x119 = V_delay*x118
    x120 = x117 + x119
    x121 = x120*x7
    x122 = N_bf*x0 + x119*x93
    x123 = -x121 + x122
    x124 = N_af - N_bf
    x125 = x0*x124
    x126 = N_af*V_tank
    x127 = x119 + x126
    x128 = x121 + x125 - x127*x93
    x129 = N_bf*x17
    x130 = Q_external*x124
    x131 = x5*x9
    x132 = x118*x23
    x133 = -x127*x2 + x129 + x130*x131 + x132*x95
    x134 = lambda_a*lambda_b*lambda_c*recoil_prob
    x135 = Q_external - x108
    x136 = x0 - x131
    x137 = -V_tank*x135*x26 + lambda_b*x136 - x135*x7
    x138 = x20*x23
    x139 = -x138 + x17
    x140 = Q_external*lambda_a*lambda_c
    x141 = N_af*x17*x5
    x142 = N_af*x17
    x143 = V_delay*x5
    x144 = N_af*V_delay
    x145 = V_tank*x144
    x146 = x118*x8
    x147 = N_af*x9 + x145 + x146
    x148 = Q_external*x120*x143 - V_tank*x147*x23 + x125*x84 + x142
    x149 = V_delay*x124 + x126
    x150 = Q_external*x131*x149 - x0*x127*x84 + x127*x23*x95 - x149*x17
    x151 = N_bf*V_delay
    x152 = Q_external*V_delay*x124*x138 + x115*x20 + x146*x51 - x147*x50 + x151*x37
    x153 = 2*x19*(-N_af*x134*x8*(V_tank*x137*x54 + lambda_c*(-x116*x136 - x135*x44 + x139*x26) - x137*x69 - x48*(lambda_b*x139 - x135*x14*x9 - x136*x7)) - x106*(-x109*x15 + x109*x2 + x112*x16 + x114*x26) + x140*(x128*x43 - x135*x141 + x14*x150 + x148*x36) - x34*(x109*x115 - x116*x123 + x128*x69 + x133*x26) + x48*(-x1*x148 + x112*x141 + x133*x43 - x14*x152) - x54*(-x114*x115 + x123*x42*x95 + x150*x69 - x152*x26))
    x154 = x107 + x84
    x155 = Q_external*x108 - V_delay*x111 + x0
    x156 = x113 + x5*x94 + x7*x8
    x157 = V_delay*x14
    x158 = V_tank*x118
    x159 = x151 + x158
    x160 = x159*x7
    x161 = x122 - x160
    x162 = x144 + x158
    x163 = x125 - x143*x162 + x160
    x164 = x129 + x130*x98 + x132*x94 - x162*x2
    x165 = Q_external - x84
    x166 = x0 - x98
    x167 = lambda_b*x166 - x101*x165 - x165*x7
    x168 = x17 - x19*x23
    x169 = x118*x9
    x170 = N_af*x8 + x145 + x169
    x171 = Q_external*x159*x93 - V_delay*x170*x23 + x108*x125 + x142
    x172 = V_tank*x124
    x173 = x144 + x172
    x174 = Q_external*x173*x98 - x0*x108*x162 + x162*x23*x94 - x17*x173
    x175 = Q_external*x172*x19*x23 + x115*x19 + x117*x37 + x169*x19*x40 - x170*x50
    x176 = 2*x20*(-N_af*x134*x9*(V_delay*x167*x54 + lambda_c*(-x157*x166 - x165*x44 + x168*x26) - x167*x69 - x48*(lambda_b*x168 - x103*x165 - x166*x7)) - x106*(-x15*x154 + x154*x2 + x155*x16 + x156*x26) + x140*(x14*x174 - x141*x165 + x163*x43 + x171*x36) - x34*(x115*x154 - x157*x161 + x163*x69 + x164*x26) + x48*(-x1*x171 - x14*x175 + x141*x155 + x164*x43) - x54*(-x115*x156 + x161*x42*x94 + x174*x69 - x175*x26))
    x177 = Q_external*(-N_af*recoil_prob*x56 + V_tank*x119*x31*x33 + x118*x32 - x118*x47 + x118*x53 - x118*x55)
    x178 = delta_t - t + t0
    x179 = abs(x178)
    x180 = delta_t/2 - t/2 + t0/2 - x179/2
    x181 = exp(-x180*x60)
    X = N_e*Q*eff*rs*((lambda_c*(lambda_b*(lambda_a*(x105*x153 + (x105*x177*(x64 + x65) - x176)*exp(x58*x66))*exp(lambda_a*x66) + x104*exp(x66*x81))*exp(lambda_b*x66) + x80*exp(x61*x66))*exp(lambda_c*x66) - x72*exp(x62*x66))*exp(-x63*x66) - (lambda_c*(lambda_b*(lambda_a*(x153*x181 - (x176 + x177*x181*(x178 - x179))*exp(-x180*x58))*exp(-lambda_a*x180) + x104*exp(-x180*x81))*exp(-lambda_b*x180) + x80*exp(-x180*x61))*exp(-lambda_c*x180) - x72*exp(-x180*x62))*exp(x180*x63))/(2*Q_external*lambda_a*lambda_b*lambda_c*x56)

    return X


def tc_integral_square_wave_nodelay(rs,delta_t,recoil_prob,t0,V_tank,Q,N_bf,N_af,N_e,Q_external,eff,t, **kwargs):
    x0 = V_tank*lambda_c**3
    x1 = Q_external*lambda_a
    x2 = V_tank*lambda_a
    x3 = Q_external - x2
    x4 = -x1*x3
    x5 = lambda_b**2
    x6 = V_tank*x5
    x7 = Q_external**2
    x8 = V_tank**2
    x9 = lambda_a**2
    x10 = x8*x9
    x11 = -x10 + x7
    x12 = lambda_b*x11 - x3*x6 + x4
    x13 = Q_external*lambda_a*lambda_b
    x14 = lambda_c**2
    x15 = Q_external**3
    x16 = lambda_a**3
    x17 = V_tank**3*x16
    x18 = x15 - x17
    x19 = lambda_b**3
    x20 = x19*x8
    x21 = x7*x9
    x22 = V_tank*x19
    x23 = Q_external/V_tank
    x24 = lambda_a + x23
    x25 = lambda_b + x24
    x26 = lambda_c + x25
    x27 = t - t0
    x28 = abs(x27)
    x29 = t/2 - t0/2 + x28/2
    x30 = N_af + N_bf
    x31 = x30*x9
    x32 = -Q_external
    x33 = x2 + x32
    x34 = lambda_a*x30
    x35 = -x7
    x36 = x10 + x35
    x37 = lambda_b*x36
    x38 = x1*x33 + x33*x6 - x37
    x39 = N_af*lambda_a*recoil_prob
    x40 = 2*lambda_a*x5*x7*(N_bf*lambda_c*x38 - Q_external*x31*x33 - x2*x30*x33*x5 + x34*x37 + x38*x39)
    x41 = N_bf*lambda_b
    x42 = -V_tank*x31 + x1*x30 + x33*x41
    x43 = V_tank*x14
    x44 = 2*lambda_a*lambda_c*x7*(lambda_c*(-x16*x30*x8 + x34*x7 + x36*x41) - x1*x42 - x39*(lambda_c*x11 - x3*x43 + x4) - x42*x43)
    x45 = exp(x23*x29)
    x46 = Q_external + x2
    x47 = lambda_b*(-lambda_b*x46 + x1 + x6)
    x48 = 2*Q_external + x2
    x49 = V_tank*x1
    x50 = x10 + x49 + 2*x7
    x51 = V_tank*lambda_b + x32
    x52 = 2*N_af*x7*(lambda_b*lambda_c*recoil_prob*(Q_external*lambda_b*x51 - lambda_c*(x35 + x5*x8) + x43*x51) - lambda_c*(x21 + x22*x48 - x5*x50) - x0*(-lambda_b*x48 + x1 + 2*x6) + x1*x47 + x14*(-lambda_b*x50 + x1*x46 + 2*x20))
    x53 = N_af*Q_external*x9
    x54 = N_af*recoil_prob
    x55 = lambda_a*lambda_b
    x56 = lambda_a - lambda_b
    x57 = 2*N_af + N_bf
    x58 = x2*x57
    x59 = N_bf*Q_external - x58
    x60 = N_af - N_bf
    x61 = Q_external*x60 + x58
    x62 = N_af*x7
    x63 = x10*x57 + x49*x60 + x62
    x64 = 2*x8*(lambda_a*lambda_b*lambda_c*x54*x8*(-lambda_c*(-x5 + x9) + x14*x56 + x55*x56) + lambda_a*lambda_c*(x22*x61 - x5*x63 + x62*x9) + x0*(-x5*x59 + x53 - x55*x61) - x14*(-x22*x59 + x46*x53 - x55*x63) - x47*x53)
    x65 = x13*x38
    x66 = x0*x38
    x67 = -x15 + x17
    x68 = x14*(-lambda_b*x67 + x1*x36 + x20*x33)
    x69 = lambda_c*(x21*x33 + x22*x36 - x5*x67)
    x70 = Q_external*(x54*(-x65 + x66 - x68 + x69) + x57*x65 - x57*x66 + x57*x68 - x57*x69)
    x71 = delta_t - t + t0
    x72 = abs(x71)
    x73 = delta_t/2 - t/2 + t0/2 - x72/2
    x74 = exp(-x23*x73)
    X = -N_e*Q*eff*rs*((lambda_c*(lambda_b*(lambda_a*(x64 + x70*x74*(x71 - x72))*exp(-lambda_a*x73) + x52*x74)*exp(-lambda_b*x73) + x44*exp(-x24*x73))*exp(-lambda_c*x73) + x40*exp(-x25*x73))*exp(x26*x73) - (lambda_c*(lambda_b*(lambda_a*(-x45*x70*(x27 + x28) + x64)*exp(lambda_a*x29) + x45*x52)*exp(lambda_b*x29) + x44*exp(x24*x29))*exp(lambda_c*x29) + x40*exp(x25*x29))*exp(-x26*x29))/(2*Q_external*lambda_a*lambda_b*lambda_c*(lambda_c*(-x11*x22 + x18*x5 - x21*x3) + x0*x12 - x12*x13 - x14*(lambda_b*x18 - x1*x11 - x20*x3)))

    return X


def tc_integral_square_wave_two_delay(V_delay,delta_t,V_tank,Q,N_bf,N_af,rs,recoil_prob,t0,t,N_e,Q_external,eff, **kwargs):
    x0 = Q_external**3
    x1 = lambda_a*lambda_b*x0
    x2 = lambda_a*x0
    x3 = V_delay**2
    x4 = V_tank**2
    x5 = 2*V_delay
    x6 = V_tank*x5
    x7 = x3 + x4 - x6
    x8 = -x0*x7
    x9 = V_tank*x3
    x10 = lambda_a**3
    x11 = x10*x7
    x12 = Q_external**2
    x13 = lambda_a*x12
    x14 = V_tank**3
    x15 = V_delay**3
    x16 = 2*x15
    x17 = 3*V_tank
    x18 = x17*x3
    x19 = x14 + x16 - x18
    x20 = lambda_a**2
    x21 = Q_external*V_delay*x20
    x22 = 2*x14
    x23 = 3*V_delay
    x24 = x23*x4
    x25 = x15 + x22 - x24
    x26 = x11*x9 + x13*x19 - x21*x25 + x8
    x27 = x2*x26
    x28 = lambda_b**4
    x29 = V_tank*x28*x3
    x30 = x26*x29
    x31 = lambda_b*x12
    x32 = Q_external**4
    x33 = x32*x7
    x34 = -x33
    x35 = x12*x20
    x36 = V_delay**4
    x37 = 3*x36
    x38 = V_tank**4
    x39 = 4*V_tank
    x40 = x15*x39
    x41 = x38 - x40
    x42 = x37 + x41
    x43 = x35*x42
    x44 = Q_external*x10
    x45 = 2*x3
    x46 = x4*x45
    x47 = x36 + x38 - x46
    x48 = 2*V_delay*x47
    x49 = x44*x48
    x50 = lambda_a**4
    x51 = V_tank*x19*x3
    x52 = x50*x51
    x53 = x34 + x43 - x49 + x52
    x54 = lambda_b**2
    x55 = Q_external*x54
    x56 = -x19*x32
    x57 = V_tank*x15*x50
    x58 = Q_external*x10*x3
    x59 = 3*x38
    x60 = 4*V_delay
    x61 = x14*x60
    x62 = x36 - x61
    x63 = x59 + x62
    x64 = x2*x42 + x25*x57 + x56 - x58*x63
    x65 = lambda_b**3
    x66 = V_delay*x65
    x67 = -x25*x32
    x68 = 2*lambda_a*x0
    x69 = x15*x4*x7
    x70 = V_delay*x12*x20
    x71 = x47*x68 + x50*x69 - x63*x70 + x67
    x72 = x66*x71
    x73 = x27 + x30 - x31*x53 + x55*x64 - x72
    x74 = x1*x73
    x75 = lambda_c**5
    x76 = V_tank*x3*x75
    x77 = lambda_c**2
    x78 = Q_external*x77
    x79 = lambda_a*x32
    x80 = Q_external*x65
    x81 = Q_external**5
    x82 = V_delay**5
    x83 = V_tank**5
    x84 = 5*V_tank
    x85 = x36*x84
    x86 = x83 - x85
    x87 = 4*x82 + x86
    x88 = lambda_a**5
    x89 = V_tank*x36*x88
    x90 = 5*V_delay
    x91 = -x38*x90 + x82 + 4*x83
    x92 = x15*x50*x91
    x93 = -Q_external*x92 - x42*x81 + x63*x89 + x79*x87
    x94 = lambda_b*x0
    x95 = x7*x81
    x96 = x10*x12
    x97 = x87*x96
    x98 = V_tank*x3*x88
    x99 = x42*x98
    x100 = Q_external*V_delay*x50
    x101 = 2*x83
    x102 = 5*x4
    x103 = x101 - x102*x15 + 3*x82
    x104 = x100*x103
    x105 = -x104 - x95 + x97 + x99
    x106 = lambda_b**5
    x107 = V_tank*x106*x3
    x108 = V_delay*x28
    x109 = 2*x36
    x110 = 2*x38
    x111 = x109 + x110 - 4*x3*x4
    x112 = x36*x88
    x113 = x12*x3
    x114 = -x10*x113*x91 + x103*x79 - x111*x81 + x112*x25*x4
    x115 = x78*(-x105*x94 + x107*x64 - x108*x114 + x53*x79 + x80*x93)
    x116 = lambda_c*x12
    x117 = x20*x32
    x118 = x117*x26
    x119 = x12*x54
    x120 = x19*x81
    x121 = x0*x20
    x122 = x121*x87
    x123 = 2*V_tank
    x124 = x123*x15
    x125 = x124*x47*x88
    x126 = Q_external*x3*x50
    x127 = 5*x14
    x128 = 2*x82
    x129 = 3*x83
    x130 = x128 + x129
    x131 = -x127*x3 + x130
    x132 = x126*x131
    x133 = -x120 + x122 + x125 - x132
    x134 = x25*x81
    x135 = x15*x4
    x136 = x19*x88
    x137 = x135*x136
    x138 = x103*x121
    x139 = V_delay*x10*x12
    x140 = x131*x139
    x141 = -x134 + x137 + x138 - x140
    x142 = x116*(-x105*x119 + x107*x53 - x108*x141 + x118 + x133*x80)
    x143 = lambda_c**3
    x144 = V_tank*x106*x15
    x145 = x28*x3
    x146 = V_delay*x0*x20
    x147 = x112*x14*x7 + x131*x79 - x146*x91 - x63*x81
    x148 = x143*(x119*x93 - x133*x94 + x144*x71 - x145*x147 + x64*x79)
    x149 = lambda_c**4
    x150 = V_delay*x149
    x151 = x106*x135*x26 + x114*x55 - x141*x31 - x147*x66 + x2*x71
    x152 = -x115 + x142 + x148 - x150*x151 + x73*x76 - x74
    x153 = 1/V_delay
    x154 = Q_external*x153
    x155 = 1/V_tank
    x156 = Q_external*x155
    x157 = lambda_a + x154 + x156
    x158 = lambda_b + x157
    x159 = lambda_c + x158
    x160 = t - t0
    x161 = abs(x160)
    x162 = t/2 - t0/2 + x161/2
    x163 = N_af + N_bf
    x164 = lambda_a*x163
    x165 = lambda_a*lambda_b*x12
    x166 = Q_external*lambda_a
    x167 = N_af*lambda_a*recoil_prob
    x168 = 2*lambda_a*x32*x54*(N_bf*lambda_c*x73 - x121*x163*x26 + x163*x165*x53 - x163*x166*x54*x64 - x164*x30 + x164*x72 + x167*x73)
    x169 = x2*x7
    x170 = V_tank*x3*x7
    x171 = V_delay*x25
    x172 = x163*x19
    x173 = N_bf*lambda_b
    x174 = Q_external*x10*x163*x171 + x163*x169 - x163*x170*x50 - x172*x35 + x173*x26
    x175 = V_tank*x149*x3
    x176 = x163*x32*x7
    x177 = Q_external*x163*x50
    x178 = x163*x42
    x179 = V_delay*x143
    x180 = x163*x32
    x181 = lambda_a*x25
    x182 = x163*x88
    x183 = x163*x20
    x184 = 2*x0*x47
    x185 = V_delay*x12*x63
    x186 = lambda_a*x19
    x187 = x3*x63
    x188 = V_tank*x15*x25
    x189 = 2*lambda_a*x32*x77*(x116*(lambda_a*x176 - x172*x98 + x173*x53 + x177*x48 - x178*x96) - x167*(-x116*x53 + x175*x26 - x179*x71 + x27 + x64*x78) - x174*x175 - x174*x2 + x179*(x10*x163*x185 + x173*x71 + x180*x181 - x182*x69 - x183*x184) - x78*(-x121*x178 + x173*x64 + x177*x187 + x180*x186 - x182*x188))
    x190 = Q_external*(x153 + x155)
    x191 = Q_external*x7 + x186
    x192 = V_delay*V_tank
    x193 = lambda_a*x192*x7
    x194 = Q_external*x25
    x195 = x193 + x194
    x196 = V_delay*x181
    x197 = Q_external*x19 + x196
    x198 = 2*V_tank*x3
    x199 = x28*x7
    x200 = V_tank*x60
    x201 = 2*x4
    x202 = -Q_external*x200 + Q_external*x201 + Q_external*x45 + x186
    x203 = Q_external*x16
    x204 = 4*x14
    x205 = 6*V_delay*x4
    x206 = Q_external*x204 - Q_external*x205 + x193 + x203
    x207 = 4*x15
    x208 = Q_external*x207
    x209 = 6*V_tank*x3
    x210 = -Q_external*x209 + Q_external*x22 + x196 + x208
    x211 = x12*x45
    x212 = x20*x42
    x213 = -x12*x200 + x12*x201 + x166*x19 + x211 + x212
    x214 = 4*x36
    x215 = x14*x5
    x216 = 3*x3
    x217 = -x216*x4
    x218 = x214 + x215 + x217 + x41
    x219 = x12*x207 - x12*x209 + x12*x22 + x166*x218 + x20*x48
    x220 = V_delay*V_tank*x20
    x221 = V_delay*x14
    x222 = V_tank*x15
    x223 = 6*x3
    x224 = x109 + x110 + x221 + x222 - x223*x4
    x225 = x12*x16 + x12*x204 - x12*x205 + x166*x224 + x19*x220
    x226 = 2*x15*x4
    x227 = 6*x12
    x228 = 8*x14
    x229 = V_delay*x12
    x230 = x20*x3
    x231 = V_delay*V_tank*x166*x25 + x109*x12 + x227*x38 - x228*x229 + x230*x4*x7
    x232 = 4*x38
    x233 = 8*x4
    x234 = x20*x25
    x235 = V_delay*x166*(x124 + x217 + x232 + x62) - x113*x233 + x12*x214 + x12*x232 + x234*x9
    x236 = x166*x5
    x237 = x110*x12 - 8*x12*x222 + x227*x36 + x230*x63 + x236*x47
    x238 = V_delay*x54
    x239 = x170*x65 + x19*x31 - x194*x238 + x8
    x240 = 2*N_af*lambda_b*lambda_c*x32*(lambda_b*lambda_c*recoil_prob*(-x116*(x119*x42 + x28*x51 + x34 - x48*x80) + x175*x239 - x179*(lambda_b*x184 + x135*x199 - x185*x54 + x67) + x239*x94 + x78*(-x187*x80 + x188*x28 + x42*x94 + x56)) + x1*(x169 + x170*x28 - x191*x31 - x195*x66 + x197*x55) - x116*(x107*x202 - x108*x225 - x119*x213 + x20*x33 + x219*x80) - x143*(x119*x237 + x144*x206 - x145*x231 + x197*x79 - x219*x94) + x150*(x106*x226*x7 + x195*x2 - x225*x31 - x231*x66 + x235*x55) - x76*(x169 + x198*x199 - x202*x31 - x206*x66 + x210*x55) + x78*(x107*x210 - x108*x235 + x191*x79 - x213*x94 + x237*x80))
    x241 = lambda_a*lambda_b*lambda_c*x3
    x242 = exp(x156*x162)
    x243 = x160 + x161
    x244 = N_af*lambda_b*x0*x20
    x245 = V_delay - V_tank
    x246 = x12*x245
    x247 = -x4
    x248 = x247 + x3
    x249 = -x166*x248 + x220*x245 + x246
    x250 = x0*x245
    x251 = V_delay*lambda_a*x12
    x252 = V_delay*V_tank*x10
    x253 = -x192 + x247 + x45
    x254 = Q_external*x20
    x255 = -x14
    x256 = V_delay*x4
    x257 = x245*x251 + x250 + x252*x253 - x254*(x16 + x255 - x256)
    x258 = Q_external*V_delay*x20*x4
    x259 = x10*x3*x4
    x260 = x245*x259
    x261 = -x201 + x3
    x262 = x192 + x261
    x263 = x15 - x22
    x264 = x0*x262 - x13*(x263 + x9) + x245*x258 + x260
    x265 = x15 + x255
    x266 = -x13*x265
    x267 = V_tank*x10*x3
    x268 = x0*x253 - x21*x265 + x262*x267 + x266
    x269 = N_af*x0*x20
    x270 = V_delay*V_tank*x28
    x271 = N_bf*x0
    x272 = 2*N_af
    x273 = N_bf + x272
    x274 = x273*x9
    x275 = x10*x274
    x276 = -x192*x273
    x277 = -N_bf*x4 + x163*x45 + x276
    x278 = x13*x277
    x279 = N_bf*V_delay
    x280 = V_tank*x279
    x281 = x273*x3
    x282 = -x21*(-x163*x201 + x280 + x281) - x245*x271 + x245*x275 + x278
    x283 = -N_bf
    x284 = N_af + x283
    x285 = x0*x284
    x286 = -N_af*x4
    x287 = 3*N_af
    x288 = N_bf + x287
    x289 = x276 + x286 + x288*x3
    x290 = -N_af*x14
    x291 = N_bf*x9
    x292 = x15*x288
    x293 = 2*V_delay*x4
    x294 = x245*x285 + x252*x289 - x254*(-x163*x293 + x290 + x291 + x292) + x278
    x295 = N_bf*x32
    x296 = x12*x20*x284
    x297 = x2*x289
    x298 = Q_external*V_delay*x10
    x299 = x15*x273
    x300 = V_tank*x3*x50
    x301 = N_af*V_delay
    x302 = V_tank*x301
    x303 = x281 - x288*x4 + x302
    x304 = -x245*x295 - x265*x296 + x297 - x298*(-x163*x22 + x291 + x299) + x300*x303
    x305 = x245*x4
    x306 = x15*x273*x50
    x307 = Q_external*x10*x284*x3
    x308 = N_af*x3
    x309 = V_tank*x308
    x310 = x299 + x309
    x311 = -x256*x288
    x312 = x2*(-N_bf*x14 + x16*x163 + x309 + x311)
    x313 = -x248*x295 + x305*x306 + x305*x307 + x312 - x70*(-x14*x288 + x310)
    x314 = lambda_a*lambda_c*x12
    x315 = N_af*x20*x32
    x316 = N_af*x32
    x317 = V_delay*lambda_a*x0*x284
    x318 = V_delay*V_tank*x50
    x319 = x301*x4
    x320 = 4*N_af
    x321 = N_bf + x320
    x322 = x15*x321 - x274 + x290 - x319
    x323 = N_af*x38
    x324 = -x323
    x325 = N_bf*x222
    x326 = x324 + x325
    x327 = x14*x301
    x328 = x245*x316 + x245*x317 + x277*x70 + x318*x322 - x44*(-x163*x46 + x321*x36 + x326 - x327)
    x329 = x272 + x283
    x330 = -x192*x284 + x286 + x3*x329
    x331 = x288*x36
    x332 = x14*x272
    x333 = x272*x9
    x334 = x292 + x311 - x332 + x333
    x335 = V_delay*x297 - x298*(-x163*x215 + x326 + x331) + x300*x334 + x32*x330 - x35*(-x221*x284 + x324 + x329*x36)
    x336 = x284*x3
    x337 = x302 - x329*x4 + x336
    x338 = x3*x4*x50
    x339 = Q_external*V_delay*x10*x4
    x340 = x272*x38
    x341 = x222*x272
    x342 = x221*x288
    x343 = x289*x338 + x312 + x32*x337 + x330*x339 - x35*(x331 - x340 + x341 - x342)
    x344 = x106*x3*x4
    x345 = N_bf*x81
    x346 = x14*x273*x36*x88
    x347 = Q_external*x14*x15*x284*x50
    x348 = N_af*x222
    x349 = x273*x36
    x350 = x348 + x349
    x351 = x308*x4
    x352 = N_bf*x38
    x353 = N_af*x10*x14*x246*x3 - x146*(-x321*x38 + x350 + x351) + x245*x346 + x245*x347 - x265*x345 + x79*(x109*x163 - x221*x321 + x348 + x351 - x352)
    x354 = x15*x4*x88
    x355 = x288*x38
    x356 = x284*x36
    x357 = Q_external*x3*x4*x50
    x358 = -x121*(-x329*x38 + x348 + x356) - x139*(x350 - x355) - x248*x345 + x303*x354 + x334*x79 + x337*x357
    x359 = N_bf*V_delay*x81
    x360 = x36 - x38
    x361 = V_delay*x10*x12*x284
    x362 = V_tank*x15*x88
    x363 = -x126*(-x110*x163 + x325 + x349) - x245*x359 - x269*x360 + x322*x79 - x360*x361 + x362*(-x14*x321 + x310 + x319)
    x364 = N_af*lambda_a*lambda_b*lambda_c*recoil_prob*x3
    x365 = V_delay*V_tank*x65
    x366 = Q_external*lambda_b
    x367 = x248*x252 + x250 - x254*x265
    x368 = x0*x248 + x260 + x266
    x369 = -x13*x249 + x249*x365 + x366*x367 - x368*x54
    x370 = V_delay*V_tank*x149
    x371 = Q_external*lambda_c
    x372 = x245*x32 + x265*x318 - x360*x44
    x373 = x248*x32 + x248*x338 - x35*x360
    x374 = x14*x15*x50
    x375 = -x2*x360 + x245*x374 + x265*x32
    x376 = x28*x3*x4
    x377 = Q_external*(-x143*(-x1*x335 + x107*x313 - x108*x353 + x119*x363 + x268*x315) + x150*(-x165*x343 + x264*x269 + x282*x344 - x353*x65 + x358*x55) + x244*(x2*x249 + x249*x29 - x257*x31 - x264*x66 + x268*x55) - x314*(x107*x294 - x108*x343 - x119*x328 + x249*x315 + x335*x80) + x364*(-x143*(-x13*x368 + x249*x376 + x366*x373 - x375*x54) + x165*x369 + x369*x370 - x371*(-x121*x249 + x270*x367 + x372*x55 - x373*x65) + x77*(-x2*x367 + x270*x368 + x31*x372 - x375*x65)) - x76*(-x165*x294 + x249*x269 + x270*x282 + x304*x55 - x313*x65) + x78*(-x1*x328 + x107*x304 - x108*x358 + x257*x315 + x363*x80))
    x378 = x23 - x39
    x379 = 2*Q_external*lambda_a
    x380 = -x17 + x5
    x381 = x12*x378 + x220*x380 - x261*x379
    x382 = x60 - x84
    x383 = 3*x4
    x384 = -x383
    x385 = -x204
    x386 = x0*x378 + x251*x382 + x252*(-x200 + 4*x3 + x384) - x254*(x207 + x385 - x4*x90)
    x387 = V_delay - x123
    x388 = x259*x380
    x389 = x0*(x216 - x233 + x6) - x13*(x16 - x228 + x9) + x258*x387 + x388
    x390 = x15 + x385
    x391 = -x127 + x16
    x392 = V_tank*x90
    x393 = 4*x4
    x394 = x0*(x223 - x392 - x393) - x13*x390 - x21*x391 + x267*(x192 - 6*x4 + x45)
    x395 = 3*N_bf
    x396 = x395*x4
    x397 = -x200*x273
    x398 = 2*N_bf
    x399 = x287 + x398
    x400 = x273*x45
    x401 = x320 + x395
    x402 = x13*(-x396 + x397 + x399*x45) - x21*(-x201*x401 + x280 + x400) - x271*x380 + x275*x380
    x403 = 4*N_bf
    x404 = x4*x403
    x405 = -x273*x392
    x406 = 7*N_af + x395
    x407 = -x287*x4 + x3*x406 + x397
    x408 = x14*x320
    x409 = -x408
    x410 = x15*x406
    x411 = 5*N_af
    x412 = x403 + x411
    x413 = x13*(x401*x45 - x404 + x405) + x252*x407 - x254*(-x293*x412 + x398*x9 + x409 + x410) + x285*x378
    x414 = x320*x4
    x415 = -x414
    x416 = x398 + x411
    x417 = -x201*x416 + x302 + x400
    x418 = x16*x273
    x419 = x2*(x405 + x415 + x416*x45) - x295*x378 - x296*x390 - x298*(-x22*x412 + x291 + x418) + x300*x417
    x420 = x32*x398
    x421 = 5*N_bf
    x422 = 13*N_af + x421
    x423 = x309 + x418
    x424 = x14*x403
    x425 = -x256*x422 + x333
    x426 = x2*(x16*x399 - x424 + x425) - x261*x420 + x306*x380*x4 + x307*x387*x4 - x70*(-x14*x422 + x423)
    x427 = x4*x421
    x428 = 6*V_tank
    x429 = V_delay*x273
    x430 = -x428*x429
    x431 = x412*x45
    x432 = V_delay*x320
    x433 = x320*x38
    x434 = -x433
    x435 = 6*N_af
    x436 = x421 + x435
    x437 = x316*x378 + x317*x382 + x318*(-x14*x287 + x16*x416 - x281*x84 - x4*x432) - x44*(x109*x416 - x221*x411 + x222*x395 + x434 - x436*x46) + x70*(-x427 + x430 + x431)
    x438 = x4*x411
    x439 = x3*x422
    x440 = x38*x411
    x441 = x36*x406
    x442 = V_delay*x2*(x430 - x438 + x439) - x298*(-x215*x436 + x222*x398 - x440 + x441) + x300*(-x14*x435 + x410 + x425) + x32*(-x284*x392 + x415 + x45*(x287 - x398)) - x35*(x109*x284 - x14*x284*x90 + x434)
    x443 = x192*x272
    x444 = x216*x284
    x445 = 8*N_af
    x446 = -x421 + x445
    x447 = x272*x4
    x448 = V_tank*x284
    x449 = x14*x421
    x450 = x395 + x445
    x451 = x2*(x16*x401 + x287*x9 - x293*x450 - x449) + x32*(-x4*x446 + x443 + x444) + x338*x407 + x339*(-x23*x448 + x284*x45 - x447) - x35*(-x215*x450 + x341 - x38*x445 + x441)
    x452 = x109*x273
    x453 = x348 + x452
    x454 = x38*x421
    x455 = x109*x399
    x456 = N_af*x3*x38*x96 + x146*(-6*x355 + x453) + x345*x391 - x346*x380 - x347*x387 - x79*(x341 - 6*x342 + x351 - x454 + x455)
    x457 = -x102 + x216
    x458 = 2*lambda_a*x32
    x459 = -x121*(x356 - x38*x446) - x139*(-x110*x450 + x453) - x345*x457 + x354*x417 + x357*(x336 - x4*(x320 - x395)) + x458*(x15*x416 - x256*x450 + x333 + x409)
    x460 = 14*N_af + x421
    x461 = x325 + x452
    x462 = x121*x433 - x126*(-x110*x436 + x461) - x359*x382 - x361*(x36 - 5*x38) + x362*(-x14*x460 + x423) + x79*(x15*x460 - x209*x273 - x256*x411 + x409)
    x463 = -x428 + x90
    x464 = x384 + x45
    x465 = x12*x463 + x220*x382 - x379*x464
    x466 = x12*x382 - x166*x457 + x220*x378
    x467 = -6*x14 + 3*x15
    x468 = x0*x463 + x252*x457 - x254*x467
    x469 = 2*x0
    x470 = -x13*x467 + x259*x378 + x464*x469
    x471 = x0*x382 + x10*x261*x6 - x254*x391
    x472 = x0*x457 - x13*x391 + x388
    x473 = x318*x391 + x32*x463 - x44*(x109 - 6*x38)
    x474 = x36 - x59
    x475 = x261*x338 + x32*x464 - x35*x474
    x476 = 3*x32
    x477 = x263*x476 + x374*x380 - x474*x68
    x478 = 2*Q_external*lambda_b
    x479 = x5*(-x143*(-x1*x442 + x107*x426 + x108*x456 + x119*x462 + x315*x394) + x150*(-x165*x451 + x269*x389 + x344*x402 + x456*x65 + x459*x55) + x244*(x2*x381 + x29*x381 - x31*x386 - x389*x66 + x394*x55) - x314*(x107*x413 - x108*x451 - x119*x437 + x315*x381 + x442*x80) + x364*(-x143*(-x13*x470 + x376*x381 + x475*x478 - x477*x54) + x165*(-x13*x465 + x365*x466 + x366*x468 - x470*x54) + x370*(-x13*x466 + x365*x381 + x366*x471 - x472*x54) - x371*(-x121*x465 + x270*x471 + x473*x55 - 2*x475*x65) + x77*(-x2*x468 + x270*x472 + x31*x473 - x477*x65)) - x76*(-x165*x413 + x269*x381 + x270*x402 + x419*x55 - x426*x65) + x78*(-x1*x437 + x107*x419 - x108*x459 + x315*x386 + x462*x80))
    x480 = x12 + x230 - x236
    x481 = x28*x480
    x482 = V_tank + x5
    x483 = x10*x3
    x484 = V_tank*x13 + x0 - x21*(x123 + x23) + x482*x483
    x485 = V_delay + x123
    x486 = x17 + x5
    x487 = x0*x485 + x10*x222 + x15*x254 - x251*x486
    x488 = x10*x15
    x489 = -x0*x482 + x13*x216 + x18*x254 - x485*x488
    x490 = V_delay*x398
    x491 = V_tank*x273
    x492 = x490 + x491
    x493 = x13*x492
    x494 = x123*x273
    x495 = -x21*(x279 + x494) - x271 + x275 + x493
    x496 = V_delay*x272
    x497 = x491 + x496
    x498 = V_delay*x288
    x499 = -x21*(x494 + x498) + x285 + x483*x497 + x493
    x500 = Q_external*x284
    x501 = N_af + x395
    x502 = V_delay*x501
    x503 = x2*(x494 + x502)
    x504 = x17*x273
    x505 = x273*x57 - x420 + x488*x500 + x503 - x70*(x496 + x504)
    x506 = x2*x497
    x507 = x301 + x494
    x508 = -x15*x50*x507 + x295 + x35*x444 - x506 + x58*(x490 + x504)
    x509 = x287*x3
    x510 = x273*x4
    x511 = x443 + x509 + x510
    x512 = x3*x320
    x513 = V_tank*x35*x492 + x2*x448 - x298*(x192*x288 + x201*x273 + x512) + x3*x50*x511 + x316
    x514 = x448 + x496
    x515 = x308 + x443
    x516 = x510 + x515
    x517 = -Q_external*x275*x486 + V_tank*x506 - x12*x230*(x17*x284 + x432) + x16*x50*x516 + x32*x514
    x518 = x123*x284 + x301
    x519 = Q_external*x488*x514 - 3*V_delay*x35*x516 + V_tank*x503 + x32*x518 + x497*x57
    x520 = V_tank*x81
    x521 = V_tank*x36
    x522 = N_af + x398
    x523 = x273*x383
    x524 = x272*x3
    x525 = N_af*x36*x96 + Q_external*x284*x50*x521 - x146*(x192*x287 + x273*x393 + x524) + x273*x36*x4*x88 - x395*x520 + x79*(x308 + x522*x6 + x523)
    x526 = x36*x50
    x527 = V_delay*x287
    x528 = x273*x39
    x529 = -Q_external*x518*x526 + V_tank*x3*x96*(x527 + x528) + x0*x230*(x284*x39 + x527) + x398*x520 - x458*x516 - x507*x89
    x530 = V_delay*x395
    x531 = 4*N_af*x121*x15 + N_bf*x520 + Q_external*x57*(x528 + x530) + 4*V_tank*x15*x284*x96 - x112*(x515 + x523) - x511*x79
    x532 = x3*x65
    x533 = x0 + x10*x16 - x216*x254
    x534 = -x13*x23 + x469 + x488
    x535 = -x13*x480 - x238*x534 + x366*x533 + x480*x532
    x536 = -x20*x211 + x32 + x526
    x537 = -x2*x60 + x476 + x526
    x538 = -x10*x208 + x32 + x37*x50
    x539 = 2*lambda_a*lambda_b*lambda_c*x38*(-N_af*lambda_a*lambda_b*lambda_c*recoil_prob*x4*(x149*x3*x535 + x165*x535 - x179*(-x13*x534 + x15*x481 - x238*x537 + x478*x536) - x371*(-x121*x480 + x145*x533 - x5*x536*x65 + x538*x55) + x77*(x15*x28*x534 - x2*x533 + x31*x538 - x532*x537)) - x143*(x1*x517 + x119*x531 - x144*x505 + x145*x525 + x315*x489) + x150*(-x144*x495 + x165*x519 - x269*x487 + x525*x66 + x529*x55) + x244*(-x2*x480 + x31*x484 - x481*x9 + x487*x66 + x489*x55) + x314*(x107*x499 - x108*x519 - x119*x513 + x315*x480 + x517*x80) - x76*(-x145*x495 + x165*x499 - x269*x480 + x505*x66 + x508*x55) + x78*(x1*x513 + x107*x508 - x108*x529 - x315*x484 + x531*x80))
    x540 = Q_external*lambda_a*lambda_b*lambda_c*(N_af*recoil_prob*x152 + x115*x273 - x142*x273 - x148*x273 + x149*x151*x429 + x273*x74 - x274*x73*x75)
    x541 = Q_external**7
    x542 = x26*x54*x541
    x543 = lambda_b**6
    x544 = Q_external**6
    x545 = x53*x544
    x546 = x28*x64*x81
    x547 = x106*x20*x32*x71
    x548 = x186*x271
    x549 = x19*x50
    x550 = x272*x36
    x551 = x14*x279
    x552 = x14*x490
    x553 = -x3*x396
    x554 = x284*x33 + x298*(-x273*x46 + x325 + x340 + x550 + x551) - x309*x549 - x35*(-x222*x320 + x323 + x331 + x552 + x553) + x548
    x555 = x186*x316
    x556 = x212*x285
    x557 = x38*x490
    x558 = -x15*x404
    x559 = x128*x273
    x560 = x398*x521
    x561 = -x14*x512
    x562 = x38*x498
    x563 = x272*x83
    x564 = x395 + x411
    x565 = -x100*(-x135*x564 + x320*x82 + x560 + x561 + x562 + x563) + x218*x309*x88 - x284*x95 - x555 + x556 + x96*(N_af*x83 - x411*x521 + x557 + x558 + x559)
    x566 = Q_external*x135*x284*x50*x7
    x567 = x38*x5
    x568 = x79*(x327 + x348 + x36*x398 + x38*x398 - x46*x522)
    x569 = 8*N_af*x4
    x570 = x272*x521
    x571 = -x3*x424 + x38*x502 + x570
    x572 = -N_af*V_delay*x96*(x130 - x228*x3 + x521 + x567) + N_af*x136*x15*x4 + x121*(-x15*x569 + x288*x82 + x563 + x571) - x134*x284 + x566 - x568
    x573 = x14*x496
    x574 = -x4*x509
    x575 = x284*x3*x63*x96 + x79*(-x222*x403 + x352 + x36*x501 + x573 + x574)
    x576 = N_bf*x521
    x577 = x272*x82
    x578 = x14*x3
    x579 = x120*x284 + x126*(x287*x83 + x557 - x564*x578 + x576 + x577) - x224*x348*x88 - x269*(-x207*x4 + x567 + 6*x82 + x86) + x575
    x580 = lambda_c**6
    x581 = x20*x7
    x582 = x541*x581
    x583 = x10*x19*x544
    x584 = V_delay*x163*x50
    x585 = 4*N_af*V_delay*V_tank
    x586 = x110*x273
    x587 = x273*x38 - x273*x40
    x588 = -x274*x549 + x298*(-x401*x46 + x461 + x551 + x586) + x32*x447 + x32*x524 - x32*x585 - x35*(x455 + x552 + x553 + x587) + x548
    x589 = x15*x81
    x590 = 6*N_af*x81
    x591 = x129*x273 + x559
    x592 = N_af*x521
    x593 = x38*x496
    x594 = -x14*x439 + x591 + x592 + x593
    x595 = x101*x273
    x596 = -x135*x422
    x597 = -x121*(x128*x399 + x571 + x595 + x596) - x136*x15*x273*x4 + x139*x594 - x256*x590 + x272*x589 + x408*x81 - x566 + x568
    x598 = x273*x83
    x599 = -x273*x85 + x598
    x600 = x441 + x573 + x574 + x587
    x601 = x406*x82 + x595
    x602 = x100*(-x226*x412 + x560 + x561 + x562 + x601) + x447*x81 + x524*x81 + x555 - x556 - x585*x81 - x600*x98 - x96*(x128*x401 + x557 + x558 + x599)
    x603 = -x15*x414
    x604 = x128*x416 + x593 + x599 + x603
    x605 = x327 - x416*x46 + x453 + x586
    x606 = -x121*x604 + x126*(-x14*x431 + x557 + x576 + x591) + x320*x589 + x332*x81 - x362*x605 + x575 - x590*x9
    x607 = x12*x77
    x608 = Q_external**8
    x609 = lambda_a**6
    x610 = x12*x50
    x611 = V_tank**6
    x612 = x273*x611
    x613 = x428*x82
    x614 = -x273*x613 + x612
    x615 = V_delay**6
    x616 = 2*x615
    x617 = V_tank*x3*x609
    x618 = Q_external*x88
    x619 = -x14*x15*x411
    x620 = 2*x611
    x621 = x273*x620
    x622 = x416*x616
    x623 = V_tank*x82
    x624 = 2*x36*x4
    x625 = N_af*x186*x81 + V_delay*x618*(x395*x623 - x436*x624 + x498*x83 + x619 + x621 + x622) - x10*x285*x87 + x447*x544 + x524*x544 - x544*x585 - x604*x617 - x610*(-x36*x427 + x412*x616 + x490*x83 + x614)
    x626 = x15*x544
    x627 = 6*N_af*x544
    x628 = x20*x284*x32
    x629 = N_af*lambda_a*x81
    x630 = x0*x10
    x631 = -x36*x438 + x422*x615 + x496*x83 + x614
    x632 = V_tank*x15*x609
    x633 = x38*x432
    x634 = -x3*x440
    x635 = 3*x612
    x636 = x406*x615
    x637 = x398*x82
    x638 = x14*x16
    x639 = x131*x284*x3*x610 + x218*x629 + x3*x618*(V_tank*x637 - x436*x638 + x5*x598 + x634 + x635 + x636) + x320*x626 + x332*x544 - x627*x9 - x628*x87 - x630*x631 - x632*(x561 + x570 + x596 + x601 + x633)
    x640 = x15*x4*x609
    x641 = V_tank*x577 - x450*x638
    x642 = x287*x623 - x450*x624
    x643 = x103*x628 + x137*x500 - x224*x629 - x229*x50*(V_delay*x435*x83 + x634 + x635 + x636 + x641) + x256*x627 - x272*x626 - x408*x544 + x600*x640 + x630*(-x15*x449 + x401*x616 + x502*x83 + x621 + x642)
    x644 = x234*x608
    x645 = x544*x63
    x646 = x32*x4
    x647 = x15*x609*x646*x7
    x648 = x15*x4*x543
    x649 = x38*x544
    x650 = 8*N_af*x544
    x651 = x284*x36*x88
    x652 = x14*x19
    x653 = lambda_a*x81
    x654 = x287 + x421
    x655 = x273*x616 + 4*x612
    x656 = 2*x3*x38
    x657 = N_af*x623 - x450*x656 + x527*x83 + x655
    x658 = -Q_external*x14*x651*x7 + V_delay*x630*x657 - x117*(-x3*x454 + x399*x616 + x5*x522*x83 + x635 + x641) - x221*x650 - x273*x36*x609*x652 + x435*x649 + x544*x550 + x653*(x395*x83 - x578*x654 + x592 + x593 + x637)
    x659 = x36*x544
    x660 = x3*x544
    x661 = x12*x3*x50
    x662 = x36*x4*x609
    x663 = -Q_external*x25*x4*x651 + x0*x284*x483*x91 - x117*(x432*x83 + x619 + x621 + x622 + x642) + x320*x659 + x433*x544 - x569*x660 - x605*x662 + x653*(-x135*x654 + x398*x83 + x501*x82 + x561 + x570 + x633) + x657*x661
    x664 = x10*x42*x608
    x665 = Q_external**9
    x666 = x19*x20*x665
    x667 = x3*x544*x63
    x668 = x134*x632
    x669 = V_tank*x15*x543
    x670 = x106*x3
    x671 = x12*x65
    x672 = V_tank*x36*x609
    x673 = -x117*x631 + x12*x284*x92 + x15*x618*(N_bf*x623 - x436*x656 + x530*x83 + x655) - x222*x650 + x340*x544 + x435*x659 - x594*x672 + x653*(N_bf*x83 + x128*x522 - x421*x521 + x593 + x603)
    x674 = x0*x54
    x675 = Q_external*x143
    x676 = V_tank*x3*x543
    x677 = x50*x541
    x678 = x544*x88
    x679 = x4*x544
    x680 = x611 - x613 + 5*x615
    x681 = -x37*x4 + x611 + x616
    x682 = 2*V_delay*x618*x681 - x544*x6 - x610*x680 - x617*x87 + x660 + x679
    x683 = x104 + x3*x81 + x4*x81 - x6*x81 - x97 - x99
    x684 = x611 + x615 - x638
    x685 = 3*V_delay*x610*x684 - x10*x469*x681 + x22*x544 - x24*x544 - x42*x640 + x626
    x686 = Q_external*x28
    x687 = -x103*x632 + x14*x544 + x16*x544 - x18*x544 + 3*x3*x618*x684 - x630*x680
    x688 = V_delay*x50
    x689 = x3*x32 - x32*x6 - x43 + x49 - x52 + x646
    x690 = -x122 - x125 + x132 + x14*x81 + x16*x81 - x18*x81
    x691 = -x137 - x138 + x140 + x22*x81 - x24*x81 + x589
    x692 = -x216*x38 + x615 + x620
    x693 = -x117*x680 - x131*x672 + x203*x692*x88 + x37*x544 - x40*x544 + x649
    x694 = 2*V_delay*x630*x692 - x20*x476*x684 - x36*x609*x652 + x544*x59 - x544*x61 + x659
    x695 = -2*V_delay*x163*x547 + 2*V_tank*x183*x26*x3*x32*x543 - lambda_c*x54*x68*(x2*x554 + x29*x554 + x31*x565 + x55*x579 + x572*x66) - recoil_prob*x272*(-V_delay*x547 + V_delay*x75*(x10*x111*x541 + x108*x694 + x119*x685 - x644 - x645*x688 + x647 - x648*x689 - x80*(2*x12*x3*x50*x692 - 2*x20*x32*x681 - 4*x3*x4*x544 - 2*x36*x4*x47*x609 + 2*x36*x544 + 2*x38*x544)) + x10*x542 + x118*x676 - x149*(x664 - x666 - x667*x88 + x668 - x669*x691 + x670*x694 - x671*x693 + x674*x687) - x20*x545*x65 + x20*x546 - x580*x9*(-x107*x689 + x108*x691 + x119*x683 - x134*x688 + x33*x98 - x582 + x583 - x690*x80) - x607*(V_delay*x106*x685 - x11*x608 - x171*x678 + x19*x677 + x617*x95 + x671*x682 - x676*x683 - x686*x687) + x675*(x106*x5*(-x117*x681 - x45*x679 - x47*x662 + x649 + x659 + x661*x692) + x120*x617 + x42*x677 - x48*x678 - x581*x665 + x674*x682 - x676*x690 - x686*x693)) + 2*x10*x163*x542 - 2*x149*(-lambda_a*lambda_b*x32*x579 + x163*x664 - x163*x666 + x163*x668 - x182*x667 - x597*x669 + x639*x674 + x658*x670 - x671*x673) - 2*x163*x20*x545*x65 + 2*x163*x20*x546 - x198*x580*(-x1*x554 - x107*x588 + x108*x597 + x119*x602 - x134*x584 - x163*x582 + x163*x583 + x176*x98 - x606*x80) + x5*x75*(x1*x572 + x10*x111*x163*x541 + x108*x658 - x119*x643 - x163*x644 + x163*x647 - x584*x645 - x588*x648 - x663*x80) - x607*(-2*Q_external*x28*x639 - 2*V_delay*x106*x643 - 2*V_delay*x163*x25*x544*x88 + 2*V_tank*x163*x3*x609*x7*x81 - 2*V_tank*x3*x543*x602 - 2*lambda_b*x20*x32*x554 - 2*x10*x163*x608*x7 + 2*x12*x625*x65 + 2*x163*x19*x50*x541) + x675*(-2*Q_external*x28*x673 + 2*V_delay*x106*x663 - 4*V_delay*x163*x47*x544*x88 + 2*V_tank*x163*x19*x3*x609*x81 - 2*V_tank*x3*x543*x606 + 2*lambda_a*lambda_b*x32*x565 + 2*x0*x54*x625 - 2*x163*x20*x665*x7 + 2*x163*x42*x50*x541)
    x696 = delta_t - t + t0
    x697 = abs(x696)
    x698 = delta_t/2 - t/2 + t0/2 - x697/2
    x699 = exp(-x156*x698)
    x700 = x696 - x697
    X = -N_e*Q*eff*rs*(-(x168*exp(x158*x162) + (x189*exp(x157*x162) + (x240*exp(x162*x190) + (-x241*x242*(x243*x377 + x479) + (x242*(-x243*x540 + x695) + x539)*exp(x154*x162))*exp(lambda_a*x162))*exp(lambda_b*x162))*exp(lambda_c*x162))*exp(-x159*x162) + (x168*exp(-x158*x698) + (x189*exp(-x157*x698) + (x240*exp(-x190*x698) + (-x241*x699*(-x377*x700 + x479) + (x539 + x699*(x540*x700 + x695))*exp(-x154*x698))*exp(-lambda_a*x698))*exp(-lambda_b*x698))*exp(-lambda_c*x698))*exp(x159*x698))/(2*Q_external*lambda_a*lambda_b*lambda_c*x152)

    return X


def steady_state_count_rate(rs,recoil_prob,V_tank,Q,lamp,eff, **kwargs):
    x0 = V_tank/Q
    x1 = lambda_a*x0
    x2 = lambda_b*x0
    x3 = lamp*x0
    x4 = lambda_a*lambda_b
    x5 = lambda_a - lambda_b
    x6 = lambda_a**2
    x7 = lambda_b**2
    x8 = exp(x1)
    x9 = exp(x2)
    x10 = x9*(lambda_a - 2*lambda_b)
    x11 = lambda_b + lamp
    x12 = x8*exp(x3)
    X = -Q*eff*rs*(lambda_b*x10 + lamp*(lambda_a*x8 + x10) - recoil_prob*x5*x9*(-x11*x12 + x11) - x12*x9*(2*lamp*x5 + x4 + x6 - 2*x7) + x6*x8)*exp(-x1)*exp(-x2)*exp(-x3)/(lamp**2*x5 + lamp*(x6 - x7) + x4*x5)

    return X


